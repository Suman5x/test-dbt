[0m13:04:22.049886 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107ee9f90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107eebd10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107f53490>]}


============================== 13:04:22.052406 | 06f60e64-5fbc-4e89-9e46-285d3880edd8 ==============================
[0m13:04:22.052406 [info ] [MainThread]: Running with dbt=1.7.0
[0m13:04:22.052717 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/Users/suman/.dbt', 'fail_fast': 'False', 'version_check': 'True', 'log_path': '/Users/suman/workspace/dbt-test/dbt_suman_local/temp_logs', 'debug': 'False', 'warn_error': 'None', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'default', 'invocation_command': 'dbt --log-path temp_logs run', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'static_parser': 'True', 'send_anonymous_usage_stats': 'True'}
[0m13:04:22.309261 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1116c60d0>]}
[0m13:04:22.342095 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107661890>]}
[0m13:04:22.342583 [info ] [MainThread]: Registered adapter: snowflake=1.7.0
[0m13:04:22.356394 [debug] [MainThread]: checksum: 8434eacd4ffdf0ca3ab22bf0e2d55b45306c9599613e842b959405abc489e606, vars: {}, profile: , target: , version: 1.7.0
[0m13:04:22.468558 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m13:04:22.468807 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m13:04:22.469509 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 1 unused configuration paths:
- models.dbt_suman_local.elementary
[0m13:04:22.472952 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110e3cf90>]}
[0m13:04:22.486221 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11222fd10>]}
[0m13:04:22.486449 [info ] [MainThread]: Found 32 models, 2 operations, 4 tests, 0 sources, 0 exposures, 0 metrics, 1092 macros, 0 groups, 0 semantic models
[0m13:04:22.486614 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107eeb590>]}
[0m13:04:22.487911 [info ] [MainThread]: 
[0m13:04:22.488299 [debug] [MainThread]: Acquiring new snowflake connection 'master'
[0m13:04:22.489282 [debug] [ThreadPool]: Acquiring new snowflake connection 'list_test_db'
[0m13:04:22.495792 [debug] [ThreadPool]: Using snowflake connection "list_test_db"
[0m13:04:22.495965 [debug] [ThreadPool]: On list_test_db: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "connection_name": "list_test_db"} */
show terse schemas in database test_db
    limit 10000
[0m13:04:22.496095 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m13:04:24.132813 [debug] [ThreadPool]: SQL status: SUCCESS 6 in 2.0 seconds
[0m13:04:24.136365 [debug] [ThreadPool]: On list_test_db: Close
[0m13:04:24.622640 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_test_db, now list_test_db_test_schema)
[0m13:04:24.635417 [debug] [ThreadPool]: Using snowflake connection "list_test_db_test_schema"
[0m13:04:24.635829 [debug] [ThreadPool]: On list_test_db_test_schema: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "connection_name": "list_test_db_test_schema"} */
show terse objects in test_db.test_schema limit 10000
[0m13:04:24.636131 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m13:04:26.019258 [debug] [ThreadPool]: SQL status: SUCCESS 32 in 1.0 seconds
[0m13:04:26.020557 [debug] [ThreadPool]: On list_test_db_test_schema: Close
[0m13:04:26.514729 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107018910>]}
[0m13:04:26.515377 [info ] [MainThread]: 
[0m13:04:26.515578 [info ] [MainThread]: Running 1 on-run-start hook
[0m13:04:26.529989 [debug] [MainThread]: Writing injected SQL for node "operation.elementary.elementary-on-run-start-0"
[0m13:04:26.532475 [info ] [MainThread]: 1 of 1 START hook: elementary.on-run-start.0 ................................... [RUN]
[0m13:04:26.532752 [info ] [MainThread]: 1 of 1 OK hook: elementary.on-run-start.0 ...................................... [[32mOK[0m in 0.00s]
[0m13:04:26.532908 [info ] [MainThread]: 
[0m13:04:26.533243 [info ] [MainThread]: Concurrency: 4 threads (target='dev')
[0m13:04:26.533375 [info ] [MainThread]: 
[0m13:04:26.535812 [debug] [Thread-1 (]: Began running node model.dbt_suman_local.my_first_dbt_model
[0m13:04:26.536032 [debug] [Thread-2 (]: Began running node model.elementary.data_monitoring_metrics
[0m13:04:26.536257 [debug] [Thread-3 (]: Began running node model.elementary.dbt_columns
[0m13:04:26.536481 [info ] [Thread-1 (]: 1 of 32 START sql table model test_schema.my_first_dbt_model ................... [RUN]
[0m13:04:26.536747 [debug] [Thread-4 (]: Began running node model.elementary.dbt_exposures
[0m13:04:26.537046 [info ] [Thread-2 (]: 2 of 32 START sql incremental model test_schema.data_monitoring_metrics ........ [RUN]
[0m13:04:26.537491 [info ] [Thread-3 (]: 3 of 32 START sql incremental model test_schema.dbt_columns .................... [RUN]
[0m13:04:26.537908 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_test_db_test_schema, now model.dbt_suman_local.my_first_dbt_model)
[0m13:04:26.538126 [info ] [Thread-4 (]: 4 of 32 START sql incremental model test_schema.dbt_exposures .................. [RUN]
[0m13:04:26.538963 [debug] [Thread-2 (]: Acquiring new snowflake connection 'model.elementary.data_monitoring_metrics'
[0m13:04:26.539310 [debug] [Thread-3 (]: Acquiring new snowflake connection 'model.elementary.dbt_columns'
[0m13:04:26.539654 [debug] [Thread-1 (]: Began compiling node model.dbt_suman_local.my_first_dbt_model
[0m13:04:26.540672 [debug] [Thread-4 (]: Acquiring new snowflake connection 'model.elementary.dbt_exposures'
[0m13:04:26.541346 [debug] [Thread-2 (]: Began compiling node model.elementary.data_monitoring_metrics
[0m13:04:26.541569 [debug] [Thread-3 (]: Began compiling node model.elementary.dbt_columns
[0m13:04:26.543469 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_suman_local.my_first_dbt_model"
[0m13:04:26.544037 [debug] [Thread-4 (]: Began compiling node model.elementary.dbt_exposures
[0m13:04:26.569964 [debug] [Thread-2 (]: Writing injected SQL for node "model.elementary.data_monitoring_metrics"
[0m13:04:26.580531 [debug] [Thread-3 (]: Writing injected SQL for node "model.elementary.dbt_columns"
[0m13:04:26.593030 [debug] [Thread-1 (]: Timing info for model.dbt_suman_local.my_first_dbt_model (compile): 13:04:26.541698 => 13:04:26.592872
[0m13:04:26.597960 [debug] [Thread-1 (]: Began executing node model.dbt_suman_local.my_first_dbt_model
[0m13:04:26.596715 [debug] [Thread-4 (]: Writing injected SQL for node "model.elementary.dbt_exposures"
[0m13:04:26.597705 [debug] [Thread-2 (]: Timing info for model.elementary.data_monitoring_metrics (compile): 13:04:26.544178 => 13:04:26.597605
[0m13:04:26.604330 [debug] [Thread-2 (]: Began executing node model.elementary.data_monitoring_metrics
[0m13:04:26.597407 [debug] [Thread-3 (]: Timing info for model.elementary.dbt_columns (compile): 13:04:26.570128 => 13:04:26.597256
[0m13:04:26.639702 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.data_monitoring_metrics"
[0m13:04:26.645717 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_suman_local.my_first_dbt_model"
[0m13:04:26.645978 [debug] [Thread-4 (]: Timing info for model.elementary.dbt_exposures (compile): 13:04:26.581093 => 13:04:26.645874
[0m13:04:26.646163 [debug] [Thread-3 (]: Began executing node model.elementary.dbt_columns
[0m13:04:26.646436 [debug] [Thread-2 (]: On model.elementary.data_monitoring_metrics: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.data_monitoring_metrics"} */
create or replace  temporary view test_db.test_schema.data_monitoring_metrics__dbt_tmp
  
   as (
    


    
    
        
    
    with empty_table as (
            select
            
                
        cast('dummy_string' as varchar) as id

,
                
        cast('dummy_string' as varchar) as full_table_name

,
                
        cast('dummy_string' as varchar) as column_name

,
                
        cast('dummy_string' as varchar) as metric_name

,
                
        cast(123456789.99 as float) as metric_value

,
                
        cast('dummy_string' as varchar) as source_value

,
                cast('2091-02-17' as timestamp) as bucket_start

,
                cast('2091-02-17' as timestamp) as bucket_end

,
                
        cast(123456789 as integer) as bucket_duration_hours

,
                cast('2091-02-17' as timestamp) as updated_at

,
                
        cast('dummy_string' as varchar) as dimension

,
                
        cast('dummy_string' as varchar) as dimension_value

,
                
        cast('dummy_string' as varchar) as metric_properties

,
                cast('2091-02-17' as timestamp) as created_at


            )
        select * from empty_table
        where 1 = 0

  );
[0m13:04:26.646737 [debug] [Thread-4 (]: Began executing node model.elementary.dbt_exposures
[0m13:04:26.650193 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_columns"
[0m13:04:26.650583 [debug] [Thread-1 (]: Using snowflake connection "model.dbt_suman_local.my_first_dbt_model"
[0m13:04:26.650780 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m13:04:26.654390 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_exposures"
[0m13:04:26.654623 [debug] [Thread-3 (]: On model.elementary.dbt_columns: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_columns"} */
create or replace  temporary view test_db.test_schema.dbt_columns__dbt_tmp
  
   as (
    

with empty_table as (
            select
            
                
        cast('dummy_string' as varchar) as unique_id

,
                
        cast('dummy_string' as varchar) as parent_unique_id

,
                
        cast('dummy_string' as varchar) as name

,
                
        cast('dummy_string' as varchar) as data_type

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as meta

,
                
        cast('dummy_string' as varchar) as database_name

,
                
        cast('dummy_string' as varchar) as schema_name

,
                
        cast('dummy_string' as varchar) as table_name

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as description

,
                
        cast('dummy_string' as varchar) as resource_type

,
                
        cast('dummy_string' as varchar) as generated_at

,
                
        cast('dummy_string' as varchar) as metadata_hash


            )
        select * from empty_table
        where 1 = 0
  );
[0m13:04:26.654870 [debug] [Thread-1 (]: On model.dbt_suman_local.my_first_dbt_model: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.dbt_suman_local.my_first_dbt_model"} */
create or replace transient table test_db.test_schema.my_first_dbt_model
         as
        (/*
    Welcome to your first dbt model!
    Did you know that you can also configure models directly within SQL files?
    This will override configurations stated in dbt_project.yml

    Try changing "table" to "view" below
*/



with source_data as (

    selet 1 as id
    union all
    select null as id

)

select *
from source_data

/*
    Uncomment the line below to remove records with null `id` values
*/

-- where id is not null
        );
[0m13:04:26.655662 [debug] [Thread-4 (]: On model.elementary.dbt_exposures: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_exposures"} */
create or replace  temporary view test_db.test_schema.dbt_exposures__dbt_tmp
  
   as (
    

with empty_table as (
            select
            
                
        cast('dummy_string' as varchar) as unique_id

,
                
        cast('dummy_string' as varchar) as name

,
                
        cast('dummy_string' as varchar) as maturity

,
                
        cast('dummy_string' as varchar) as type

,
                
        cast('dummy_string' as varchar) as owner_email

,
                
        cast('dummy_string' as varchar) as owner_name

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as url

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as description

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as meta

,
                
        cast('dummy_string' as varchar) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as original_path

,
                
        cast('dummy_string' as varchar) as path

,
                
        cast('dummy_string' as varchar) as generated_at

,
                
        cast('dummy_string' as varchar) as metadata_hash

,
                
        cast('dummy_string' as varchar) as label

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as raw_queries


            )
        select * from empty_table
        where 1 = 0
  );
[0m13:04:26.656106 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m13:04:26.656303 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:04:26.656477 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m13:04:27.998109 [debug] [Thread-1 (]: Snowflake adapter: Snowflake query id: 01b07366-0504-d562-0001-d7470004c1e2
[0m13:04:27.998384 [debug] [Thread-1 (]: Snowflake adapter: Snowflake error: 001003 (42000): SQL compilation error:
syntax error line 15 at position 10 unexpected '1'.
syntax error line 21 at position 0 unexpected 'select'.
[0m13:04:27.998661 [debug] [Thread-1 (]: Timing info for model.dbt_suman_local.my_first_dbt_model (execute): 13:04:26.598163 => 13:04:27.998557
[0m13:04:27.998841 [debug] [Thread-1 (]: On model.dbt_suman_local.my_first_dbt_model: Close
[0m13:04:28.081650 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:28.086919 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_columns"
[0m13:04:28.087169 [debug] [Thread-3 (]: On model.elementary.dbt_columns: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_columns"} */
describe table test_db.test_schema.dbt_columns__dbt_tmp
[0m13:04:28.124037 [debug] [Thread-4 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:28.126085 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_exposures"
[0m13:04:28.126285 [debug] [Thread-4 (]: On model.elementary.dbt_exposures: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_exposures"} */
describe table test_db.test_schema.dbt_exposures__dbt_tmp
[0m13:04:28.169721 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 2.0 seconds
[0m13:04:28.171874 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.data_monitoring_metrics"
[0m13:04:28.172087 [debug] [Thread-2 (]: On model.elementary.data_monitoring_metrics: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.data_monitoring_metrics"} */
describe table test_db.test_schema.data_monitoring_metrics__dbt_tmp
[0m13:04:28.374105 [debug] [Thread-3 (]: SQL status: SUCCESS 13 in 0.0 seconds
[0m13:04:28.378064 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_columns"
[0m13:04:28.378363 [debug] [Thread-3 (]: On model.elementary.dbt_columns: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_columns"} */
describe table test_db.test_schema.dbt_columns
[0m13:04:28.405516 [debug] [Thread-4 (]: SQL status: SUCCESS 19 in 0.0 seconds
[0m13:04:28.409160 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_exposures"
[0m13:04:28.409425 [debug] [Thread-4 (]: On model.elementary.dbt_exposures: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_exposures"} */
describe table test_db.test_schema.dbt_exposures
[0m13:04:28.476544 [debug] [Thread-2 (]: SQL status: SUCCESS 14 in 0.0 seconds
[0m13:04:28.479410 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.data_monitoring_metrics"
[0m13:04:28.479650 [debug] [Thread-2 (]: On model.elementary.data_monitoring_metrics: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.data_monitoring_metrics"} */
describe table test_db.test_schema.data_monitoring_metrics
[0m13:04:28.484269 [debug] [Thread-1 (]: Database Error in model my_first_dbt_model (models/example/my_first_dbt_model.sql)
  001003 (42000): SQL compilation error:
  syntax error line 15 at position 10 unexpected '1'.
  syntax error line 21 at position 0 unexpected 'select'.
  compiled Code at target/run/dbt_suman_local/models/example/my_first_dbt_model.sql
[0m13:04:28.484570 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11393d9d0>]}
[0m13:04:28.484903 [error] [Thread-1 (]: 1 of 32 ERROR creating sql table model test_schema.my_first_dbt_model .......... [[31mERROR[0m in 1.95s]
[0m13:04:28.485220 [debug] [Thread-1 (]: Finished running node model.dbt_suman_local.my_first_dbt_model
[0m13:04:28.485444 [debug] [Thread-1 (]: Began running node model.elementary.dbt_invocations
[0m13:04:28.485762 [info ] [Thread-1 (]: 5 of 32 START sql incremental model test_schema.dbt_invocations ................ [RUN]
[0m13:04:28.486125 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_suman_local.my_first_dbt_model, now model.elementary.dbt_invocations)
[0m13:04:28.486309 [debug] [Thread-1 (]: Began compiling node model.elementary.dbt_invocations
[0m13:04:28.507464 [debug] [Thread-1 (]: Writing injected SQL for node "model.elementary.dbt_invocations"
[0m13:04:28.509060 [debug] [Thread-1 (]: Timing info for model.elementary.dbt_invocations (compile): 13:04:28.486427 => 13:04:28.508939
[0m13:04:28.509246 [debug] [Thread-1 (]: Began executing node model.elementary.dbt_invocations
[0m13:04:28.513195 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.dbt_invocations"
[0m13:04:28.513463 [debug] [Thread-1 (]: On model.elementary.dbt_invocations: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_invocations"} */
create or replace  temporary view test_db.test_schema.dbt_invocations__dbt_tmp
  
   as (
    

with empty_table as (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as varchar) as invocation_id

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as job_id

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as job_name

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as job_run_id

,
                
        cast('dummy_string' as varchar) as run_started_at

,
                
        cast('dummy_string' as varchar) as run_completed_at

,
                
        cast('dummy_string' as varchar) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar) as command

,
                
        cast('dummy_string' as varchar) as dbt_version

,
                
        cast('dummy_string' as varchar) as elementary_version

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as invocation_vars

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as vars

,
                
        cast('dummy_string' as varchar) as target_name

,
                
        cast('dummy_string' as varchar) as target_database

,
                
        cast('dummy_string' as varchar) as target_schema

,
                
        cast('dummy_string' as varchar) as target_profile_name

,
                
        cast(123456789 as integer) as threads

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as selected

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as yaml_selector

,
                
        cast('dummy_string' as varchar) as project_id

,
                
        cast('dummy_string' as varchar) as project_name

,
                
        cast('dummy_string' as varchar) as env

,
                
        cast('dummy_string' as varchar) as env_id

,
                
        cast('dummy_string' as varchar) as cause_category

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as cause

,
                
        cast('dummy_string' as varchar) as pull_request_id

,
                
        cast('dummy_string' as varchar) as git_sha

,
                
        cast('dummy_string' as varchar) as orchestrator

,
                
        cast('dummy_string' as varchar) as dbt_user

,
                
        cast('dummy_string' as varchar) as job_url

,
                
        cast('dummy_string' as varchar) as job_run_url

,
                
        cast('dummy_string' as varchar) as account_id


            )
        select * from empty_table
        where 1 = 0
  );
[0m13:04:28.513721 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:04:28.645441 [debug] [Thread-3 (]: SQL status: SUCCESS 13 in 0.0 seconds
[0m13:04:28.655180 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_columns"
[0m13:04:28.655449 [debug] [Thread-3 (]: On model.elementary.dbt_columns: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_columns"} */
describe table test_db.test_schema.dbt_columns__dbt_tmp
[0m13:04:28.665607 [debug] [Thread-4 (]: SQL status: SUCCESS 19 in 0.0 seconds
[0m13:04:28.669337 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_exposures"
[0m13:04:28.669577 [debug] [Thread-4 (]: On model.elementary.dbt_exposures: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_exposures"} */
describe table test_db.test_schema.dbt_exposures__dbt_tmp
[0m13:04:28.735022 [debug] [Thread-2 (]: SQL status: SUCCESS 14 in 0.0 seconds
[0m13:04:28.738949 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.data_monitoring_metrics"
[0m13:04:28.739273 [debug] [Thread-2 (]: On model.elementary.data_monitoring_metrics: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.data_monitoring_metrics"} */
describe table test_db.test_schema.data_monitoring_metrics__dbt_tmp
[0m13:04:28.924817 [debug] [Thread-3 (]: SQL status: SUCCESS 13 in 0.0 seconds
[0m13:04:28.930751 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_columns"
[0m13:04:28.931189 [debug] [Thread-3 (]: On model.elementary.dbt_columns: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_columns"} */
describe table "TEST_DB"."TEST_SCHEMA"."DBT_COLUMNS"
[0m13:04:28.990632 [debug] [Thread-4 (]: SQL status: SUCCESS 19 in 0.0 seconds
[0m13:04:28.995659 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_exposures"
[0m13:04:28.996064 [debug] [Thread-4 (]: On model.elementary.dbt_exposures: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_exposures"} */
describe table "TEST_DB"."TEST_SCHEMA"."DBT_EXPOSURES"
[0m13:04:29.012193 [debug] [Thread-2 (]: SQL status: SUCCESS 14 in 0.0 seconds
[0m13:04:29.016853 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.data_monitoring_metrics"
[0m13:04:29.017204 [debug] [Thread-2 (]: On model.elementary.data_monitoring_metrics: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.data_monitoring_metrics"} */
describe table "TEST_DB"."TEST_SCHEMA"."DATA_MONITORING_METRICS"
[0m13:04:29.206479 [debug] [Thread-3 (]: SQL status: SUCCESS 13 in 0.0 seconds
[0m13:04:29.223907 [debug] [Thread-3 (]: 
    In "TEST_DB"."TEST_SCHEMA"."DBT_COLUMNS":
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m13:04:29.252387 [debug] [Thread-3 (]: Writing runtime sql for node "model.elementary.dbt_columns"
[0m13:04:29.260926 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_columns"
[0m13:04:29.261175 [debug] [Thread-3 (]: On model.elementary.dbt_columns: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_columns"} */
-- back compat for old kwarg name
  
  begin;
[0m13:04:29.265707 [debug] [Thread-4 (]: SQL status: SUCCESS 19 in 0.0 seconds
[0m13:04:29.268014 [debug] [Thread-4 (]: 
    In "TEST_DB"."TEST_SCHEMA"."DBT_EXPOSURES":
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m13:04:29.269970 [debug] [Thread-4 (]: Writing runtime sql for node "model.elementary.dbt_exposures"
[0m13:04:29.271071 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_exposures"
[0m13:04:29.271274 [debug] [Thread-4 (]: On model.elementary.dbt_exposures: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_exposures"} */
-- back compat for old kwarg name
  
  begin;
[0m13:04:29.317718 [debug] [Thread-2 (]: SQL status: SUCCESS 14 in 0.0 seconds
[0m13:04:29.319982 [debug] [Thread-2 (]: 
    In "TEST_DB"."TEST_SCHEMA"."DATA_MONITORING_METRICS":
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m13:04:29.323917 [debug] [Thread-2 (]: Writing runtime sql for node "model.elementary.data_monitoring_metrics"
[0m13:04:29.325087 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.data_monitoring_metrics"
[0m13:04:29.325334 [debug] [Thread-2 (]: On model.elementary.data_monitoring_metrics: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.data_monitoring_metrics"} */
-- back compat for old kwarg name
  
  begin;
[0m13:04:29.546996 [debug] [Thread-4 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:29.547956 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_exposures"
[0m13:04:29.548774 [debug] [Thread-4 (]: On model.elementary.dbt_exposures: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_exposures"} */
merge into test_db.test_schema.dbt_exposures as DBT_INTERNAL_DEST
        using test_db.test_schema.dbt_exposures__dbt_tmp as DBT_INTERNAL_SOURCE
        on (
                DBT_INTERNAL_SOURCE.unique_id = DBT_INTERNAL_DEST.unique_id
            )

    
    when matched then update set
        "UNIQUE_ID" = DBT_INTERNAL_SOURCE."UNIQUE_ID","NAME" = DBT_INTERNAL_SOURCE."NAME","MATURITY" = DBT_INTERNAL_SOURCE."MATURITY","TYPE" = DBT_INTERNAL_SOURCE."TYPE","OWNER_EMAIL" = DBT_INTERNAL_SOURCE."OWNER_EMAIL","OWNER_NAME" = DBT_INTERNAL_SOURCE."OWNER_NAME","URL" = DBT_INTERNAL_SOURCE."URL","DEPENDS_ON_MACROS" = DBT_INTERNAL_SOURCE."DEPENDS_ON_MACROS","DEPENDS_ON_NODES" = DBT_INTERNAL_SOURCE."DEPENDS_ON_NODES","DESCRIPTION" = DBT_INTERNAL_SOURCE."DESCRIPTION","TAGS" = DBT_INTERNAL_SOURCE."TAGS","META" = DBT_INTERNAL_SOURCE."META","PACKAGE_NAME" = DBT_INTERNAL_SOURCE."PACKAGE_NAME","ORIGINAL_PATH" = DBT_INTERNAL_SOURCE."ORIGINAL_PATH","PATH" = DBT_INTERNAL_SOURCE."PATH","GENERATED_AT" = DBT_INTERNAL_SOURCE."GENERATED_AT","METADATA_HASH" = DBT_INTERNAL_SOURCE."METADATA_HASH","LABEL" = DBT_INTERNAL_SOURCE."LABEL","RAW_QUERIES" = DBT_INTERNAL_SOURCE."RAW_QUERIES"
    

    when not matched then insert
        ("UNIQUE_ID", "NAME", "MATURITY", "TYPE", "OWNER_EMAIL", "OWNER_NAME", "URL", "DEPENDS_ON_MACROS", "DEPENDS_ON_NODES", "DESCRIPTION", "TAGS", "META", "PACKAGE_NAME", "ORIGINAL_PATH", "PATH", "GENERATED_AT", "METADATA_HASH", "LABEL", "RAW_QUERIES")
    values
        ("UNIQUE_ID", "NAME", "MATURITY", "TYPE", "OWNER_EMAIL", "OWNER_NAME", "URL", "DEPENDS_ON_MACROS", "DEPENDS_ON_NODES", "DESCRIPTION", "TAGS", "META", "PACKAGE_NAME", "ORIGINAL_PATH", "PATH", "GENERATED_AT", "METADATA_HASH", "LABEL", "RAW_QUERIES")

;
[0m13:04:29.551178 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:29.551963 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_columns"
[0m13:04:29.552543 [debug] [Thread-3 (]: On model.elementary.dbt_columns: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_columns"} */
merge into test_db.test_schema.dbt_columns as DBT_INTERNAL_DEST
        using test_db.test_schema.dbt_columns__dbt_tmp as DBT_INTERNAL_SOURCE
        on (
                DBT_INTERNAL_SOURCE.unique_id = DBT_INTERNAL_DEST.unique_id
            )

    
    when matched then update set
        "UNIQUE_ID" = DBT_INTERNAL_SOURCE."UNIQUE_ID","PARENT_UNIQUE_ID" = DBT_INTERNAL_SOURCE."PARENT_UNIQUE_ID","NAME" = DBT_INTERNAL_SOURCE."NAME","DATA_TYPE" = DBT_INTERNAL_SOURCE."DATA_TYPE","TAGS" = DBT_INTERNAL_SOURCE."TAGS","META" = DBT_INTERNAL_SOURCE."META","DATABASE_NAME" = DBT_INTERNAL_SOURCE."DATABASE_NAME","SCHEMA_NAME" = DBT_INTERNAL_SOURCE."SCHEMA_NAME","TABLE_NAME" = DBT_INTERNAL_SOURCE."TABLE_NAME","DESCRIPTION" = DBT_INTERNAL_SOURCE."DESCRIPTION","RESOURCE_TYPE" = DBT_INTERNAL_SOURCE."RESOURCE_TYPE","GENERATED_AT" = DBT_INTERNAL_SOURCE."GENERATED_AT","METADATA_HASH" = DBT_INTERNAL_SOURCE."METADATA_HASH"
    

    when not matched then insert
        ("UNIQUE_ID", "PARENT_UNIQUE_ID", "NAME", "DATA_TYPE", "TAGS", "META", "DATABASE_NAME", "SCHEMA_NAME", "TABLE_NAME", "DESCRIPTION", "RESOURCE_TYPE", "GENERATED_AT", "METADATA_HASH")
    values
        ("UNIQUE_ID", "PARENT_UNIQUE_ID", "NAME", "DATA_TYPE", "TAGS", "META", "DATABASE_NAME", "SCHEMA_NAME", "TABLE_NAME", "DESCRIPTION", "RESOURCE_TYPE", "GENERATED_AT", "METADATA_HASH")

;
[0m13:04:29.612472 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:29.613153 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.data_monitoring_metrics"
[0m13:04:29.613721 [debug] [Thread-2 (]: On model.elementary.data_monitoring_metrics: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.data_monitoring_metrics"} */
merge into test_db.test_schema.data_monitoring_metrics as DBT_INTERNAL_DEST
        using test_db.test_schema.data_monitoring_metrics__dbt_tmp as DBT_INTERNAL_SOURCE
        on (
                DBT_INTERNAL_SOURCE.id = DBT_INTERNAL_DEST.id
            )

    
    when matched then update set
        "ID" = DBT_INTERNAL_SOURCE."ID","FULL_TABLE_NAME" = DBT_INTERNAL_SOURCE."FULL_TABLE_NAME","COLUMN_NAME" = DBT_INTERNAL_SOURCE."COLUMN_NAME","METRIC_NAME" = DBT_INTERNAL_SOURCE."METRIC_NAME","METRIC_VALUE" = DBT_INTERNAL_SOURCE."METRIC_VALUE","SOURCE_VALUE" = DBT_INTERNAL_SOURCE."SOURCE_VALUE","BUCKET_START" = DBT_INTERNAL_SOURCE."BUCKET_START","BUCKET_END" = DBT_INTERNAL_SOURCE."BUCKET_END","BUCKET_DURATION_HOURS" = DBT_INTERNAL_SOURCE."BUCKET_DURATION_HOURS","UPDATED_AT" = DBT_INTERNAL_SOURCE."UPDATED_AT","DIMENSION" = DBT_INTERNAL_SOURCE."DIMENSION","DIMENSION_VALUE" = DBT_INTERNAL_SOURCE."DIMENSION_VALUE","METRIC_PROPERTIES" = DBT_INTERNAL_SOURCE."METRIC_PROPERTIES","CREATED_AT" = DBT_INTERNAL_SOURCE."CREATED_AT"
    

    when not matched then insert
        ("ID", "FULL_TABLE_NAME", "COLUMN_NAME", "METRIC_NAME", "METRIC_VALUE", "SOURCE_VALUE", "BUCKET_START", "BUCKET_END", "BUCKET_DURATION_HOURS", "UPDATED_AT", "DIMENSION", "DIMENSION_VALUE", "METRIC_PROPERTIES", "CREATED_AT")
    values
        ("ID", "FULL_TABLE_NAME", "COLUMN_NAME", "METRIC_NAME", "METRIC_VALUE", "SOURCE_VALUE", "BUCKET_START", "BUCKET_END", "BUCKET_DURATION_HOURS", "UPDATED_AT", "DIMENSION", "DIMENSION_VALUE", "METRIC_PROPERTIES", "CREATED_AT")

;
[0m13:04:29.922953 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:29.927190 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.dbt_invocations"
[0m13:04:29.927593 [debug] [Thread-1 (]: On model.elementary.dbt_invocations: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_invocations"} */
describe table test_db.test_schema.dbt_invocations__dbt_tmp
[0m13:04:30.220096 [debug] [Thread-1 (]: SQL status: SUCCESS 34 in 0.0 seconds
[0m13:04:30.230583 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.dbt_invocations"
[0m13:04:30.231262 [debug] [Thread-1 (]: On model.elementary.dbt_invocations: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_invocations"} */
describe table test_db.test_schema.dbt_invocations
[0m13:04:30.528684 [debug] [Thread-1 (]: SQL status: SUCCESS 34 in 0.0 seconds
[0m13:04:30.541242 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.dbt_invocations"
[0m13:04:30.542421 [debug] [Thread-1 (]: On model.elementary.dbt_invocations: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_invocations"} */
describe table test_db.test_schema.dbt_invocations__dbt_tmp
[0m13:04:30.543198 [debug] [Thread-4 (]: SQL status: SUCCESS 0 in 1.0 seconds
[0m13:04:30.544532 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_exposures"
[0m13:04:30.545034 [debug] [Thread-4 (]: On model.elementary.dbt_exposures: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_exposures"} */
COMMIT
[0m13:04:30.817299 [debug] [Thread-1 (]: SQL status: SUCCESS 34 in 0.0 seconds
[0m13:04:30.830477 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.dbt_invocations"
[0m13:04:30.832279 [debug] [Thread-1 (]: On model.elementary.dbt_invocations: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_invocations"} */
describe table "TEST_DB"."TEST_SCHEMA"."DBT_INVOCATIONS"
[0m13:04:30.867043 [debug] [Thread-2 (]: SQL status: SUCCESS 0 in 1.0 seconds
[0m13:04:30.867765 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.data_monitoring_metrics"
[0m13:04:30.868274 [debug] [Thread-2 (]: On model.elementary.data_monitoring_metrics: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.data_monitoring_metrics"} */
COMMIT
[0m13:04:30.877782 [debug] [Thread-4 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:30.887684 [debug] [Thread-4 (]: Applying DROP to: test_db.test_schema.dbt_exposures__dbt_tmp
[0m13:04:30.893382 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_exposures"
[0m13:04:30.893686 [debug] [Thread-4 (]: On model.elementary.dbt_exposures: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_exposures"} */
drop view if exists test_db.test_schema.dbt_exposures__dbt_tmp cascade
[0m13:04:31.018290 [debug] [Thread-3 (]: SQL status: SUCCESS 0 in 1.0 seconds
[0m13:04:31.018600 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_columns"
[0m13:04:31.018770 [debug] [Thread-3 (]: On model.elementary.dbt_columns: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_columns"} */
COMMIT
[0m13:04:31.111403 [debug] [Thread-1 (]: SQL status: SUCCESS 34 in 0.0 seconds
[0m13:04:31.116757 [debug] [Thread-1 (]: 
    In "TEST_DB"."TEST_SCHEMA"."DBT_INVOCATIONS":
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m13:04:31.119776 [debug] [Thread-1 (]: Writing runtime sql for node "model.elementary.dbt_invocations"
[0m13:04:31.121925 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.dbt_invocations"
[0m13:04:31.122238 [debug] [Thread-1 (]: On model.elementary.dbt_invocations: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_invocations"} */
-- back compat for old kwarg name
  
  begin;
[0m13:04:31.187576 [debug] [Thread-4 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:31.219208 [debug] [Thread-4 (]: Elementary: [dbt_exposures] Flattening the artifacts.
[0m13:04:31.221548 [debug] [Thread-4 (]: Elementary: [dbt_exposures] Flattened 0 artifacts.
[0m13:04:31.239076 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_exposures"
[0m13:04:31.239387 [debug] [Thread-4 (]: On model.elementary.dbt_exposures: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_exposures"} */
create or replace temporary table test_db.test_schema.dbt_exposures__tmp_20231120073431230020
         as
        (
        SELECT
        
            *
        
        FROM test_db.test_schema.dbt_exposures
        WHERE 1 = 0
    
        );
[0m13:04:31.305785 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:31.307945 [debug] [Thread-2 (]: Applying DROP to: test_db.test_schema.data_monitoring_metrics__dbt_tmp
[0m13:04:31.308484 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.data_monitoring_metrics"
[0m13:04:31.308660 [debug] [Thread-2 (]: On model.elementary.data_monitoring_metrics: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.data_monitoring_metrics"} */
drop view if exists test_db.test_schema.data_monitoring_metrics__dbt_tmp cascade
[0m13:04:31.427234 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:31.427591 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.dbt_invocations"
[0m13:04:31.428064 [debug] [Thread-1 (]: On model.elementary.dbt_invocations: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_invocations"} */
merge into test_db.test_schema.dbt_invocations as DBT_INTERNAL_DEST
        using test_db.test_schema.dbt_invocations__dbt_tmp as DBT_INTERNAL_SOURCE
        on (
                DBT_INTERNAL_SOURCE.invocation_id = DBT_INTERNAL_DEST.invocation_id
            )

    
    when matched then update set
        "INVOCATION_ID" = DBT_INTERNAL_SOURCE."INVOCATION_ID","JOB_ID" = DBT_INTERNAL_SOURCE."JOB_ID","JOB_NAME" = DBT_INTERNAL_SOURCE."JOB_NAME","JOB_RUN_ID" = DBT_INTERNAL_SOURCE."JOB_RUN_ID","RUN_STARTED_AT" = DBT_INTERNAL_SOURCE."RUN_STARTED_AT","RUN_COMPLETED_AT" = DBT_INTERNAL_SOURCE."RUN_COMPLETED_AT","GENERATED_AT" = DBT_INTERNAL_SOURCE."GENERATED_AT","CREATED_AT" = DBT_INTERNAL_SOURCE."CREATED_AT","COMMAND" = DBT_INTERNAL_SOURCE."COMMAND","DBT_VERSION" = DBT_INTERNAL_SOURCE."DBT_VERSION","ELEMENTARY_VERSION" = DBT_INTERNAL_SOURCE."ELEMENTARY_VERSION","FULL_REFRESH" = DBT_INTERNAL_SOURCE."FULL_REFRESH","INVOCATION_VARS" = DBT_INTERNAL_SOURCE."INVOCATION_VARS","VARS" = DBT_INTERNAL_SOURCE."VARS","TARGET_NAME" = DBT_INTERNAL_SOURCE."TARGET_NAME","TARGET_DATABASE" = DBT_INTERNAL_SOURCE."TARGET_DATABASE","TARGET_SCHEMA" = DBT_INTERNAL_SOURCE."TARGET_SCHEMA","TARGET_PROFILE_NAME" = DBT_INTERNAL_SOURCE."TARGET_PROFILE_NAME","THREADS" = DBT_INTERNAL_SOURCE."THREADS","SELECTED" = DBT_INTERNAL_SOURCE."SELECTED","YAML_SELECTOR" = DBT_INTERNAL_SOURCE."YAML_SELECTOR","PROJECT_ID" = DBT_INTERNAL_SOURCE."PROJECT_ID","PROJECT_NAME" = DBT_INTERNAL_SOURCE."PROJECT_NAME","ENV" = DBT_INTERNAL_SOURCE."ENV","ENV_ID" = DBT_INTERNAL_SOURCE."ENV_ID","CAUSE_CATEGORY" = DBT_INTERNAL_SOURCE."CAUSE_CATEGORY","CAUSE" = DBT_INTERNAL_SOURCE."CAUSE","PULL_REQUEST_ID" = DBT_INTERNAL_SOURCE."PULL_REQUEST_ID","GIT_SHA" = DBT_INTERNAL_SOURCE."GIT_SHA","ORCHESTRATOR" = DBT_INTERNAL_SOURCE."ORCHESTRATOR","DBT_USER" = DBT_INTERNAL_SOURCE."DBT_USER","JOB_URL" = DBT_INTERNAL_SOURCE."JOB_URL","JOB_RUN_URL" = DBT_INTERNAL_SOURCE."JOB_RUN_URL","ACCOUNT_ID" = DBT_INTERNAL_SOURCE."ACCOUNT_ID"
    

    when not matched then insert
        ("INVOCATION_ID", "JOB_ID", "JOB_NAME", "JOB_RUN_ID", "RUN_STARTED_AT", "RUN_COMPLETED_AT", "GENERATED_AT", "CREATED_AT", "COMMAND", "DBT_VERSION", "ELEMENTARY_VERSION", "FULL_REFRESH", "INVOCATION_VARS", "VARS", "TARGET_NAME", "TARGET_DATABASE", "TARGET_SCHEMA", "TARGET_PROFILE_NAME", "THREADS", "SELECTED", "YAML_SELECTOR", "PROJECT_ID", "PROJECT_NAME", "ENV", "ENV_ID", "CAUSE_CATEGORY", "CAUSE", "PULL_REQUEST_ID", "GIT_SHA", "ORCHESTRATOR", "DBT_USER", "JOB_URL", "JOB_RUN_URL", "ACCOUNT_ID")
    values
        ("INVOCATION_ID", "JOB_ID", "JOB_NAME", "JOB_RUN_ID", "RUN_STARTED_AT", "RUN_COMPLETED_AT", "GENERATED_AT", "CREATED_AT", "COMMAND", "DBT_VERSION", "ELEMENTARY_VERSION", "FULL_REFRESH", "INVOCATION_VARS", "VARS", "TARGET_NAME", "TARGET_DATABASE", "TARGET_SCHEMA", "TARGET_PROFILE_NAME", "THREADS", "SELECTED", "YAML_SELECTOR", "PROJECT_ID", "PROJECT_NAME", "ENV", "ENV_ID", "CAUSE_CATEGORY", "CAUSE", "PULL_REQUEST_ID", "GIT_SHA", "ORCHESTRATOR", "DBT_USER", "JOB_URL", "JOB_RUN_URL", "ACCOUNT_ID")

;
[0m13:04:31.610893 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:31.656107 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.data_monitoring_metrics"
[0m13:04:31.656401 [debug] [Thread-2 (]: On model.elementary.data_monitoring_metrics: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.data_monitoring_metrics"} */
select
      1700445871.655565 as build_timestamp,
      count(*) as row_count
    from test_db.test_schema.data_monitoring_metrics
[0m13:04:31.795711 [debug] [Thread-4 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:31.820128 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_exposures"
[0m13:04:31.820447 [debug] [Thread-4 (]: On model.elementary.dbt_exposures: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_exposures"} */
create or replace  table test_db.test_schema.dbt_exposures
         as
        (select * from test_db.test_schema.dbt_exposures__tmp_20231120073431230020
        );
[0m13:04:32.078533 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:32.091558 [debug] [Thread-3 (]: Applying DROP to: test_db.test_schema.dbt_columns__dbt_tmp
[0m13:04:32.093840 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_columns"
[0m13:04:32.094468 [debug] [Thread-3 (]: On model.elementary.dbt_columns: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_columns"} */
drop view if exists test_db.test_schema.dbt_columns__dbt_tmp cascade
[0m13:04:32.228714 [debug] [Thread-1 (]: SQL status: SUCCESS 0 in 1.0 seconds
[0m13:04:32.230442 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.dbt_invocations"
[0m13:04:32.231783 [debug] [Thread-1 (]: On model.elementary.dbt_invocations: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_invocations"} */
COMMIT
[0m13:04:32.356484 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:32.384565 [debug] [Thread-2 (]: Timing info for model.elementary.data_monitoring_metrics (execute): 13:04:26.604465 => 13:04:32.384269
[0m13:04:32.385118 [debug] [Thread-2 (]: On model.elementary.data_monitoring_metrics: Close
[0m13:04:32.399783 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:32.407304 [debug] [Thread-3 (]: Elementary: [dbt_columns] Flattening the artifacts.
[0m13:04:32.522126 [debug] [Thread-4 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:32.543073 [debug] [Thread-4 (]: Applying DROP to: test_db.test_schema.dbt_exposures__tmp_20231120073431230020
[0m13:04:32.556820 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_exposures"
[0m13:04:32.582078 [debug] [Thread-4 (]: On model.elementary.dbt_exposures: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_exposures"} */
drop table if exists test_db.test_schema.dbt_exposures__tmp_20231120073431230020 cascade
[0m13:04:32.621879 [debug] [Thread-3 (]: Elementary: [dbt_columns] Flattened 166 artifacts.
[0m13:04:32.624332 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_columns"
[0m13:04:32.624614 [debug] [Thread-3 (]: On model.elementary.dbt_columns: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_columns"} */
create or replace temporary table test_db.test_schema.dbt_columns__tmp_20231120073432622819
         as
        (
        SELECT
        
            *
        
        FROM test_db.test_schema.dbt_columns
        WHERE 1 = 0
    
        );
[0m13:04:32.648431 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:32.650383 [debug] [Thread-1 (]: Applying DROP to: test_db.test_schema.dbt_invocations__dbt_tmp
[0m13:04:32.650931 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.dbt_invocations"
[0m13:04:32.651094 [debug] [Thread-1 (]: On model.elementary.dbt_invocations: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_invocations"} */
drop view if exists test_db.test_schema.dbt_invocations__dbt_tmp cascade
[0m13:04:32.897132 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112c7f490>]}
[0m13:04:32.900691 [info ] [Thread-2 (]: 2 of 32 OK created sql incremental model test_schema.data_monitoring_metrics ... [[32mSUCCESS 0[0m in 6.36s]
[0m13:04:32.901792 [debug] [Thread-2 (]: Finished running node model.elementary.data_monitoring_metrics
[0m13:04:32.902736 [debug] [Thread-2 (]: Began running node model.elementary.dbt_metrics
[0m13:04:32.903869 [info ] [Thread-2 (]: 6 of 32 START sql incremental model test_schema.dbt_metrics .................... [RUN]
[0m13:04:32.905245 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.elementary.data_monitoring_metrics, now model.elementary.dbt_metrics)
[0m13:04:32.906039 [debug] [Thread-2 (]: Began compiling node model.elementary.dbt_metrics
[0m13:04:32.939952 [debug] [Thread-2 (]: Writing injected SQL for node "model.elementary.dbt_metrics"
[0m13:04:32.940862 [debug] [Thread-4 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:32.944302 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_exposures"
[0m13:04:32.944587 [debug] [Thread-4 (]: On model.elementary.dbt_exposures: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_exposures"} */
select
      1700445872.943725 as build_timestamp,
      count(*) as row_count
    from test_db.test_schema.dbt_exposures
[0m13:04:32.945464 [debug] [Thread-2 (]: Timing info for model.elementary.dbt_metrics (compile): 13:04:32.906421 => 13:04:32.945285
[0m13:04:32.945779 [debug] [Thread-2 (]: Began executing node model.elementary.dbt_metrics
[0m13:04:32.951556 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.dbt_metrics"
[0m13:04:32.952229 [debug] [Thread-2 (]: On model.elementary.dbt_metrics: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_metrics"} */
create or replace  temporary view test_db.test_schema.dbt_metrics__dbt_tmp
  
   as (
    

with empty_table as (
            select
            
                
        cast('dummy_string' as varchar) as unique_id

,
                
        cast('dummy_string' as varchar) as name

,
                
        cast('dummy_string' as varchar) as label

,
                
        cast('dummy_string' as varchar) as model

,
                
        cast('dummy_string' as varchar) as type

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as sql

,
                
        cast('dummy_string' as varchar) as timestamp

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as filters

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as time_grains

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as dimensions

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as description

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as meta

,
                
        cast('dummy_string' as varchar) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as original_path

,
                
        cast('dummy_string' as varchar) as path

,
                
        cast('dummy_string' as varchar) as generated_at

,
                
        cast('dummy_string' as varchar) as metadata_hash


            )
        select * from empty_table
        where 1 = 0
  );
[0m13:04:32.952841 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:32.953108 [debug] [Thread-2 (]: Opening a new connection, currently in state closed
[0m13:04:32.956276 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.dbt_invocations"
[0m13:04:32.957467 [debug] [Thread-1 (]: On model.elementary.dbt_invocations: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_invocations"} */
select
      1700445872.955578 as build_timestamp,
      count(*) as row_count
    from test_db.test_schema.dbt_invocations
[0m13:04:33.335835 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:33.351827 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_columns"
[0m13:04:33.352691 [debug] [Thread-3 (]: On model.elementary.dbt_columns: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_columns"} */
describe table test_db.test_schema.dbt_columns__tmp_20231120073432622819
[0m13:04:33.423920 [debug] [Thread-4 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:33.430935 [debug] [Thread-4 (]: Timing info for model.elementary.dbt_exposures (execute): 13:04:26.650899 => 13:04:33.430614
[0m13:04:33.431917 [debug] [Thread-4 (]: On model.elementary.dbt_exposures: Close
[0m13:04:33.524706 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:33.530935 [debug] [Thread-1 (]: Timing info for model.elementary.dbt_invocations (execute): 13:04:28.509349 => 13:04:33.530628
[0m13:04:33.531591 [debug] [Thread-1 (]: On model.elementary.dbt_invocations: Close
[0m13:04:33.632925 [debug] [Thread-3 (]: SQL status: SUCCESS 13 in 0.0 seconds
[0m13:04:33.639699 [debug] [Thread-3 (]: Elementary: Inserting 166 rows to table test_db.test_schema.dbt_columns__tmp_20231120073432622819
[0m13:04:34.036777 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113af4a90>]}
[0m13:04:34.060858 [info ] [Thread-4 (]: 4 of 32 OK created sql incremental model test_schema.dbt_exposures ............. [[32mSUCCESS 0[0m in 7.50s]
[0m13:04:34.080797 [debug] [Thread-4 (]: Finished running node model.elementary.dbt_exposures
[0m13:04:34.094563 [debug] [Thread-4 (]: Began running node model.elementary.dbt_models
[0m13:04:34.101059 [info ] [Thread-4 (]: 7 of 32 START sql incremental model test_schema.dbt_models ..................... [RUN]
[0m13:04:34.113949 [debug] [Thread-4 (]: Re-using an available connection from the pool (formerly model.elementary.dbt_exposures, now model.elementary.dbt_models)
[0m13:04:34.120879 [debug] [Thread-4 (]: Began compiling node model.elementary.dbt_models
[0m13:04:34.140267 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112120e50>]}
[0m13:04:34.164245 [debug] [Thread-4 (]: Writing injected SQL for node "model.elementary.dbt_models"
[0m13:04:34.171557 [info ] [Thread-1 (]: 5 of 32 OK created sql incremental model test_schema.dbt_invocations ........... [[32mSUCCESS 0[0m in 5.65s]
[0m13:04:34.246879 [debug] [Thread-1 (]: Finished running node model.elementary.dbt_invocations
[0m13:04:34.253384 [debug] [Thread-4 (]: Timing info for model.elementary.dbt_models (compile): 13:04:34.140374 => 13:04:34.253264
[0m13:04:34.259897 [debug] [Thread-1 (]: Began running node model.elementary.dbt_run_results
[0m13:04:34.296091 [debug] [Thread-4 (]: Began executing node model.elementary.dbt_models
[0m13:04:34.327812 [info ] [Thread-1 (]: 8 of 32 START sql incremental model test_schema.dbt_run_results ................ [RUN]
[0m13:04:34.356189 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_models"
[0m13:04:34.383593 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.elementary.dbt_invocations, now model.elementary.dbt_run_results)
[0m13:04:34.408583 [debug] [Thread-4 (]: On model.elementary.dbt_models: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_models"} */
create or replace  temporary view test_db.test_schema.dbt_models__dbt_tmp
  
   as (
    

with empty_table as (
            select
            
                
        cast('dummy_string' as varchar) as unique_id

,
                
        cast('dummy_string' as varchar) as alias

,
                
        cast('dummy_string' as varchar) as checksum

,
                
        cast('dummy_string' as varchar) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as meta

,
                
        cast('dummy_string' as varchar) as owner

,
                
        cast('dummy_string' as varchar) as database_name

,
                
        cast('dummy_string' as varchar) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as description

,
                
        cast('dummy_string' as varchar) as name

,
                
        cast('dummy_string' as varchar) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as original_path

,
                
        cast('dummy_string' as varchar) as path

,
                
        cast('dummy_string' as varchar) as patch_path

,
                
        cast('dummy_string' as varchar) as generated_at

,
                
        cast('dummy_string' as varchar) as metadata_hash


            )
        select * from empty_table
        where 1 = 0
  );
[0m13:04:34.439975 [debug] [Thread-1 (]: Began compiling node model.elementary.dbt_run_results
[0m13:04:34.459117 [debug] [Thread-4 (]: Opening a new connection, currently in state closed
[0m13:04:34.504231 [debug] [Thread-1 (]: Writing injected SQL for node "model.elementary.dbt_run_results"
[0m13:04:34.524088 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 2.0 seconds
[0m13:04:34.557928 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.dbt_metrics"
[0m13:04:34.597536 [debug] [Thread-1 (]: Timing info for model.elementary.dbt_run_results (compile): 13:04:34.477901 => 13:04:34.597409
[0m13:04:34.597710 [debug] [Thread-2 (]: On model.elementary.dbt_metrics: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_metrics"} */
describe table test_db.test_schema.dbt_metrics__dbt_tmp
[0m13:04:34.623054 [debug] [Thread-1 (]: Began executing node model.elementary.dbt_run_results
[0m13:04:34.682194 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.dbt_run_results"
[0m13:04:34.688836 [debug] [Thread-1 (]: On model.elementary.dbt_run_results: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_run_results"} */
create or replace  temporary view test_db.test_schema.dbt_run_results__dbt_tmp
  
   as (
    

with empty_table as (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as varchar) as model_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as unique_id

,
                
        cast('dummy_string' as varchar) as invocation_id

,
                
        cast('dummy_string' as varchar) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as name

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as message

,
                
        cast('dummy_string' as varchar) as status

,
                
        cast('dummy_string' as varchar) as resource_type

,
                
        cast(123456789.99 as float) as execution_time

,
                
        cast('dummy_string' as varchar) as execute_started_at

,
                
        cast('dummy_string' as varchar) as execute_completed_at

,
                
        cast('dummy_string' as varchar) as compile_started_at

,
                
        cast('dummy_string' as varchar) as compile_completed_at

,
                
        cast(31474836478 as bigint) as rows_affected

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as compiled_code

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar) as query_id

,
                
        cast('dummy_string' as varchar) as thread_id

,
                
        cast('dummy_string' as varchar) as materialization

,
                
        cast('dummy_string' as varchar) as adapter_response


            )
        select * from empty_table
        where 1 = 0
  );
[0m13:04:34.698212 [debug] [Thread-3 (]: Elementary: [1/1] Running insert query.
[0m13:04:34.698511 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:04:34.706958 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_columns"
[0m13:04:34.708658 [debug] [Thread-3 (]: On model.elementary.dbt_columns: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_columns"} */
insert into test_db.test_schema.dbt_columns__tmp_20231120073432622819
         (UNIQUE_ID,PARENT_UNIQUE_ID,NAME,DATA_TYPE,TAGS,META,DATABASE_NAME,SCHEMA_NAME,TABLE_NAME,DESCRIPTION,RESOURCE_TYPE,GENERATED_AT,METADATA_HASH) values
    ('column.model.dbt_suman_local.my_first_dbt_model.id','model.dbt_suman_local.my_first_dbt_model','id',NULL,'[]','{}','test_db','test_schema','my_first_dbt_model','The primary key for this table','model','2023-11-20 07:34:32','f2f39cfd01db67756db6bd8f8afff6fa'),('column.model.dbt_suman_local.my_second_dbt_model.id','model.dbt_suman_local.my_second_dbt_model','id',NULL,'[]','{}','test_db','test_schema','my_second_dbt_model','The primary key for this table','model','2023-11-20 07:34:32','db7b2a32bcf6e799265203ce9bffd123'),('column.model.elementary.dbt_tests.unique_id','model.elementary.dbt_tests','unique_id','string','[]','{}','test_db','test_schema','dbt_tests','The unique id of the test.','model','2023-11-20 07:34:32','6c88e5066455df26b63a45414a5ccf09'),('column.model.elementary.dbt_tests.database_name','model.elementary.dbt_tests','database_name','string','[]','{}','test_db','test_schema','dbt_tests','The tested model database name.','model','2023-11-20 07:34:32','d0609024d98ab69b133c16535b8518f8'),('column.model.elementary.dbt_tests.schema_name','model.elementary.dbt_tests','schema_name','string','[]','{}','test_db','test_schema','dbt_tests','The tested model schema name.','model','2023-11-20 07:34:32','e41b20f3a68fc6cfed803c090cba8062'),('column.model.elementary.dbt_tests.name','model.elementary.dbt_tests','name','string','[]','{}','test_db','test_schema','dbt_tests','The test name.','model','2023-11-20 07:34:32','4406a0a7a12a10a666ca8b52ec859e1e'),('column.model.elementary.dbt_tests.short_name','model.elementary.dbt_tests','short_name','string','[]','{}','test_db','test_schema','dbt_tests',NULL,'model','2023-11-20 07:34:32','af63497d4c5fc14608409d31da7e954c'),('column.model.elementary.dbt_tests.alias','model.elementary.dbt_tests','alias','string','[]','{}','test_db','test_schema','dbt_tests',NULL,'model','2023-11-20 07:34:32','e31e4b6930f6c67a015c5c84f63c6e52'),('column.model.elementary.dbt_tests.test_column_name','model.elementary.dbt_tests','test_column_name','string','[]','{}','test_db','test_schema','dbt_tests','The name of the tested column.','model','2023-11-20 07:34:32','551595e53281fe17eada3795295a040c'),('column.model.elementary.dbt_tests.severity','model.elementary.dbt_tests','severity','string','[]','{}','test_db','test_schema','dbt_tests',NULL,'model','2023-11-20 07:34:32','daaefc7cf4e4317bca465f62b69a2dea'),('column.model.elementary.dbt_tests.warn_if','model.elementary.dbt_tests','warn_if','string','[]','{}','test_db','test_schema','dbt_tests',NULL,'model','2023-11-20 07:34:32','2e4396d310d9aa63db7ffada60fe289f'),('column.model.elementary.dbt_tests.error_if','model.elementary.dbt_tests','error_if','string','[]','{}','test_db','test_schema','dbt_tests',NULL,'model','2023-11-20 07:34:32','083b9a1bbee3b5aa53eb06c075672392'),('column.model.elementary.dbt_tests.test_params','model.elementary.dbt_tests','test_params','string','[]','{}','test_db','test_schema','dbt_tests',NULL,'model','2023-11-20 07:34:32','9bd45115ef8f4511630a14d5bf761e14'),('column.model.elementary.dbt_tests.test_namespace','model.elementary.dbt_tests','test_namespace','string','[]','{}','test_db','test_schema','dbt_tests',NULL,'model','2023-11-20 07:34:32','37f3266d377519e1670d8844dcdee522'),('column.model.elementary.dbt_tests.tags','model.elementary.dbt_tests','tags','string','[]','{}','test_db','test_schema','dbt_tests',NULL,'model','2023-11-20 07:34:32','4daf4041a36198ffbe7886df7a763dd3'),('column.model.elementary.dbt_tests.model_tags','model.elementary.dbt_tests','model_tags','string','[]','{}','test_db','test_schema','dbt_tests',NULL,'model','2023-11-20 07:34:32','80dc2943619d5c36848e2ab3972e57f6'),('column.model.elementary.dbt_tests.model_owners','model.elementary.dbt_tests','model_owners','string','[]','{}','test_db','test_schema','dbt_tests',NULL,'model','2023-11-20 07:34:32','5ed97e9786fdb8749ffac4e281374d0d'),('column.model.elementary.dbt_tests.meta','model.elementary.dbt_tests','meta','string','[]','{}','test_db','test_schema','dbt_tests',NULL,'model','2023-11-20 07:34:32','9bc3893e1920d16d66f19fd392b7fd90'),('column.model.elementary.dbt_tests.depends_on_macros','model.elementary.dbt_tests','depends_on_macros','string','[]','{}','test_db','test_schema','dbt_tests',NULL,'model','2023-11-20 07:34:32','9a7c34f896976639ab165f10e5a6c67e'),('column.model.elementary.dbt_tests.depends_on_nodes','model.elementary.dbt_tests','depends_on_nodes','string','[]','{}','test_db','test_schema','dbt_tests',NULL,'model','2023-11-20 07:34:32','ed2f42be2beee68df5bd258b299fe1fc'),('column.model.elementary.dbt_tests.parent_model_unique_id','model.elementary.dbt_tests','parent_model_unique_id','string','[]','{}','test_db','test_schema','dbt_tests',NULL,'model','2023-11-20 07:34:32','dcd7b347a404fe924570940fd291820e'),('column.model.elementary.dbt_tests.description','model.elementary.dbt_tests','description','string','[]','{}','test_db','test_schema','dbt_tests',NULL,'model','2023-11-20 07:34:32','97feccf3c671452a97728125cd088b28'),('column.model.elementary.dbt_tests.package_name','model.elementary.dbt_tests','package_name','string','[]','{}','test_db','test_schema','dbt_tests',NULL,'model','2023-11-20 07:34:32','d277381203919ce11ed7de4a311b7c7a'),('column.model.elementary.dbt_tests.type','model.elementary.dbt_tests','type','string','[]','{}','test_db','test_schema','dbt_tests',NULL,'model','2023-11-20 07:34:32','08e31ec711733fce6219c881c9d9f334'),('column.model.elementary.dbt_tests.original_path','model.elementary.dbt_tests','original_path','string','[]','{}','test_db','test_schema','dbt_tests',NULL,'model','2023-11-20 07:34:32','5019f8858001c2c06837dead25891c97'),('column.model.elementary.dbt_tests.path','model.elementary.dbt_tests','path','string','[]','{}','test_db','test_schema','dbt_tests',NULL,'model','2023-11-20 07:34:32','d376609a325f2dede520aabb7fd94a0f'),('column.model.elementary.dbt_tests.generated_at','model.elementary.dbt_tests','generated_at','string','[]','{}','test_db','test_schema','dbt_tests',NULL,'model','2023-11-20 07:34:32','8d7a59dac072554464660d81c14d7469'),('column.model.elementary.dbt_models.unique_id','model.elementary.dbt_models','unique_id','string','[]','{}','test_db','test_schema','dbt_models','The unique id of the model.','model','2023-11-20 07:34:32','2f8739f784de5408e8c9632207000609'),('column.model.elementary.dbt_models.alias','model.elementary.dbt_models','alias','string','[]','{}','test_db','test_schema','dbt_models',NULL,'model','2023-11-20 07:34:32','4f9f24f116964c35faa489014e9ebe67'),('column.model.elementary.dbt_models.checksum','model.elementary.dbt_models','checksum','string','[]','{}','test_db','test_schema','dbt_models','Model file checksum.','model','2023-11-20 07:34:32','f4e76cd2cc24d098e67c9567e948e3bf'),('column.model.elementary.dbt_models.materialization','model.elementary.dbt_models','materialization','string','[]','{}','test_db','test_schema','dbt_models','The model materialization config.','model','2023-11-20 07:34:32','1744dbaa284515e22dd28021f38588f6'),('column.model.elementary.dbt_models.tags','model.elementary.dbt_models','tags','string','[]','{}','test_db','test_schema','dbt_models','Model tags property.','model','2023-11-20 07:34:32','012e46d611399c9f0c672989267e9058'),('column.model.elementary.dbt_models.meta','model.elementary.dbt_models','meta','string','[]','{}','test_db','test_schema','dbt_models','The content of \'meta\' property key.','model','2023-11-20 07:34:32','29b20ce1db4da1ef03280b95f17885e7'),('column.model.elementary.dbt_models.owner','model.elementary.dbt_models','owner','string','[]','{}','test_db','test_schema','dbt_models','Model owner property (configured under \'meta\' key).','model','2023-11-20 07:34:32','67875a19f7fecd4bf79586edfd9699f8'),('column.model.elementary.dbt_models.database_name','model.elementary.dbt_models','database_name','string','[]','{}','test_db','test_schema','dbt_models','The model database name.','model','2023-11-20 07:34:32','cd193624d71af3ea6c881b0fced133da'),('column.model.elementary.dbt_models.schema_name','model.elementary.dbt_models','schema_name','string','[]','{}','test_db','test_schema','dbt_models','The model schema name.','model','2023-11-20 07:34:32','949c2e7f982c3a4966a1d588f2814fa8'),('column.model.elementary.dbt_models.depends_on_macros','model.elementary.dbt_models','depends_on_macros','string','[]','{}','test_db','test_schema','dbt_models','The macros the model directly depends on.','model','2023-11-20 07:34:32','09138d5ed6868a8cc774829f8d013c05'),('column.model.elementary.dbt_models.depends_on_nodes','model.elementary.dbt_models','depends_on_nodes','string','[]','{}','test_db','test_schema','dbt_models','The nodes the model directly depends on.','model','2023-11-20 07:34:32','cbdcf03963bf599d1d02c79e451d1baf'),('column.model.elementary.dbt_models.description','model.elementary.dbt_models','description','string','[]','{}','test_db','test_schema','dbt_models','Model description.','model','2023-11-20 07:34:32','75a5946a18d000d33503b8b63b3fc779'),('column.model.elementary.dbt_models.name','model.elementary.dbt_models','name','string','[]','{}','test_db','test_schema','dbt_models','Model name.','model','2023-11-20 07:34:32','afb3f12838f1947c195194c32156c165'),('column.model.elementary.dbt_models.package_name','model.elementary.dbt_models','package_name','string','[]','{}','test_db','test_schema','dbt_models','Package name of the model.','model','2023-11-20 07:34:32','a3cbdee069c26c640011981c2c6ee9a3'),('column.model.elementary.dbt_models.original_path','model.elementary.dbt_models','original_path','string','[]','{}','test_db','test_schema','dbt_models','Full path of the model file.','model','2023-11-20 07:34:32','72161f8285c6f88dc46f9f8302baf826'),('column.model.elementary.dbt_models.path','model.elementary.dbt_models','path','string','[]','{}','test_db','test_schema','dbt_models','Short path of the model file.','model','2023-11-20 07:34:32','36cc80d0566432ba4907f1d03bdd85ff'),('column.model.elementary.dbt_models.generated_at','model.elementary.dbt_models','generated_at','string','[]','{}','test_db','test_schema','dbt_models','Update time of the table.','model','2023-11-20 07:34:32','651691d9129f5f6bcda19157584939b3'),('column.model.elementary.dbt_sources.unique_id','model.elementary.dbt_sources','unique_id','string','[]','{}','test_db','test_schema','dbt_sources',NULL,'model','2023-11-20 07:34:32','4132ce38489f650781672a2c079e692f'),('column.model.elementary.dbt_sources.database_name','model.elementary.dbt_sources','database_name','string','[]','{}','test_db','test_schema','dbt_sources',NULL,'model','2023-11-20 07:34:32','c1067fea01ac600a548bc6da0af24656'),('column.model.elementary.dbt_sources.schema_name','model.elementary.dbt_sources','schema_name','string','[]','{}','test_db','test_schema','dbt_sources',NULL,'model','2023-11-20 07:34:32','165ec12fe18e22ea9867051ea34a57ff'),('column.model.elementary.dbt_sources.source_name','model.elementary.dbt_sources','source_name','string','[]','{}','test_db','test_schema','dbt_sources',NULL,'model','2023-11-20 07:34:32','560fcc986d932e59f7f9a80771e80ad4'),('column.model.elementary.dbt_sources.name','model.elementary.dbt_sources','name','string','[]','{}','test_db','test_schema','dbt_sources',NULL,'model','2023-11-20 07:34:32','083951395787c60357bc7ad70ff72b7b'),('column.model.elementary.dbt_sources.identifier','model.elementary.dbt_sources','identifier','string','[]','{}','test_db','test_schema','dbt_sources',NULL,'model','2023-11-20 07:34:32','07f2d8b2c4db81652baf40dd567eb843'),('column.model.elementary.dbt_sources.loaded_at_field','model.elementary.dbt_sources','loaded_at_field','string','[]','{}','test_db','test_schema','dbt_sources',NULL,'model','2023-11-20 07:34:32','bbda63c084235310613a9acef02e6986'),('column.model.elementary.dbt_sources.freshness_warn_after','model.elementary.dbt_sources','freshness_warn_after','string','[]','{}','test_db','test_schema','dbt_sources',NULL,'model','2023-11-20 07:34:32','de264966f45cedfddb1d39116adde107'),('column.model.elementary.dbt_sources.freshness_error_after','model.elementary.dbt_sources','freshness_error_after','string','[]','{}','test_db','test_schema','dbt_sources',NULL,'model','2023-11-20 07:34:32','b96429970158d03f032e71ad2eb40814'),('column.model.elementary.dbt_sources.freshness_filter','model.elementary.dbt_sources','freshness_filter','string','[]','{}','test_db','test_schema','dbt_sources',NULL,'model','2023-11-20 07:34:32','1fedb8a425e850598355bddbf6228486'),('column.model.elementary.dbt_sources.relation_name','model.elementary.dbt_sources','relation_name','string','[]','{}','test_db','test_schema','dbt_sources',NULL,'model','2023-11-20 07:34:32','9889e3c4c6a6f1783d58b4cd0721b363'),('column.model.elementary.dbt_sources.tags','model.elementary.dbt_sources','tags','string','[]','{}','test_db','test_schema','dbt_sources',NULL,'model','2023-11-20 07:34:32','204a0007d1fe867cd799d0a79d66228d'),('column.model.elementary.dbt_sources.meta','model.elementary.dbt_sources','meta','string','[]','{}','test_db','test_schema','dbt_sources',NULL,'model','2023-11-20 07:34:32','52ff0645b01481c45f89e8ff0b988e1f'),('column.model.elementary.dbt_sources.owner','model.elementary.dbt_sources','owner','string','[]','{}','test_db','test_schema','dbt_sources',NULL,'model','2023-11-20 07:34:32','4a583956ba1e393d0d413c6723a4fbfa'),('column.model.elementary.dbt_sources.package_name','model.elementary.dbt_sources','package_name','string','[]','{}','test_db','test_schema','dbt_sources',NULL,'model','2023-11-20 07:34:32','6bab73b5f64dc78f25e54527090261ae'),('column.model.elementary.dbt_sources.original_path','model.elementary.dbt_sources','original_path','string','[]','{}','test_db','test_schema','dbt_sources',NULL,'model','2023-11-20 07:34:32','28ae12fcbdb99fc26c4b08fe1e33842f'),('column.model.elementary.dbt_sources.path','model.elementary.dbt_sources','path','string','[]','{}','test_db','test_schema','dbt_sources',NULL,'model','2023-11-20 07:34:32','b34a40d5d73273c83c77f2b7bcfeecb7'),('column.model.elementary.dbt_sources.source_description','model.elementary.dbt_sources','source_description','string','[]','{}','test_db','test_schema','dbt_sources',NULL,'model','2023-11-20 07:34:32','3b823ef7a5b010a1c9579904101a0f69'),('column.model.elementary.dbt_sources.description','model.elementary.dbt_sources','description','string','[]','{}','test_db','test_schema','dbt_sources',NULL,'model','2023-11-20 07:34:32','80fa611b737a65090f2341c2a11754a6'),('column.model.elementary.dbt_sources.generated_at','model.elementary.dbt_sources','generated_at','string','[]','{}','test_db','test_schema','dbt_sources',NULL,'model','2023-11-20 07:34:32','9ebcb2c78cf95062bcfe37cc8a9f92eb'),('column.model.elementary.dbt_snapshots.unique_id','model.elementary.dbt_snapshots','unique_id','string','[]','{}','test_db','test_schema','dbt_snapshots',NULL,'model','2023-11-20 07:34:32','b7589d5bcb5ddf7955bbb5d4a3a82d18'),('column.model.elementary.dbt_snapshots.alias','model.elementary.dbt_snapshots','alias','string','[]','{}','test_db','test_schema','dbt_snapshots',NULL,'model','2023-11-20 07:34:32','6e7e74111876561ba08c6ca124f2226a'),('column.model.elementary.dbt_snapshots.checksum','model.elementary.dbt_snapshots','checksum','string','[]','{}','test_db','test_schema','dbt_snapshots',NULL,'model','2023-11-20 07:34:32','ded68615c7405f7074a240233838271d'),('column.model.elementary.dbt_snapshots.materialization','model.elementary.dbt_snapshots','materialization','string','[]','{}','test_db','test_schema','dbt_snapshots',NULL,'model','2023-11-20 07:34:32','e1c254c613e5aa9ba33b44c54cc3c591'),('column.model.elementary.dbt_snapshots.tags','model.elementary.dbt_snapshots','tags','string','[]','{}','test_db','test_schema','dbt_snapshots',NULL,'model','2023-11-20 07:34:32','a92080f2a6e97a66e1c59efcd09262af'),('column.model.elementary.dbt_snapshots.meta','model.elementary.dbt_snapshots','meta','string','[]','{}','test_db','test_schema','dbt_snapshots',NULL,'model','2023-11-20 07:34:32','6fcf098b67eaa797548fe79b977a140d'),('column.model.elementary.dbt_snapshots.owner','model.elementary.dbt_snapshots','owner','string','[]','{}','test_db','test_schema','dbt_snapshots',NULL,'model','2023-11-20 07:34:32','b6102cf668eb981d538fc8cbce9ecfab'),('column.model.elementary.dbt_snapshots.database_name','model.elementary.dbt_snapshots','database_name','string','[]','{}','test_db','test_schema','dbt_snapshots',NULL,'model','2023-11-20 07:34:32','70d51cb4b721799631c87ce9da999704'),('column.model.elementary.dbt_snapshots.schema_name','model.elementary.dbt_snapshots','schema_name','string','[]','{}','test_db','test_schema','dbt_snapshots',NULL,'model','2023-11-20 07:34:32','d538412c106f3544ce9cb243c45ffc84'),('column.model.elementary.dbt_snapshots.depends_on_macros','model.elementary.dbt_snapshots','depends_on_macros','string','[]','{}','test_db','test_schema','dbt_snapshots',NULL,'model','2023-11-20 07:34:32','05d7f861740619d9b70ea0fb35efc0d0'),('column.model.elementary.dbt_snapshots.depends_on_nodes','model.elementary.dbt_snapshots','depends_on_nodes','string','[]','{}','test_db','test_schema','dbt_snapshots',NULL,'model','2023-11-20 07:34:32','a36915eb8b8eccf07c309824604e72de'),('column.model.elementary.dbt_snapshots.description','model.elementary.dbt_snapshots','description','string','[]','{}','test_db','test_schema','dbt_snapshots',NULL,'model','2023-11-20 07:34:32','6bf6a324d0463f16ab9a1a02b72a82c0'),('column.model.elementary.dbt_snapshots.name','model.elementary.dbt_snapshots','name','string','[]','{}','test_db','test_schema','dbt_snapshots',NULL,'model','2023-11-20 07:34:32','cfef2c0129ddf2357962dfb83bfb0e68'),('column.model.elementary.dbt_snapshots.package_name','model.elementary.dbt_snapshots','package_name','string','[]','{}','test_db','test_schema','dbt_snapshots',NULL,'model','2023-11-20 07:34:32','103fa2ce8097c193b1048d100da718fb'),('column.model.elementary.dbt_snapshots.original_path','model.elementary.dbt_snapshots','original_path','string','[]','{}','test_db','test_schema','dbt_snapshots',NULL,'model','2023-11-20 07:34:32','56b868785db8d1bf4b343ead69eac43d'),('column.model.elementary.dbt_snapshots.path','model.elementary.dbt_snapshots','path','string','[]','{}','test_db','test_schema','dbt_snapshots',NULL,'model','2023-11-20 07:34:32','11ae69b7bcfbe3abdd0cd2ddaf532086'),('column.model.elementary.dbt_snapshots.generated_at','model.elementary.dbt_snapshots','generated_at','string','[]','{}','test_db','test_schema','dbt_snapshots',NULL,'model','2023-11-20 07:34:32','b2bb2ba34309c9077fa07d875739397e'),('column.model.elementary.dbt_invocations.invocation_id','model.elementary.dbt_invocations','invocation_id','string','[]','{}','test_db','test_schema','dbt_invocations','Primary key of this table.','model','2023-11-20 07:34:32','d0a8f3b78d779b82ab3263f66e4aaaa8'),('column.model.elementary.dbt_invocations.run_started_at','model.elementary.dbt_invocations','run_started_at','string','[]','{}','test_db','test_schema','dbt_invocations','Timestamp the invocation was started.','model','2023-11-20 07:34:32','8f23b5d07e596e034e29819d69e0ebcc'),('column.model.elementary.dbt_invocations.run_completed_at','model.elementary.dbt_invocations','run_completed_at','string','[]','{}','test_db','test_schema','dbt_invocations','Timestamp the invocation was completed','model','2023-11-20 07:34:32','b0506e00f112f0b123c6c332c105b6e6'),('column.model.elementary.dbt_invocations.generated_at','model.elementary.dbt_invocations','generated_at','string','[]','{}','test_db','test_schema','dbt_invocations','The time this invocation was uploaded to the database.','model','2023-11-20 07:34:32','95f1f81868b1229b9039357a94e7aacd'),('column.model.elementary.dbt_invocations.command','model.elementary.dbt_invocations','command','string','[]','{}','test_db','test_schema','dbt_invocations','dbt command that was used. For example, run.','model','2023-11-20 07:34:32','b1d93effd2f93ef81ca74c320430d137'),('column.model.elementary.dbt_invocations.dbt_version','model.elementary.dbt_invocations','dbt_version','string','[]','{}','test_db','test_schema','dbt_invocations','Version of dbt that was used in this invocation.','model','2023-11-20 07:34:32','0126b2f09cf15727279b20202efe85d7'),('column.model.elementary.dbt_invocations.elementary_version','model.elementary.dbt_invocations','elementary_version','string','[]','{}','test_db','test_schema','dbt_invocations','Version of the elementary package that was used in this invocation.','model','2023-11-20 07:34:32','8fa0450937e637e4ac2b0b9d591e7495'),('column.model.elementary.dbt_invocations.full_refresh','model.elementary.dbt_invocations','full_refresh','boolean','[]','{}','test_db','test_schema','dbt_invocations','Whether or not this invocation was executed as a full-refresh.','model','2023-11-20 07:34:32','e6616a2370f6241062c4091f4dc875ea'),('column.model.elementary.dbt_invocations.invocation_vars','model.elementary.dbt_invocations','invocation_vars','string','[]','{}','test_db','test_schema','dbt_invocations','Dictionary of the variables (and values) that were declared in the invocation.','model','2023-11-20 07:34:32','c37a202aada226ef7c08d0800de8ca76'),('column.model.elementary.dbt_invocations.vars','model.elementary.dbt_invocations','vars','string','[]','{}','test_db','test_schema','dbt_invocations','Dictionary of all variables (and values) in the dbt project. If none were declared at runtime, these are the variables declared in dbt_project yml','model','2023-11-20 07:34:32','3bfcfed800e4ef4034f550da1fa3190a'),('column.model.elementary.dbt_invocations.target_name','model.elementary.dbt_invocations','target_name','string','[]','{}','test_db','test_schema','dbt_invocations','Name of the target used in this invocation.','model','2023-11-20 07:34:32','7175a4afe2b2fff7ff06bfc994a8f212'),('column.model.elementary.dbt_invocations.target_database','model.elementary.dbt_invocations','target_database','string','[]','{}','test_db','test_schema','dbt_invocations','Name of the target database that was used in this invocation.','model','2023-11-20 07:34:32','3584667f6d6ac36f37681e5d70b3c259'),('column.model.elementary.dbt_invocations.target_schema','model.elementary.dbt_invocations','target_schema','string','[]','{}','test_db','test_schema','dbt_invocations','Name of the target schema that was used in this invocation.','model','2023-11-20 07:34:32','1d1c4b8b04dc3c3c7a35ce104207e4d6'),('column.model.elementary.dbt_invocations.target_profile_name','model.elementary.dbt_invocations','target_profile_name','string','[]','{}','test_db','test_schema','dbt_invocations','Name of the dbt profile that was used in this invocation.','model','2023-11-20 07:34:32','ee80590cf8c523609cde41e9ba614b18'),('column.model.elementary.dbt_invocations.threads','model.elementary.dbt_invocations','threads','integer','[]','{}','test_db','test_schema','dbt_invocations','Number of threads that were used to run this dbt invocation. (This number could impact the performance of a dbt invocation).','model','2023-11-20 07:34:32','b5de7be31c6d90d9b156b69625ad5c10'),('column.model.elementary.dbt_invocations.selected','model.elementary.dbt_invocations','selected','string','[]','{}','test_db','test_schema','dbt_invocations','The selected resources in the dbt command. While this is a string in the database, this can easily be converted to an array.','model','2023-11-20 07:34:32','b33725930be533817e9c84038b3a3694'),('column.model.elementary.dbt_invocations.yaml_selector','model.elementary.dbt_invocations','yaml_selector','string','[]','{}','test_db','test_schema','dbt_invocations','The yaml selector that was passed in this invocation.','model','2023-11-20 07:34:32','b8f15ad237887f61bb547a2ae38a9e53'),('column.model.elementary.dbt_invocations.job_id','model.elementary.dbt_invocations','job_id','string','[]','{}','test_db','test_schema','dbt_invocations','The ID of a job, defined in the `job_id` var or in the `JOB_ID` env var or by the orchestrator (dbt Cloud, GitHub Actions, etc).','model','2023-11-20 07:34:32','c419939c19aacb18ffd9aacee7b18644'),('column.model.elementary.dbt_invocations.job_name','model.elementary.dbt_invocations','job_name','string','[]','{}','test_db','test_schema','dbt_invocations','The name of a job, defined in the `job_name` var or in the `JOB_NAME` env var.','model','2023-11-20 07:34:32','fb5e898259a7e243c361e4bda1c08dd4'),('column.model.elementary.dbt_invocations.job_run_id','model.elementary.dbt_invocations','job_run_id','string','[]','{}','test_db','test_schema','dbt_invocations','The run ID of a job, defined in the `job_run_id` var or in the `DBT_JOB_RUN_ID` env var or by the orchestrator (dbt Cloud, GitHub Actions, etc).','model','2023-11-20 07:34:32','5af481302ac2affdcbd428eac0fb6c44'),('column.model.elementary.dbt_invocations.env','model.elementary.dbt_invocations','env','string','[]','{}','test_db','test_schema','dbt_invocations','The environment\'s name, defined in the `DBT_ENV` env var.','model','2023-11-20 07:34:32','feceb2bed9be2e83a4c52f3ca2f4c6d0'),('column.model.elementary.dbt_invocations.env_id','model.elementary.dbt_invocations','env_id','string','[]','{}','test_db','test_schema','dbt_invocations','The ID of an environment, defined in the `DBT_ENV_ID` env var.','model','2023-11-20 07:34:32','916904ec10bd9775380ec77ddd38f759'),('column.model.elementary.dbt_invocations.project_id','model.elementary.dbt_invocations','project_id','string','[]','{}','test_db','test_schema','dbt_invocations','The ID of a project, defined in the `DBT_PROJECT_ID` env var or by the orchestrator (dbt Cloud, GitHub Actions, etc).','model','2023-11-20 07:34:32','4e67d70b16aac88ccc4fa642e46a77e8'),('column.model.elementary.dbt_invocations.cause_category','model.elementary.dbt_invocations','cause_category','string','[]','{}','test_db','test_schema','dbt_invocations','The category of the cause of the invocation. For example, if the invocation was triggered by a schedule, the cause category would be schedule.\nDefined in the `DBT_CAUSE_CATEGORY` env var or by the orchestrator (dbt Cloud, GitHub Actions, etc).\n','model','2023-11-20 07:34:32','63f4572d1e957568c288da724fdb727d'),('column.model.elementary.dbt_invocations.cause','model.elementary.dbt_invocations','cause','string','[]','{}','test_db','test_schema','dbt_invocations','The cause of the invocation. For example, if the invocation was triggered by a manual run, the cause would be _"Kicked off by Joe."_.\nDefined in the `DBT_CAUSE` env var or by the orchestrator (dbt Cloud, GitHub Actions, etc).\n','model','2023-11-20 07:34:32','10b8cfed892af6ae9548024b516f58e6'),('column.model.elementary.dbt_invocations.pull_request_id','model.elementary.dbt_invocations','pull_request_id','string','[]','{}','test_db','test_schema','dbt_invocations','The ID of a pull request, defined in the `DBT_PULL_REQUEST_ID` env var or by the orchestrator (dbt Cloud, GitHub Actions, etc).','model','2023-11-20 07:34:32','26b1a91fccc2362be257fe5e4605cd66'),('column.model.elementary.dbt_invocations.git_sha','model.elementary.dbt_invocations','git_sha','string','[]','{}','test_db','test_schema','dbt_invocations','The git SHA of the commit that was used in this invocation, defined in the `DBT_GIT_SHA` env var or by the orchestrator (dbt Cloud, GitHub Actions, etc).','model','2023-11-20 07:34:32','cc842e6f021733d63fb24b53944fb257'),('column.model.elementary.dbt_invocations.orchestrator','model.elementary.dbt_invocations','orchestrator','string','[]','{}','test_db','test_schema','dbt_invocations','The orchestrator that was used to run this invocation, defined in the `orchestrator` var or in the `ORCHESTRATOR` env var or by the orchestrator env vars. For example, dbt Cloud, GitHub Actions, etc.','model','2023-11-20 07:34:32','223a19b60cf8de204551ea9da80f40ce'),('column.model.elementary.dbt_invocations.job_url','model.elementary.dbt_invocations','job_url','string','[]','{}','test_db','test_schema','dbt_invocations','The name of a job, defined in the `job_url` var or in the `JOB_URL` env var or by the orchestrator. For GitHub Actions orchestrator, the value is calculated.','model','2023-11-20 07:34:32','8a8d9abdc377ef77e4531f1d869046c6'),('column.model.elementary.dbt_invocations.account_id','model.elementary.dbt_invocations','account_id','string','[]','{}','test_db','test_schema','dbt_invocations','The ID of the account, defined in the `account_id` var or in the `ACCOUNT_ID` env var or by the orchestrator.','model','2023-11-20 07:34:32','55999d6603253a91facf744fa8fdfee0'),('column.model.elementary.dbt_metrics.unique_id','model.elementary.dbt_metrics','unique_id','string','[]','{}','test_db','test_schema','dbt_metrics',NULL,'model','2023-11-20 07:34:32','5ba3b5372e6401f3c176c4a636f3afee'),('column.model.elementary.dbt_metrics.name','model.elementary.dbt_metrics','name','string','[]','{}','test_db','test_schema','dbt_metrics',NULL,'model','2023-11-20 07:34:32','0a0da81855b9a72b8596dfd437011a49'),('column.model.elementary.dbt_metrics.label','model.elementary.dbt_metrics','label','string','[]','{}','test_db','test_schema','dbt_metrics',NULL,'model','2023-11-20 07:34:32','06e586e0661c5c29320a1fda63c1f8a2'),('column.model.elementary.dbt_metrics.model','model.elementary.dbt_metrics','model','string','[]','{}','test_db','test_schema','dbt_metrics',NULL,'model','2023-11-20 07:34:32','ed6cbc217e227325783b79126c74ed8d'),('column.model.elementary.dbt_metrics.type','model.elementary.dbt_metrics','type','string','[]','{}','test_db','test_schema','dbt_metrics',NULL,'model','2023-11-20 07:34:32','9e6315d0d04b56ec6e5bddc732cf4643'),('column.model.elementary.dbt_metrics.sql','model.elementary.dbt_metrics','sql','string','[]','{}','test_db','test_schema','dbt_metrics',NULL,'model','2023-11-20 07:34:32','de7a8cf68c546a4efc5f7cfeaa45e6a5'),('column.model.elementary.dbt_metrics.timestamp','model.elementary.dbt_metrics','timestamp','string','[]','{}','test_db','test_schema','dbt_metrics',NULL,'model','2023-11-20 07:34:32','065e8a87d7a19d0a5197718b253a4a04'),('column.model.elementary.dbt_metrics.filters','model.elementary.dbt_metrics','filters','string','[]','{}','test_db','test_schema','dbt_metrics',NULL,'model','2023-11-20 07:34:32','741224f6ba705b2b2f9d8c25c17855d5'),('column.model.elementary.dbt_metrics.time_grains','model.elementary.dbt_metrics','time_grains','string','[]','{}','test_db','test_schema','dbt_metrics',NULL,'model','2023-11-20 07:34:32','ca8a171b07aad3be3117914d039ec924'),('column.model.elementary.dbt_metrics.dimensions','model.elementary.dbt_metrics','dimensions','string','[]','{}','test_db','test_schema','dbt_metrics',NULL,'model','2023-11-20 07:34:32','169b1997c16794d72b254d146719e04d'),('column.model.elementary.dbt_metrics.depends_on_macros','model.elementary.dbt_metrics','depends_on_macros','string','[]','{}','test_db','test_schema','dbt_metrics',NULL,'model','2023-11-20 07:34:32','a8a155b32e64272eb6b4dd9132f49cf6'),('column.model.elementary.dbt_metrics.depends_on_nodes','model.elementary.dbt_metrics','depends_on_nodes','string','[]','{}','test_db','test_schema','dbt_metrics',NULL,'model','2023-11-20 07:34:32','02c2398c45ad4e58b1329ffec069c999'),('column.model.elementary.dbt_metrics.description','model.elementary.dbt_metrics','description','string','[]','{}','test_db','test_schema','dbt_metrics',NULL,'model','2023-11-20 07:34:32','388def62c64852dd2f862f33da929635'),('column.model.elementary.dbt_metrics.tags','model.elementary.dbt_metrics','tags','string','[]','{}','test_db','test_schema','dbt_metrics',NULL,'model','2023-11-20 07:34:32','71fbf4b62b0f31a85e79b7fedb85d6ea'),('column.model.elementary.dbt_metrics.meta','model.elementary.dbt_metrics','meta','string','[]','{}','test_db','test_schema','dbt_metrics',NULL,'model','2023-11-20 07:34:32','037efc8e862262a877cfaca4c3386416'),('column.model.elementary.dbt_metrics.package_name','model.elementary.dbt_metrics','package_name','string','[]','{}','test_db','test_schema','dbt_metrics',NULL,'model','2023-11-20 07:34:32','a3ac2099122b572cdbdb73a0a4fc1dad'),('column.model.elementary.dbt_metrics.original_path','model.elementary.dbt_metrics','original_path','string','[]','{}','test_db','test_schema','dbt_metrics',NULL,'model','2023-11-20 07:34:32','8f333961d905d767f3bc924b4a465d0b'),('column.model.elementary.dbt_metrics.path','model.elementary.dbt_metrics','path','string','[]','{}','test_db','test_schema','dbt_metrics',NULL,'model','2023-11-20 07:34:32','cc375dd3f30187e122471b4d08f43dc2'),('column.model.elementary.dbt_metrics.generated_at','model.elementary.dbt_metrics','generated_at','string','[]','{}','test_db','test_schema','dbt_metrics',NULL,'model','2023-11-20 07:34:32','1ebed194e814865cec2606981c7acbdc'),('column.model.elementary.dbt_run_results.model_execution_id','model.elementary.dbt_run_results','model_execution_id','string','[]','{}','test_db','test_schema','dbt_run_results','Execution id generated by joining the unique_id of the resource and the invocation_id. This is the unique key of each row in this model.','model','2023-11-20 07:34:32','f66b1b94f3ab36cf02c1b81af1df011a'),('column.model.elementary.dbt_run_results.unique_id','model.elementary.dbt_run_results','unique_id','string','[]','{}','test_db','test_schema','dbt_run_results','The unique id of the resource (would be similar for all executions of the same resource).','model','2023-11-20 07:34:32','4c43bb6e8488a1accb233377a6ab7384'),('column.model.elementary.dbt_run_results.invocation_id','model.elementary.dbt_run_results','invocation_id','string','[]','{}','test_db','test_schema','dbt_run_results','The unique id of the invocation (would be similar for all resources executed on the same invocation). FK to dbt_invocations.','model','2023-11-20 07:34:32','fec28e95103b37d0a77a22a9cc8cc711'),('column.model.elementary.dbt_run_results.generated_at','model.elementary.dbt_run_results','generated_at','string','[]','{}','test_db','test_schema','dbt_run_results',NULL,'model','2023-11-20 07:34:32','a33a25801b864e3cd09b403eafe21296'),('column.model.elementary.dbt_run_results.name','model.elementary.dbt_run_results','name','string','[]','{}','test_db','test_schema','dbt_run_results','Resource name.','model','2023-11-20 07:34:32','e334a5498a3477b3c6e692a62226402a'),('column.model.elementary.dbt_run_results.message','model.elementary.dbt_run_results','message','string','[]','{}','test_db','test_schema','dbt_run_results','Execution results message returned by dbt.','model','2023-11-20 07:34:32','cac51468b4ee7a935d65f5767f2bdfeb'),('column.model.elementary.dbt_run_results.status','model.elementary.dbt_run_results','status','string','[]','{}','test_db','test_schema','dbt_run_results','Execution result status (success, error, pass, fail)','model','2023-11-20 07:34:32','868f540fc83f32792b58e69e9e005f9c'),('column.model.elementary.dbt_run_results.resource_type','model.elementary.dbt_run_results','resource_type','string','[]','{}','test_db','test_schema','dbt_run_results','Resource type (model, test, snapshot, seed, etc)','model','2023-11-20 07:34:32','c6ed26bb719330d4a794fdc86a5e6b90'),('column.model.elementary.dbt_run_results.execution_time','model.elementary.dbt_run_results','execution_time','float','[]','{}','test_db','test_schema','dbt_run_results','Resource execution duration in seconds.','model','2023-11-20 07:34:32','98bbe7b22332bc201cab85761d233884'),('column.model.elementary.dbt_run_results.execute_started_at','model.elementary.dbt_run_results','execute_started_at','string','[]','{}','test_db','test_schema','dbt_run_results','Start time of the execution.','model','2023-11-20 07:34:32','1e5531b08d4b96ced57c819664b4b14a'),('column.model.elementary.dbt_run_results.execute_completed_at','model.elementary.dbt_run_results','execute_completed_at','string','[]','{}','test_db','test_schema','dbt_run_results','End time of the execution.','model','2023-11-20 07:34:32','174db0bb24b38aef14d5106148101c9a'),('column.model.elementary.dbt_run_results.compile_started_at','model.elementary.dbt_run_results','compile_started_at','string','[]','{}','test_db','test_schema','dbt_run_results','Start time of resource compile action.','model','2023-11-20 07:34:32','a073b759ef0d77286248bc093e18d1d6'),('column.model.elementary.dbt_run_results.compile_completed_at','model.elementary.dbt_run_results','compile_completed_at','string','[]','{}','test_db','test_schema','dbt_run_results','End time of resource compile action.','model','2023-11-20 07:34:32','5f84209369669c0024a662d6183006fc'),('column.model.elementary.dbt_run_results.rows_affected','model.elementary.dbt_run_results','rows_affected','int','[]','{}','test_db','test_schema','dbt_run_results',NULL,'model','2023-11-20 07:34:32','3b9a47deec5cbe6483d351945c209aee'),('column.model.elementary.dbt_run_results.full_refresh','model.elementary.dbt_run_results','full_refresh','boolean','[]','{}','test_db','test_schema','dbt_run_results','Was this a full refresh execution.','model','2023-11-20 07:34:32','689258b87a32cb894a73d14858e97181'),('column.model.elementary.dbt_run_results.compiled_code','model.elementary.dbt_run_results','compiled_code','string','[]','{}','test_db','test_schema','dbt_run_results','The compiled code (SQL / Python) executed against the database.','model','2023-11-20 07:34:32','cf582bcfb5a89a9ed8db1443276c2534'),('column.model.elementary.dbt_run_results.failures','model.elementary.dbt_run_results','failures','int','[]','{}','test_db','test_schema','dbt_run_results','Number of failures in this run.','model','2023-11-20 07:34:32','a5e7dbebf53937cd1e64703f0721c237'),('column.model.elementary.dbt_run_results.query_id','model.elementary.dbt_run_results','query_id','string','[]','{}','test_db','test_schema','dbt_run_results','Query ID in the data warehouse, if returned by the adapter (currently only supported in Snowflake, is null for any other adapter).','model','2023-11-20 07:34:32','75ba9172c0589569087bea271cbe6e17'),('column.model.elementary.dbt_run_results.thread_id','model.elementary.dbt_run_results','thread_id','string','[]','{}','test_db','test_schema','dbt_run_results','Id of the thread of this resource run.','model','2023-11-20 07:34:32','7ee4ff38d965818135562fb3ce1b170b'),('column.model.elementary.dbt_run_results.adapter_response','model.elementary.dbt_run_results','adapter_response','string','[]','{}','test_db','test_schema','dbt_run_results','Response returned by the adapter (Fields will be different for each adapters).','model','2023-11-20 07:34:32','54de6568c6ff32dae466aa1790756c92'),('column.model.elementary.dbt_exposures.unique_id','model.elementary.dbt_exposures','unique_id','string','[]','{}','test_db','test_schema','dbt_exposures',NULL,'model','2023-11-20 07:34:32','ada192c10d1dfdc1cfebf62237774fe7'),('column.model.elementary.dbt_exposures.name','model.elementary.dbt_exposures','name','string','[]','{}','test_db','test_schema','dbt_exposures',NULL,'model','2023-11-20 07:34:32','7b705d9c068762a3b2ae33275f98fa33'),('column.model.elementary.dbt_exposures.maturity','model.elementary.dbt_exposures','maturity','string','[]','{}','test_db','test_schema','dbt_exposures',NULL,'model','2023-11-20 07:34:32','d72e3600d025e7af5258bf8626ed59d3'),('column.model.elementary.dbt_exposures.type','model.elementary.dbt_exposures','type','string','[]','{}','test_db','test_schema','dbt_exposures',NULL,'model','2023-11-20 07:34:32','1eb4d2f29f1842b0824fe30871cc4b02'),('column.model.elementary.dbt_exposures.owner_email','model.elementary.dbt_exposures','owner_email','string','[]','{}','test_db','test_schema','dbt_exposures',NULL,'model','2023-11-20 07:34:32','20a764990c31904b6350046890425869'),('column.model.elementary.dbt_exposures.owner_name','model.elementary.dbt_exposures','owner_name','string','[]','{}','test_db','test_schema','dbt_exposures',NULL,'model','2023-11-20 07:34:32','ad721fbe00eb07ebe43a327bff8f956f'),('column.model.elementary.dbt_exposures.url','model.elementary.dbt_exposures','url','string','[]','{}','test_db','test_schema','dbt_exposures',NULL,'model','2023-11-20 07:34:32','809dfd08f87e1e67fa9fb0da8713d02f'),('column.model.elementary.dbt_exposures.depends_on_macros','model.elementary.dbt_exposures','depends_on_macros','string','[]','{}','test_db','test_schema','dbt_exposures',NULL,'model','2023-11-20 07:34:32','669938329c41195153708bdc67f03354'),('column.model.elementary.dbt_exposures.depends_on_nodes','model.elementary.dbt_exposures','depends_on_nodes','string','[]','{}','test_db','test_schema','dbt_exposures',NULL,'model','2023-11-20 07:34:32','1089bf681bf38926a456745677d12e3b'),('column.model.elementary.dbt_exposures.description','model.elementary.dbt_exposures','description','string','[]','{}','test_db','test_schema','dbt_exposures',NULL,'model','2023-11-20 07:34:32','3ff174eed9b4844fd6f222b5c38bae1e'),('column.model.elementary.dbt_exposures.tags','model.elementary.dbt_exposures','tags','string','[]','{}','test_db','test_schema','dbt_exposures',NULL,'model','2023-11-20 07:34:32','e3aff6374da99381b914654164a99e2b'),('column.model.elementary.dbt_exposures.meta','model.elementary.dbt_exposures','meta','string','[]','{}','test_db','test_schema','dbt_exposures',NULL,'model','2023-11-20 07:34:32','efa06aa2643cc89427cbfea53cf71792'),('column.model.elementary.dbt_exposures.package_name','model.elementary.dbt_exposures','package_name','string','[]','{}','test_db','test_schema','dbt_exposures',NULL,'model','2023-11-20 07:34:32','9f6cfa9cbf980b8b115172fa06f12671'),('column.model.elementary.dbt_exposures.original_path','model.elementary.dbt_exposures','original_path','string','[]','{}','test_db','test_schema','dbt_exposures',NULL,'model','2023-11-20 07:34:32','3383f992904998dbfe8060a850257b51'),('column.model.elementary.dbt_exposures.path','model.elementary.dbt_exposures','path','string','[]','{}','test_db','test_schema','dbt_exposures',NULL,'model','2023-11-20 07:34:32','bfe696d0e154a50f6a76da98dd6b06c4'),('column.model.elementary.dbt_exposures.generated_at','model.elementary.dbt_exposures','generated_at','string','[]','{}','test_db','test_schema','dbt_exposures',NULL,'model','2023-11-20 07:34:32','5cf199bc9b8620010ea955f5b0d7fd2d')
[0m13:04:34.963375 [debug] [Thread-2 (]: SQL status: SUCCESS 20 in 0.0 seconds
[0m13:04:34.968170 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.dbt_metrics"
[0m13:04:34.968548 [debug] [Thread-2 (]: On model.elementary.dbt_metrics: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_metrics"} */
describe table test_db.test_schema.dbt_metrics
[0m13:04:35.243769 [debug] [Thread-2 (]: SQL status: SUCCESS 20 in 0.0 seconds
[0m13:04:35.261126 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.dbt_metrics"
[0m13:04:35.261887 [debug] [Thread-2 (]: On model.elementary.dbt_metrics: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_metrics"} */
describe table test_db.test_schema.dbt_metrics__dbt_tmp
[0m13:04:35.447377 [debug] [Thread-3 (]: SQL status: SUCCESS 166 in 1.0 seconds
[0m13:04:35.452607 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_columns"
[0m13:04:35.453591 [debug] [Thread-3 (]: On model.elementary.dbt_columns: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_columns"} */
create or replace  table test_db.test_schema.dbt_columns
         as
        (select * from test_db.test_schema.dbt_columns__tmp_20231120073432622819
        );
[0m13:04:35.561422 [debug] [Thread-2 (]: SQL status: SUCCESS 20 in 0.0 seconds
[0m13:04:35.573327 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.dbt_metrics"
[0m13:04:35.574356 [debug] [Thread-2 (]: On model.elementary.dbt_metrics: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_metrics"} */
describe table "TEST_DB"."TEST_SCHEMA"."DBT_METRICS"
[0m13:04:35.841459 [debug] [Thread-2 (]: SQL status: SUCCESS 20 in 0.0 seconds
[0m13:04:35.852134 [debug] [Thread-2 (]: 
    In "TEST_DB"."TEST_SCHEMA"."DBT_METRICS":
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m13:04:35.860044 [debug] [Thread-2 (]: Writing runtime sql for node "model.elementary.dbt_metrics"
[0m13:04:35.866728 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.dbt_metrics"
[0m13:04:35.867411 [debug] [Thread-2 (]: On model.elementary.dbt_metrics: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_metrics"} */
-- back compat for old kwarg name
  
  begin;
[0m13:04:36.108418 [debug] [Thread-4 (]: SQL status: SUCCESS 1 in 2.0 seconds
[0m13:04:36.119781 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_models"
[0m13:04:36.120758 [debug] [Thread-4 (]: On model.elementary.dbt_models: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_models"} */
describe table test_db.test_schema.dbt_models__dbt_tmp
[0m13:04:36.136536 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:36.137615 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.dbt_metrics"
[0m13:04:36.138369 [debug] [Thread-2 (]: On model.elementary.dbt_metrics: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_metrics"} */
merge into test_db.test_schema.dbt_metrics as DBT_INTERNAL_DEST
        using test_db.test_schema.dbt_metrics__dbt_tmp as DBT_INTERNAL_SOURCE
        on (
                DBT_INTERNAL_SOURCE.unique_id = DBT_INTERNAL_DEST.unique_id
            )

    
    when matched then update set
        "UNIQUE_ID" = DBT_INTERNAL_SOURCE."UNIQUE_ID","NAME" = DBT_INTERNAL_SOURCE."NAME","LABEL" = DBT_INTERNAL_SOURCE."LABEL","MODEL" = DBT_INTERNAL_SOURCE."MODEL","TYPE" = DBT_INTERNAL_SOURCE."TYPE","SQL" = DBT_INTERNAL_SOURCE."SQL","TIMESTAMP" = DBT_INTERNAL_SOURCE."TIMESTAMP","FILTERS" = DBT_INTERNAL_SOURCE."FILTERS","TIME_GRAINS" = DBT_INTERNAL_SOURCE."TIME_GRAINS","DIMENSIONS" = DBT_INTERNAL_SOURCE."DIMENSIONS","DEPENDS_ON_MACROS" = DBT_INTERNAL_SOURCE."DEPENDS_ON_MACROS","DEPENDS_ON_NODES" = DBT_INTERNAL_SOURCE."DEPENDS_ON_NODES","DESCRIPTION" = DBT_INTERNAL_SOURCE."DESCRIPTION","TAGS" = DBT_INTERNAL_SOURCE."TAGS","META" = DBT_INTERNAL_SOURCE."META","PACKAGE_NAME" = DBT_INTERNAL_SOURCE."PACKAGE_NAME","ORIGINAL_PATH" = DBT_INTERNAL_SOURCE."ORIGINAL_PATH","PATH" = DBT_INTERNAL_SOURCE."PATH","GENERATED_AT" = DBT_INTERNAL_SOURCE."GENERATED_AT","METADATA_HASH" = DBT_INTERNAL_SOURCE."METADATA_HASH"
    

    when not matched then insert
        ("UNIQUE_ID", "NAME", "LABEL", "MODEL", "TYPE", "SQL", "TIMESTAMP", "FILTERS", "TIME_GRAINS", "DIMENSIONS", "DEPENDS_ON_MACROS", "DEPENDS_ON_NODES", "DESCRIPTION", "TAGS", "META", "PACKAGE_NAME", "ORIGINAL_PATH", "PATH", "GENERATED_AT", "METADATA_HASH")
    values
        ("UNIQUE_ID", "NAME", "LABEL", "MODEL", "TYPE", "SQL", "TIMESTAMP", "FILTERS", "TIME_GRAINS", "DIMENSIONS", "DEPENDS_ON_MACROS", "DEPENDS_ON_NODES", "DESCRIPTION", "TAGS", "META", "PACKAGE_NAME", "ORIGINAL_PATH", "PATH", "GENERATED_AT", "METADATA_HASH")

;
[0m13:04:36.212662 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 2.0 seconds
[0m13:04:36.223040 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.dbt_run_results"
[0m13:04:36.223779 [debug] [Thread-1 (]: On model.elementary.dbt_run_results: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_run_results"} */
describe table test_db.test_schema.dbt_run_results__dbt_tmp
[0m13:04:36.397934 [debug] [Thread-4 (]: SQL status: SUCCESS 19 in 0.0 seconds
[0m13:04:36.399752 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:36.415107 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_models"
[0m13:04:36.425837 [debug] [Thread-3 (]: Applying DROP to: test_db.test_schema.dbt_columns__tmp_20231120073432622819
[0m13:04:36.426495 [debug] [Thread-4 (]: On model.elementary.dbt_models: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_models"} */
describe table test_db.test_schema.dbt_models
[0m13:04:36.427929 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_columns"
[0m13:04:36.429348 [debug] [Thread-3 (]: On model.elementary.dbt_columns: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_columns"} */
drop table if exists test_db.test_schema.dbt_columns__tmp_20231120073432622819 cascade
[0m13:04:36.503363 [debug] [Thread-1 (]: SQL status: SUCCESS 22 in 0.0 seconds
[0m13:04:36.518683 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.dbt_run_results"
[0m13:04:36.519389 [debug] [Thread-1 (]: On model.elementary.dbt_run_results: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_run_results"} */
describe table test_db.test_schema.dbt_run_results
[0m13:04:36.540660 [debug] [Thread-2 (]: SQL status: SUCCESS 0 in 0.0 seconds
[0m13:04:36.541715 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.dbt_metrics"
[0m13:04:36.542402 [debug] [Thread-2 (]: On model.elementary.dbt_metrics: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_metrics"} */
COMMIT
[0m13:04:36.699717 [debug] [Thread-4 (]: SQL status: SUCCESS 19 in 0.0 seconds
[0m13:04:36.713927 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_models"
[0m13:04:36.714823 [debug] [Thread-4 (]: On model.elementary.dbt_models: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_models"} */
describe table test_db.test_schema.dbt_models__dbt_tmp
[0m13:04:36.717727 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:36.725138 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_columns"
[0m13:04:36.725716 [debug] [Thread-3 (]: On model.elementary.dbt_columns: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_columns"} */
select
      1700445876.723802 as build_timestamp,
      count(*) as row_count
    from test_db.test_schema.dbt_columns
[0m13:04:36.785427 [debug] [Thread-1 (]: SQL status: SUCCESS 22 in 0.0 seconds
[0m13:04:36.799065 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.dbt_run_results"
[0m13:04:36.800036 [debug] [Thread-1 (]: On model.elementary.dbt_run_results: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_run_results"} */
describe table test_db.test_schema.dbt_run_results__dbt_tmp
[0m13:04:36.847194 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:36.854839 [debug] [Thread-2 (]: Applying DROP to: test_db.test_schema.dbt_metrics__dbt_tmp
[0m13:04:36.856401 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.dbt_metrics"
[0m13:04:36.856885 [debug] [Thread-2 (]: On model.elementary.dbt_metrics: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_metrics"} */
drop view if exists test_db.test_schema.dbt_metrics__dbt_tmp cascade
[0m13:04:37.013163 [debug] [Thread-4 (]: SQL status: SUCCESS 19 in 0.0 seconds
[0m13:04:37.024999 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_models"
[0m13:04:37.026039 [debug] [Thread-4 (]: On model.elementary.dbt_models: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_models"} */
describe table "TEST_DB"."TEST_SCHEMA"."DBT_MODELS"
[0m13:04:37.085305 [debug] [Thread-1 (]: SQL status: SUCCESS 22 in 0.0 seconds
[0m13:04:37.104556 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.dbt_run_results"
[0m13:04:37.106749 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:37.107314 [debug] [Thread-1 (]: On model.elementary.dbt_run_results: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_run_results"} */
describe table "TEST_DB"."TEST_SCHEMA"."DBT_RUN_RESULTS"
[0m13:04:37.112063 [debug] [Thread-3 (]: Timing info for model.elementary.dbt_columns (execute): 13:04:26.646908 => 13:04:37.111796
[0m13:04:37.113101 [debug] [Thread-3 (]: On model.elementary.dbt_columns: Close
[0m13:04:37.136154 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:37.143795 [debug] [Thread-2 (]: Elementary: [dbt_metrics] Flattening the artifacts.
[0m13:04:37.145457 [debug] [Thread-2 (]: Elementary: [dbt_metrics] Flattened 0 artifacts.
[0m13:04:37.151170 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.dbt_metrics"
[0m13:04:37.151543 [debug] [Thread-2 (]: On model.elementary.dbt_metrics: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_metrics"} */
create or replace temporary table test_db.test_schema.dbt_metrics__tmp_20231120073437147934
         as
        (
        SELECT
        
            *
        
        FROM test_db.test_schema.dbt_metrics
        WHERE 1 = 0
    
        );
[0m13:04:37.303691 [debug] [Thread-4 (]: SQL status: SUCCESS 19 in 0.0 seconds
[0m13:04:37.312669 [debug] [Thread-4 (]: 
    In "TEST_DB"."TEST_SCHEMA"."DBT_MODELS":
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m13:04:37.318084 [debug] [Thread-4 (]: Writing runtime sql for node "model.elementary.dbt_models"
[0m13:04:37.323863 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_models"
[0m13:04:37.324435 [debug] [Thread-4 (]: On model.elementary.dbt_models: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_models"} */
-- back compat for old kwarg name
  
  begin;
[0m13:04:37.387415 [debug] [Thread-1 (]: SQL status: SUCCESS 22 in 0.0 seconds
[0m13:04:37.398229 [debug] [Thread-1 (]: 
    In "TEST_DB"."TEST_SCHEMA"."DBT_RUN_RESULTS":
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m13:04:37.405415 [debug] [Thread-1 (]: Writing runtime sql for node "model.elementary.dbt_run_results"
[0m13:04:37.408577 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.dbt_run_results"
[0m13:04:37.409193 [debug] [Thread-1 (]: On model.elementary.dbt_run_results: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_run_results"} */
-- back compat for old kwarg name
  
  begin;
[0m13:04:37.603948 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113a5d410>]}
[0m13:04:37.605702 [info ] [Thread-3 (]: 3 of 32 OK created sql incremental model test_schema.dbt_columns ............... [[32mSUCCESS 0[0m in 11.06s]
[0m13:04:37.607122 [debug] [Thread-3 (]: Finished running node model.elementary.dbt_columns
[0m13:04:37.607918 [debug] [Thread-3 (]: Began running node model.elementary.dbt_seeds
[0m13:04:37.608827 [info ] [Thread-3 (]: 9 of 32 START sql incremental model test_schema.dbt_seeds ...................... [RUN]
[0m13:04:37.610047 [debug] [Thread-3 (]: Re-using an available connection from the pool (formerly model.elementary.dbt_columns, now model.elementary.dbt_seeds)
[0m13:04:37.610674 [debug] [Thread-3 (]: Began compiling node model.elementary.dbt_seeds
[0m13:04:37.639553 [debug] [Thread-3 (]: Writing injected SQL for node "model.elementary.dbt_seeds"
[0m13:04:37.640899 [debug] [Thread-3 (]: Timing info for model.elementary.dbt_seeds (compile): 13:04:37.611036 => 13:04:37.640664
[0m13:04:37.641236 [debug] [Thread-3 (]: Began executing node model.elementary.dbt_seeds
[0m13:04:37.647266 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_seeds"
[0m13:04:37.647609 [debug] [Thread-3 (]: On model.elementary.dbt_seeds: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_seeds"} */
create or replace  temporary view test_db.test_schema.dbt_seeds__dbt_tmp
  
   as (
    

with empty_table as (
            select
            
                
        cast('dummy_string' as varchar) as unique_id

,
                
        cast('dummy_string' as varchar) as alias

,
                
        cast('dummy_string' as varchar) as checksum

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as meta

,
                
        cast('dummy_string' as varchar) as owner

,
                
        cast('dummy_string' as varchar) as database_name

,
                
        cast('dummy_string' as varchar) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as description

,
                
        cast('dummy_string' as varchar) as name

,
                
        cast('dummy_string' as varchar) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as original_path

,
                
        cast('dummy_string' as varchar) as path

,
                
        cast('dummy_string' as varchar) as generated_at

,
                
        cast('dummy_string' as varchar) as metadata_hash


            )
        select * from empty_table
        where 1 = 0
  );
[0m13:04:37.647921 [debug] [Thread-3 (]: Opening a new connection, currently in state closed
[0m13:04:37.678228 [debug] [Thread-4 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:37.678625 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_models"
[0m13:04:37.679069 [debug] [Thread-4 (]: On model.elementary.dbt_models: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_models"} */
merge into test_db.test_schema.dbt_models as DBT_INTERNAL_DEST
        using test_db.test_schema.dbt_models__dbt_tmp as DBT_INTERNAL_SOURCE
        on (
                DBT_INTERNAL_SOURCE.unique_id = DBT_INTERNAL_DEST.unique_id
            )

    
    when matched then update set
        "UNIQUE_ID" = DBT_INTERNAL_SOURCE."UNIQUE_ID","ALIAS" = DBT_INTERNAL_SOURCE."ALIAS","CHECKSUM" = DBT_INTERNAL_SOURCE."CHECKSUM","MATERIALIZATION" = DBT_INTERNAL_SOURCE."MATERIALIZATION","TAGS" = DBT_INTERNAL_SOURCE."TAGS","META" = DBT_INTERNAL_SOURCE."META","OWNER" = DBT_INTERNAL_SOURCE."OWNER","DATABASE_NAME" = DBT_INTERNAL_SOURCE."DATABASE_NAME","SCHEMA_NAME" = DBT_INTERNAL_SOURCE."SCHEMA_NAME","DEPENDS_ON_MACROS" = DBT_INTERNAL_SOURCE."DEPENDS_ON_MACROS","DEPENDS_ON_NODES" = DBT_INTERNAL_SOURCE."DEPENDS_ON_NODES","DESCRIPTION" = DBT_INTERNAL_SOURCE."DESCRIPTION","NAME" = DBT_INTERNAL_SOURCE."NAME","PACKAGE_NAME" = DBT_INTERNAL_SOURCE."PACKAGE_NAME","ORIGINAL_PATH" = DBT_INTERNAL_SOURCE."ORIGINAL_PATH","PATH" = DBT_INTERNAL_SOURCE."PATH","PATCH_PATH" = DBT_INTERNAL_SOURCE."PATCH_PATH","GENERATED_AT" = DBT_INTERNAL_SOURCE."GENERATED_AT","METADATA_HASH" = DBT_INTERNAL_SOURCE."METADATA_HASH"
    

    when not matched then insert
        ("UNIQUE_ID", "ALIAS", "CHECKSUM", "MATERIALIZATION", "TAGS", "META", "OWNER", "DATABASE_NAME", "SCHEMA_NAME", "DEPENDS_ON_MACROS", "DEPENDS_ON_NODES", "DESCRIPTION", "NAME", "PACKAGE_NAME", "ORIGINAL_PATH", "PATH", "PATCH_PATH", "GENERATED_AT", "METADATA_HASH")
    values
        ("UNIQUE_ID", "ALIAS", "CHECKSUM", "MATERIALIZATION", "TAGS", "META", "OWNER", "DATABASE_NAME", "SCHEMA_NAME", "DEPENDS_ON_MACROS", "DEPENDS_ON_NODES", "DESCRIPTION", "NAME", "PACKAGE_NAME", "ORIGINAL_PATH", "PATH", "PATCH_PATH", "GENERATED_AT", "METADATA_HASH")

;
[0m13:04:37.681759 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:37.685530 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.dbt_metrics"
[0m13:04:37.686220 [debug] [Thread-2 (]: On model.elementary.dbt_metrics: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_metrics"} */
create or replace  table test_db.test_schema.dbt_metrics
         as
        (select * from test_db.test_schema.dbt_metrics__tmp_20231120073437147934
        );
[0m13:04:37.714529 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:37.715023 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.dbt_run_results"
[0m13:04:37.715660 [debug] [Thread-1 (]: On model.elementary.dbt_run_results: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_run_results"} */
merge into test_db.test_schema.dbt_run_results as DBT_INTERNAL_DEST
        using test_db.test_schema.dbt_run_results__dbt_tmp as DBT_INTERNAL_SOURCE
        on (
                DBT_INTERNAL_SOURCE.model_execution_id = DBT_INTERNAL_DEST.model_execution_id
            )

    
    when matched then update set
        "MODEL_EXECUTION_ID" = DBT_INTERNAL_SOURCE."MODEL_EXECUTION_ID","UNIQUE_ID" = DBT_INTERNAL_SOURCE."UNIQUE_ID","INVOCATION_ID" = DBT_INTERNAL_SOURCE."INVOCATION_ID","GENERATED_AT" = DBT_INTERNAL_SOURCE."GENERATED_AT","CREATED_AT" = DBT_INTERNAL_SOURCE."CREATED_AT","NAME" = DBT_INTERNAL_SOURCE."NAME","MESSAGE" = DBT_INTERNAL_SOURCE."MESSAGE","STATUS" = DBT_INTERNAL_SOURCE."STATUS","RESOURCE_TYPE" = DBT_INTERNAL_SOURCE."RESOURCE_TYPE","EXECUTION_TIME" = DBT_INTERNAL_SOURCE."EXECUTION_TIME","EXECUTE_STARTED_AT" = DBT_INTERNAL_SOURCE."EXECUTE_STARTED_AT","EXECUTE_COMPLETED_AT" = DBT_INTERNAL_SOURCE."EXECUTE_COMPLETED_AT","COMPILE_STARTED_AT" = DBT_INTERNAL_SOURCE."COMPILE_STARTED_AT","COMPILE_COMPLETED_AT" = DBT_INTERNAL_SOURCE."COMPILE_COMPLETED_AT","ROWS_AFFECTED" = DBT_INTERNAL_SOURCE."ROWS_AFFECTED","FULL_REFRESH" = DBT_INTERNAL_SOURCE."FULL_REFRESH","COMPILED_CODE" = DBT_INTERNAL_SOURCE."COMPILED_CODE","FAILURES" = DBT_INTERNAL_SOURCE."FAILURES","QUERY_ID" = DBT_INTERNAL_SOURCE."QUERY_ID","THREAD_ID" = DBT_INTERNAL_SOURCE."THREAD_ID","MATERIALIZATION" = DBT_INTERNAL_SOURCE."MATERIALIZATION","ADAPTER_RESPONSE" = DBT_INTERNAL_SOURCE."ADAPTER_RESPONSE"
    

    when not matched then insert
        ("MODEL_EXECUTION_ID", "UNIQUE_ID", "INVOCATION_ID", "GENERATED_AT", "CREATED_AT", "NAME", "MESSAGE", "STATUS", "RESOURCE_TYPE", "EXECUTION_TIME", "EXECUTE_STARTED_AT", "EXECUTE_COMPLETED_AT", "COMPILE_STARTED_AT", "COMPILE_COMPLETED_AT", "ROWS_AFFECTED", "FULL_REFRESH", "COMPILED_CODE", "FAILURES", "QUERY_ID", "THREAD_ID", "MATERIALIZATION", "ADAPTER_RESPONSE")
    values
        ("MODEL_EXECUTION_ID", "UNIQUE_ID", "INVOCATION_ID", "GENERATED_AT", "CREATED_AT", "NAME", "MESSAGE", "STATUS", "RESOURCE_TYPE", "EXECUTION_TIME", "EXECUTE_STARTED_AT", "EXECUTE_COMPLETED_AT", "COMPILE_STARTED_AT", "COMPILE_COMPLETED_AT", "ROWS_AFFECTED", "FULL_REFRESH", "COMPILED_CODE", "FAILURES", "QUERY_ID", "THREAD_ID", "MATERIALIZATION", "ADAPTER_RESPONSE")

;
[0m13:04:38.261364 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:38.273743 [debug] [Thread-2 (]: Applying DROP to: test_db.test_schema.dbt_metrics__tmp_20231120073437147934
[0m13:04:38.275908 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.dbt_metrics"
[0m13:04:38.276508 [debug] [Thread-2 (]: On model.elementary.dbt_metrics: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_metrics"} */
drop table if exists test_db.test_schema.dbt_metrics__tmp_20231120073437147934 cascade
[0m13:04:38.560946 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:38.563048 [debug] [Thread-4 (]: SQL status: SUCCESS 0 in 1.0 seconds
[0m13:04:38.570768 [debug] [Thread-1 (]: SQL status: SUCCESS 0 in 1.0 seconds
[0m13:04:38.575564 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.dbt_metrics"
[0m13:04:38.576281 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_models"
[0m13:04:38.576891 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.dbt_run_results"
[0m13:04:38.577380 [debug] [Thread-2 (]: On model.elementary.dbt_metrics: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_metrics"} */
select
      1700445878.574134 as build_timestamp,
      count(*) as row_count
    from test_db.test_schema.dbt_metrics
[0m13:04:38.577832 [debug] [Thread-4 (]: On model.elementary.dbt_models: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_models"} */
COMMIT
[0m13:04:38.578273 [debug] [Thread-1 (]: On model.elementary.dbt_run_results: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_run_results"} */
COMMIT
[0m13:04:38.874063 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:38.882099 [debug] [Thread-2 (]: Timing info for model.elementary.dbt_metrics (execute): 13:04:32.945946 => 13:04:38.881640
[0m13:04:38.883069 [debug] [Thread-2 (]: On model.elementary.dbt_metrics: Close
[0m13:04:39.013230 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:39.026815 [debug] [Thread-1 (]: Applying DROP to: test_db.test_schema.dbt_run_results__dbt_tmp
[0m13:04:39.029434 [debug] [Thread-4 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:39.031414 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.dbt_run_results"
[0m13:04:39.040180 [debug] [Thread-4 (]: Applying DROP to: test_db.test_schema.dbt_models__dbt_tmp
[0m13:04:39.041072 [debug] [Thread-1 (]: On model.elementary.dbt_run_results: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_run_results"} */
drop view if exists test_db.test_schema.dbt_run_results__dbt_tmp cascade
[0m13:04:39.042842 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_models"
[0m13:04:39.044316 [debug] [Thread-4 (]: On model.elementary.dbt_models: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_models"} */
drop view if exists test_db.test_schema.dbt_models__dbt_tmp cascade
[0m13:04:39.165500 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 2.0 seconds
[0m13:04:39.177769 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_seeds"
[0m13:04:39.178765 [debug] [Thread-3 (]: On model.elementary.dbt_seeds: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_seeds"} */
describe table test_db.test_schema.dbt_seeds__dbt_tmp
[0m13:04:39.368358 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:39.381119 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.dbt_run_results"
[0m13:04:39.381895 [debug] [Thread-1 (]: On model.elementary.dbt_run_results: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_run_results"} */
select
      1700445879.379735 as build_timestamp,
      count(*) as row_count
    from test_db.test_schema.dbt_run_results
[0m13:04:39.396952 [debug] [Thread-4 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:39.407005 [debug] [Thread-4 (]: Elementary: [dbt_models] Flattening the artifacts.
[0m13:04:39.452004 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1122b9dd0>]}
[0m13:04:39.464939 [info ] [Thread-2 (]: 6 of 32 OK created sql incremental model test_schema.dbt_metrics ............... [[32mSUCCESS 0[0m in 6.55s]
[0m13:04:39.484719 [debug] [Thread-4 (]: Elementary: [dbt_models] Flattened 32 artifacts.
[0m13:04:39.485054 [debug] [Thread-3 (]: SQL status: SUCCESS 15 in 0.0 seconds
[0m13:04:39.485278 [debug] [Thread-2 (]: Finished running node model.elementary.dbt_metrics
[0m13:04:39.487434 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_models"
[0m13:04:39.489730 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_seeds"
[0m13:04:39.489948 [debug] [Thread-2 (]: Began running node model.elementary.dbt_snapshots
[0m13:04:39.490172 [debug] [Thread-4 (]: On model.elementary.dbt_models: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_models"} */
create or replace temporary table test_db.test_schema.dbt_models__tmp_20231120073439486107
         as
        (
        SELECT
        
            *
        
        FROM test_db.test_schema.dbt_models
        WHERE 1 = 0
    
        );
[0m13:04:39.490348 [debug] [Thread-3 (]: On model.elementary.dbt_seeds: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_seeds"} */
describe table test_db.test_schema.dbt_seeds
[0m13:04:39.490539 [info ] [Thread-2 (]: 10 of 32 START sql incremental model test_schema.dbt_snapshots ................. [RUN]
[0m13:04:39.491580 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.elementary.dbt_metrics, now model.elementary.dbt_snapshots)
[0m13:04:39.491759 [debug] [Thread-2 (]: Began compiling node model.elementary.dbt_snapshots
[0m13:04:39.501814 [debug] [Thread-2 (]: Writing injected SQL for node "model.elementary.dbt_snapshots"
[0m13:04:39.503173 [debug] [Thread-2 (]: Timing info for model.elementary.dbt_snapshots (compile): 13:04:39.491877 => 13:04:39.503059
[0m13:04:39.503331 [debug] [Thread-2 (]: Began executing node model.elementary.dbt_snapshots
[0m13:04:39.506410 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.dbt_snapshots"
[0m13:04:39.506611 [debug] [Thread-2 (]: On model.elementary.dbt_snapshots: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_snapshots"} */
create or replace  temporary view test_db.test_schema.dbt_snapshots__dbt_tmp
  
   as (
    

with empty_table as (
            select
            
                
        cast('dummy_string' as varchar) as unique_id

,
                
        cast('dummy_string' as varchar) as alias

,
                
        cast('dummy_string' as varchar) as checksum

,
                
        cast('dummy_string' as varchar) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as meta

,
                
        cast('dummy_string' as varchar) as owner

,
                
        cast('dummy_string' as varchar) as database_name

,
                
        cast('dummy_string' as varchar) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as description

,
                
        cast('dummy_string' as varchar) as name

,
                
        cast('dummy_string' as varchar) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as original_path

,
                
        cast('dummy_string' as varchar) as path

,
                
        cast('dummy_string' as varchar) as patch_path

,
                
        cast('dummy_string' as varchar) as generated_at

,
                
        cast('dummy_string' as varchar) as metadata_hash


            )
        select * from empty_table
        where 1 = 0
  );
[0m13:04:39.506809 [debug] [Thread-2 (]: Opening a new connection, currently in state closed
[0m13:04:39.775406 [debug] [Thread-3 (]: SQL status: SUCCESS 15 in 0.0 seconds
[0m13:04:39.780046 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_seeds"
[0m13:04:39.780452 [debug] [Thread-3 (]: On model.elementary.dbt_seeds: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_seeds"} */
describe table test_db.test_schema.dbt_seeds__dbt_tmp
[0m13:04:39.890500 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:39.899236 [debug] [Thread-1 (]: Timing info for model.elementary.dbt_run_results (execute): 13:04:34.678591 => 13:04:39.898735
[0m13:04:39.900129 [debug] [Thread-1 (]: On model.elementary.dbt_run_results: Close
[0m13:04:40.051138 [debug] [Thread-3 (]: SQL status: SUCCESS 15 in 0.0 seconds
[0m13:04:40.068044 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_seeds"
[0m13:04:40.068820 [debug] [Thread-3 (]: On model.elementary.dbt_seeds: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_seeds"} */
describe table "TEST_DB"."TEST_SCHEMA"."DBT_SEEDS"
[0m13:04:40.117063 [debug] [Thread-4 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:40.133764 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_models"
[0m13:04:40.134470 [debug] [Thread-4 (]: On model.elementary.dbt_models: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_models"} */
describe table test_db.test_schema.dbt_models__tmp_20231120073439486107
[0m13:04:40.332820 [debug] [Thread-3 (]: SQL status: SUCCESS 15 in 0.0 seconds
[0m13:04:40.341668 [debug] [Thread-3 (]: 
    In "TEST_DB"."TEST_SCHEMA"."DBT_SEEDS":
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m13:04:40.347827 [debug] [Thread-3 (]: Writing runtime sql for node "model.elementary.dbt_seeds"
[0m13:04:40.350783 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_seeds"
[0m13:04:40.351254 [debug] [Thread-3 (]: On model.elementary.dbt_seeds: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_seeds"} */
-- back compat for old kwarg name
  
  begin;
[0m13:04:40.415161 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1121a8550>]}
[0m13:04:40.418871 [debug] [Thread-4 (]: SQL status: SUCCESS 19 in 0.0 seconds
[0m13:04:40.420594 [info ] [Thread-1 (]: 8 of 32 OK created sql incremental model test_schema.dbt_run_results ........... [[32mSUCCESS 0[0m in 6.03s]
[0m13:04:40.426430 [debug] [Thread-4 (]: Elementary: Inserting 32 rows to table test_db.test_schema.dbt_models__tmp_20231120073439486107
[0m13:04:40.427523 [debug] [Thread-1 (]: Finished running node model.elementary.dbt_run_results
[0m13:04:40.454616 [debug] [Thread-1 (]: Began running node model.elementary.dbt_source_freshness_results
[0m13:04:40.461582 [info ] [Thread-1 (]: 11 of 32 START sql incremental model test_schema.dbt_source_freshness_results .. [RUN]
[0m13:04:40.475273 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.elementary.dbt_run_results, now model.elementary.dbt_source_freshness_results)
[0m13:04:40.519346 [debug] [Thread-1 (]: Began compiling node model.elementary.dbt_source_freshness_results
[0m13:04:40.553917 [debug] [Thread-1 (]: Writing injected SQL for node "model.elementary.dbt_source_freshness_results"
[0m13:04:40.604802 [debug] [Thread-1 (]: Timing info for model.elementary.dbt_source_freshness_results (compile): 13:04:40.538339 => 13:04:40.604634
[0m13:04:40.616863 [debug] [Thread-1 (]: Began executing node model.elementary.dbt_source_freshness_results
[0m13:04:40.620198 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.dbt_source_freshness_results"
[0m13:04:40.633169 [debug] [Thread-1 (]: On model.elementary.dbt_source_freshness_results: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_source_freshness_results"} */
create or replace  temporary view test_db.test_schema.dbt_source_freshness_results__dbt_tmp
  
   as (
    


    with empty_table as (
            select
            
                
        cast('dummy_string' as varchar) as source_freshness_execution_id

,
                
        cast('dummy_string' as varchar) as unique_id

,
                
        cast('dummy_string' as varchar) as max_loaded_at

,
                
        cast('dummy_string' as varchar) as snapshotted_at

,
                
        cast('dummy_string' as varchar) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast(123456789.99 as float) as max_loaded_at_time_ago_in_s

,
                
        cast('dummy_string' as varchar) as status

,
                
        cast('dummy_string' as varchar) as error

,
                
        cast('dummy_string' as varchar) as compile_started_at

,
                
        cast('dummy_string' as varchar) as compile_completed_at

,
                
        cast('dummy_string' as varchar) as execute_started_at

,
                
        cast('dummy_string' as varchar) as execute_completed_at

,
                
        cast('dummy_string' as varchar) as invocation_id

,
                
        cast('dummy_string' as varchar) as warn_after

,
                
        cast('dummy_string' as varchar) as error_after

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as filter


            )
        select * from empty_table
        where 1 = 0

  );
[0m13:04:40.645362 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:04:40.658119 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:40.695340 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_seeds"
[0m13:04:40.701619 [debug] [Thread-3 (]: On model.elementary.dbt_seeds: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_seeds"} */
merge into test_db.test_schema.dbt_seeds as DBT_INTERNAL_DEST
        using test_db.test_schema.dbt_seeds__dbt_tmp as DBT_INTERNAL_SOURCE
        on (
                DBT_INTERNAL_SOURCE.unique_id = DBT_INTERNAL_DEST.unique_id
            )

    
    when matched then update set
        "UNIQUE_ID" = DBT_INTERNAL_SOURCE."UNIQUE_ID","ALIAS" = DBT_INTERNAL_SOURCE."ALIAS","CHECKSUM" = DBT_INTERNAL_SOURCE."CHECKSUM","TAGS" = DBT_INTERNAL_SOURCE."TAGS","META" = DBT_INTERNAL_SOURCE."META","OWNER" = DBT_INTERNAL_SOURCE."OWNER","DATABASE_NAME" = DBT_INTERNAL_SOURCE."DATABASE_NAME","SCHEMA_NAME" = DBT_INTERNAL_SOURCE."SCHEMA_NAME","DESCRIPTION" = DBT_INTERNAL_SOURCE."DESCRIPTION","NAME" = DBT_INTERNAL_SOURCE."NAME","PACKAGE_NAME" = DBT_INTERNAL_SOURCE."PACKAGE_NAME","ORIGINAL_PATH" = DBT_INTERNAL_SOURCE."ORIGINAL_PATH","PATH" = DBT_INTERNAL_SOURCE."PATH","GENERATED_AT" = DBT_INTERNAL_SOURCE."GENERATED_AT","METADATA_HASH" = DBT_INTERNAL_SOURCE."METADATA_HASH"
    

    when not matched then insert
        ("UNIQUE_ID", "ALIAS", "CHECKSUM", "TAGS", "META", "OWNER", "DATABASE_NAME", "SCHEMA_NAME", "DESCRIPTION", "NAME", "PACKAGE_NAME", "ORIGINAL_PATH", "PATH", "GENERATED_AT", "METADATA_HASH")
    values
        ("UNIQUE_ID", "ALIAS", "CHECKSUM", "TAGS", "META", "OWNER", "DATABASE_NAME", "SCHEMA_NAME", "DESCRIPTION", "NAME", "PACKAGE_NAME", "ORIGINAL_PATH", "PATH", "GENERATED_AT", "METADATA_HASH")

;
[0m13:04:40.781008 [debug] [Thread-4 (]: Elementary: [1/1] Running insert query.
[0m13:04:40.784105 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_models"
[0m13:04:40.784914 [debug] [Thread-4 (]: On model.elementary.dbt_models: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_models"} */
insert into test_db.test_schema.dbt_models__tmp_20231120073439486107
         (UNIQUE_ID,ALIAS,CHECKSUM,MATERIALIZATION,TAGS,META,OWNER,DATABASE_NAME,SCHEMA_NAME,DEPENDS_ON_MACROS,DEPENDS_ON_NODES,DESCRIPTION,NAME,PACKAGE_NAME,ORIGINAL_PATH,PATH,PATCH_PATH,GENERATED_AT,METADATA_HASH) values
    ('model.dbt_suman_local.my_first_dbt_model','my_first_dbt_model','2cd08e42d4b7ca403a9eb0412446ab0769eb3c0ea9bc7ee62f2111ae63194071','table','[]','{}','[]','test_db','test_schema','[]','[]','A starter dbt model','my_first_dbt_model','dbt_suman_local','models/example/my_first_dbt_model.sql','example/my_first_dbt_model.sql','dbt_suman_local://models/example/schema.yml','2023-11-20 07:34:39','76331e96ffdfc6b8d43b98b942784b06'),('model.dbt_suman_local.my_second_dbt_model','my_second_dbt_model','dc8c458292bc2fb8ce4591cb70c1e23046e3c2e33fb1c2ce732658f90e231f1e','view','[]','{}','[]','test_db','test_schema','[]','["model.dbt_suman_local.my_first_dbt_model"]','A starter dbt model','my_second_dbt_model','dbt_suman_local','models/example/my_second_dbt_model.sql','example/my_second_dbt_model.sql','dbt_suman_local://models/example/schema.yml','2023-11-20 07:34:39','f1956fc90cadcd2710daf78ee6554d7b'),('model.elementary.snapshot_run_results','snapshot_run_results','1b4464b5d2043628e6ca2f1b435220ef0d577a48eecfc07b5ea5657e69c55b02','view','[]','{}','[]','test_db','test_schema','[]','["model.elementary.dbt_run_results", "model.elementary.dbt_snapshots"]','Run results of dbt snapshots, enriched with snapshots metadata. Each row is the result of a single snapshot. This is a view that joins data from `dbt_run_results` and `dbt_snapshots`.\n','snapshot_run_results','elementary','models/edr/run_results/snapshot_run_results.sql','edr/run_results/snapshot_run_results.sql','elementary://models/run_results.yml','2023-11-20 07:34:39','d8c0c2d9a85aae181d4763c16c4c0c20'),('model.elementary.job_run_results','job_run_results','70fa0f75184f074237575d1146a8caf3048d0d0300a5da5013b7a88f137bc810','view','[]','{}','[]','test_db','test_schema','["macro.elementary.edr_cast_as_timestamp", "macro.elementary.timediff"]','["model.elementary.dbt_invocations"]','Run results of dbt invocations, enriched with jobs metadata. Each row is the result of a single job. This is a view on `dbt_invocations`.','job_run_results','elementary','models/edr/run_results/job_run_results.sql','edr/run_results/job_run_results.sql','elementary://models/run_results.yml','2023-11-20 07:34:39','0fba249e8ed42a5fa166508a13f98645'),('model.elementary.model_run_results','model_run_results','99fba47e42516fbdc31e2546f687e3f780f21eaa5ac303e1ed22d23262ac5ec9','view','[]','{}','[]','test_db','test_schema','["macro.elementary.edr_time_trunc"]','["model.elementary.dbt_models", "model.elementary.dbt_run_results"]','Run results of dbt models, enriched with models metadata. Each row is the result of a single model. This is a view that joins data from `dbt_run_results` and `dbt_models`.\n','model_run_results','elementary','models/edr/run_results/model_run_results.sql','edr/run_results/model_run_results.sql','elementary://models/run_results.yml','2023-11-20 07:34:39','86eb9db8e2b3a111163ae9270c0fdafc'),('model.elementary.test_result_rows','test_result_rows','0909a70fc97aa3910dd175e2717af427465454dea52928e57d016309a38af7d6','incremental','[]','{"timestamp_column": "created_at", "prev_timestamp_column": "detected_at"}','[]','test_db','test_schema','["macro.elementary.backfill_result_rows", "macro.elementary.empty_table", "macro.elementary.get_config_var"]','["model.elementary.elementary_test_results"]','','test_result_rows','elementary','models/edr/run_results/test_result_rows.sql','edr/run_results/test_result_rows.sql',NULL,'2023-11-20 07:34:39','9a557bc074165fdff57804f81b793fdf'),('model.elementary.elementary_test_results','elementary_test_results','c7e2506d700fde9f60e00f0e61ac45869aa89d1a387b8356440ed03b17a515c8','incremental','[]','{"timestamp_column": "created_at", "prev_timestamp_column": "detected_at"}','[]','test_db','test_schema','["macro.elementary.empty_elementary_test_results", "macro.elementary.get_config_var"]','[]','Run results of all dbt tests, with fields and metadata needed to produce the Elementary report UI. Each row is the result of a single test, including native dbt tests, packages tests and elementary tests. New data is loaded to this model on an on-run-end hook named `elementary.handle_tests_results`.\n','elementary_test_results','elementary','models/edr/run_results/elementary_test_results.sql','edr/run_results/elementary_test_results.sql','elementary://models/run_results.yml','2023-11-20 07:34:39','0e40fb76e296f2c365637ff0fb5c67fd'),('model.elementary.dbt_source_freshness_results','dbt_source_freshness_results','9a26eff9c18a54283a48fe72947e6526c1e5f9d59e9776fc54a4db856f687bba','incremental','[]','{"timestamp_column": "created_at", "prev_timestamp_column": "generated_at"}','[]','test_db','test_schema','["macro.elementary.empty_dbt_source_freshness_results", "macro.elementary.get_config_var"]','[]','','dbt_source_freshness_results','elementary','models/edr/run_results/dbt_source_freshness_results.sql','edr/run_results/dbt_source_freshness_results.sql',NULL,'2023-11-20 07:34:39','20450e677d0773d679afcd2cb38a6053'),('model.elementary.alerts_dbt_tests','alerts_dbt_tests','d15f2b4a7ade165ad09b2b9f6d143d9d47ab0f080b2de5dce1c6fae9e30375ba','view','[]','{}','[]','test_db','test_schema','["macro.elementary.get_config_var"]','["model.elementary.elementary_test_results"]','A view that is used by the Elementary CLI to generate dbt tests alerts, including all the fields the alert will include such as owner, tags, error message, etc. This view includes data about all dbt tests except elementary tests. It filters alerts according to configuration.\n','alerts_dbt_tests','elementary','models/edr/alerts/alerts_dbt_tests.sql','edr/alerts/alerts_dbt_tests.sql','elementary://models/alerts_views.yml','2023-11-20 07:34:39','85424b2b96f56336f55c836729954fd1'),('model.elementary.alerts_schema_changes','alerts_schema_changes','bad7007c54d8885efe0496bd6289998cfed84a250ada4899fb8e53765236db0b','view','[]','{}','[]','test_db','test_schema','["macro.elementary.get_config_var"]','["model.elementary.elementary_test_results"]','A view that is used by the Elementary CLI to generate alerts on schema changes detected using elementary tests. The view filters alerts according to configuration.','alerts_schema_changes','elementary','models/edr/alerts/alerts_schema_changes.sql','edr/alerts/alerts_schema_changes.sql','elementary://models/alerts_views.yml','2023-11-20 07:34:39','ddf35b9ae1fc1b911a95d695fe1e5435'),('model.elementary.alerts_dbt_source_freshness','alerts_dbt_source_freshness','20e2c52e9ecf71b2837ffed781d160d0d2d2ed3af4e8142cd4c02015ff343770','view','[]','{}','[]','test_db','test_schema','["macro.elementary.get_config_var"]','["model.elementary.dbt_source_freshness_results", "model.elementary.dbt_sources"]','','alerts_dbt_source_freshness','elementary','models/edr/alerts/alerts_dbt_source_freshness.sql','edr/alerts/alerts_dbt_source_freshness.sql',NULL,'2023-11-20 07:34:39','8452a987f6e49fa15184a5ebcafd5683'),('model.elementary.alerts_anomaly_detection','alerts_anomaly_detection','0d2bb9c33ded81e6501643abeeacde1b21695f406b861f748923e4bd9ce0c4c8','view','[]','{}','[]','test_db','test_schema','["macro.elementary.get_config_var"]','["model.elementary.elementary_test_results"]','A view that is used by the Elementary CLI to generate alerts on data anomalies detected using the elementary anomaly detection tests. The view filters alerts according to configuration.\n','alerts_anomaly_detection','elementary','models/edr/alerts/alerts_anomaly_detection.sql','edr/alerts/alerts_anomaly_detection.sql','elementary://models/alerts_views.yml','2023-11-20 07:34:39','8725268440c4348a3a601d1a5516d21e'),('model.elementary.alerts_dbt_models','alerts_dbt_models','d039f6459f8b9cb0d6f1e4cf653de020cc90eb035e31107860dfbaea302304f9','view','[]','{}','[]','test_db','test_schema','["macro.elementary.get_config_var"]','["model.elementary.model_run_results", "model.elementary.snapshot_run_results"]','A view that is used by the Elementary CLI to generate models alerts, including all the fields the alert will include such as owner, tags, error message, etc. It joins data about models and snapshots run results, and filters alerts according to configuration.\n','alerts_dbt_models','elementary','models/edr/alerts/alerts_dbt_models.sql','edr/alerts/alerts_dbt_models.sql','elementary://models/alerts_views.yml','2023-11-20 07:34:39','af0b602bff3baf804989a74b4e37fb8e'),('model.elementary.monitors_runs','monitors_runs','3720e206635d4f2f95c193835727b0d533ec1a5fa56e5dec79331418d07e934f','view','[]','{}','[]','test_db','test_schema','[]','["model.elementary.data_monitoring_metrics"]','This is a view on `data_monitoring_metrics` that is used to determine when a specific anomaly detection test was last executed. Each anomaly detection test queries this view to decide on a start time for collecting metrics.\n','monitors_runs','elementary','models/edr/system/monitors_runs.sql','edr/system/monitors_runs.sql','elementary://models/elementary_tests.yml','2023-11-20 07:34:39','4aa11286347b764ed91ad5bc0ec43221'),('model.elementary.metadata','metadata','7d06c726499b330d51c340d2dc2774ac95f958fd6824c09711b3881b39b76a84','table','[]','{}','[]','test_db','test_schema','["macro.elementary.get_elementary_package_version"]','[]','','metadata','elementary','models/edr/system/metadata.sql','edr/system/metadata.sql',NULL,'2023-11-20 07:34:39','8a81fa4fef58b99509567fb9b678006d'),('model.elementary.dbt_tests','dbt_tests','741409041141e4601052d37da988d545419809fd0c630fa7cfee31d75e66a5c2','incremental','[]','{}','[]','test_db','test_schema','["macro.elementary.get_config_var", "macro.elementary.get_dbt_tests_empty_table_query", "macro.elementary.upload_dbt_tests"]','[]','Metadata about tests in the project, including configuration and properties from the dbt graph. Each row contains information about a single test. Data is loaded every time this model is executed. It is recommended to execute the model every time a change is merged to the project.\n','dbt_tests','elementary','models/edr/dbt_artifacts/dbt_tests.sql','edr/dbt_artifacts/dbt_tests.sql','elementary://models/dbt_artifacts.yml','2023-11-20 07:34:39','3b31460ecc20df36548681a3d51b071e'),('model.elementary.dbt_models','dbt_models','593b000e1d5ce7b219e4de4086c067491fb0333274ab375e793ccb2fb9fd3759','incremental','[]','{}','[]','test_db','test_schema','["macro.elementary.get_config_var", "macro.elementary.get_dbt_models_empty_table_query", "macro.elementary.upload_dbt_models"]','[]','Metadata about models in the project, including configuration and properties from the dbt graph. Each row contains information about a single model. Data is loaded every time this model is executed. It is recommended to execute the model every time a change is merged to the project.\n','dbt_models','elementary','models/edr/dbt_artifacts/dbt_models.sql','edr/dbt_artifacts/dbt_models.sql','elementary://models/dbt_artifacts.yml','2023-11-20 07:34:39','c5cf4c97ef77b7223fe07668cb8c8e68'),('model.elementary.dbt_sources','dbt_sources','d8a8439c596b52172075bc5b4106ba6c38d6dbfddbb83677b08815ea400bc712','incremental','[]','{}','[]','test_db','test_schema','["macro.elementary.get_config_var", "macro.elementary.get_dbt_sources_empty_table_query", "macro.elementary.upload_dbt_sources"]','[]','Metadata about sources in the project, including configuration and properties from the dbt graph. Each row contains information about a single source. Data is loaded every time this model is executed. It is recommended to execute the model every time a change is merged to the project.\n','dbt_sources','elementary','models/edr/dbt_artifacts/dbt_sources.sql','edr/dbt_artifacts/dbt_sources.sql','elementary://models/dbt_artifacts.yml','2023-11-20 07:34:39','155492126c9213208c5ce10af7e11bc2'),('model.elementary.dbt_snapshots','dbt_snapshots','e9a4dd4bf0b0a9ec362d517a263768f9c09d319b49297618b0e68201241db006','incremental','[]','{}','[]','test_db','test_schema','["macro.elementary.get_config_var", "macro.elementary.get_dbt_models_empty_table_query", "macro.elementary.upload_dbt_snapshots"]','[]','Metadata about snapshots in the project, including configuration and properties from the dbt graph. Each row contains information about a single snapshot. Data is loaded every time this model is executed. It is recommended to execute the model every time a change is merged to the project.\n','dbt_snapshots','elementary','models/edr/dbt_artifacts/dbt_snapshots.sql','edr/dbt_artifacts/dbt_snapshots.sql','elementary://models/dbt_artifacts.yml','2023-11-20 07:34:39','26cd15b8124d1c1509b0736a23019728'),('model.elementary.dbt_columns','dbt_columns','fab084cb9ce22accd216e08f78af96c6b8f9a6670c2759e5114b16b3fa0838df','incremental','[]','{}','[]','test_db','test_schema','["macro.elementary.get_config_var", "macro.elementary.get_dbt_columns_empty_table_query", "macro.elementary.upload_dbt_columns"]','[]','','dbt_columns','elementary','models/edr/dbt_artifacts/dbt_columns.sql','edr/dbt_artifacts/dbt_columns.sql',NULL,'2023-11-20 07:34:39','922ac16564ccc9607599ceb5801e153b'),('model.elementary.enriched_columns','enriched_columns','de13843dd09be742938fe58c752b0b44350377ea6202d8ecec71096ceb0b9a8b','view','[]','{}','[]','test_db','test_schema','[]','["model.elementary.dbt_columns", "model.elementary.information_schema_columns"]','','enriched_columns','elementary','models/edr/dbt_artifacts/enriched_columns.sql','edr/dbt_artifacts/enriched_columns.sql',NULL,'2023-11-20 07:34:39','4556ec060bac7c16ab808f082a5166f6'),('model.elementary.dbt_invocations','dbt_invocations','f4e42f7b6fee26bec2a8a4b4e643bdf1712afd8d641bfb241d6e749b5f07dd8e','incremental','[]','{"timestamp_column": "created_at", "prev_timestamp_column": "generated_at"}','[]','test_db','test_schema','["macro.elementary.get_config_var", "macro.elementary.get_dbt_invocations_empty_table_query"]','[]','Attributes associated with each dbt invocation. Inserted at the end of each invocation.\n','dbt_invocations','elementary','models/edr/dbt_artifacts/dbt_invocations.sql','edr/dbt_artifacts/dbt_invocations.sql','elementary://models/run_results.yml','2023-11-20 07:34:39','c24551c377791521e42881d845996379'),('model.elementary.dbt_metrics','dbt_metrics','346d0ae98ddf568e9102387d30aa7d9ee4c8c3c3ea58cd254e5e57fcb800f7e9','incremental','[]','{}','[]','test_db','test_schema','["macro.elementary.get_config_var", "macro.elementary.get_dbt_metrics_empty_table_query", "macro.elementary.upload_dbt_metrics"]','[]','Metadata about metrics in the project, including configuration and properties from the dbt graph. Each row contains information about a single metric. Data is loaded every time this model is executed. It is recommended to execute the model every time a change is merged to the project.\n','dbt_metrics','elementary','models/edr/dbt_artifacts/dbt_metrics.sql','edr/dbt_artifacts/dbt_metrics.sql','elementary://models/dbt_artifacts.yml','2023-11-20 07:34:39','6ca94a8edeba655ad8f282d2771bcac3'),('model.elementary.dbt_seeds','dbt_seeds','8daecb4cb68c55a0ad53ba73468d4537965acf2ccdc5c4343b9e1f4e3ae6f197','incremental','[]','{}','[]','test_db','test_schema','["macro.elementary.get_config_var", "macro.elementary.get_dbt_seeds_empty_table_query", "macro.elementary.upload_dbt_seeds"]','[]','','dbt_seeds','elementary','models/edr/dbt_artifacts/dbt_seeds.sql','edr/dbt_artifacts/dbt_seeds.sql',NULL,'2023-11-20 07:34:39','9dd2b5e723656100a0ab60d8f96e43a1'),('model.elementary.dbt_artifacts_hashes','dbt_artifacts_hashes','830e8b8053c5f914ccc03c0fde90786590b17ce0c736a1b91d1d48c57f22a8ed','view','[]','{}','[]','test_db','test_schema','[]','["model.elementary.dbt_columns", "model.elementary.dbt_exposures", "model.elementary.dbt_metrics", "model.elementary.dbt_models", "model.elementary.dbt_seeds", "model.elementary.dbt_snapshots", "model.elementary.dbt_sources", "model.elementary.dbt_tests"]','','dbt_artifacts_hashes','elementary','models/edr/dbt_artifacts/dbt_artifacts_hashes.sql','edr/dbt_artifacts/dbt_artifacts_hashes.sql',NULL,'2023-11-20 07:34:39','763eaa3975ffa59d92ee7492e34b33a1'),('model.elementary.dbt_run_results','dbt_run_results','129cabf35cec7e57bc06a073b24efb73655455e1cdf0e4626ffb08684dea6b93','incremental','[]','{"deprecated_columns": [{"name": "compiled_sql", "data_type": "string", "description": "The compiled SQL executed against the database."}], "dedup_by_column": "model_execution_id", "timestamp_column": "created_at", "prev_timestamp_column": "generated_at"}','[]','test_db','test_schema','["macro.elementary.get_config_var", "macro.elementary.get_dbt_run_results_empty_table_query"]','[]','Run results of dbt invocations, inserted at the end of each invocation. Each row is the invocation result of a single resource (model, test, snapshot, etc). New data is loaded to this model on an on-run-end hook named \'elementary.upload_run_results\' from each invocation that produces a result object. This is an incremental model.\n','dbt_run_results','elementary','models/edr/dbt_artifacts/dbt_run_results.sql','edr/dbt_artifacts/dbt_run_results.sql','elementary://models/run_results.yml','2023-11-20 07:34:39','d508126076c1891a1c8af51b09cb1f96'),('model.elementary.information_schema_columns','information_schema_columns','6490e0d9234e48632239108ba3211607d83aa25720bdd3124699b360fe6745b6','view','[]','{}','[]','test_db','test_schema','["macro.elementary.get_information_schema_columns_materialized", "macro.elementary.get_information_schema_columns_query"]','["model.elementary.dbt_models", "model.elementary.dbt_seeds", "model.elementary.dbt_snapshots", "model.elementary.dbt_sources"]','','information_schema_columns','elementary','models/edr/dbt_artifacts/information_schema_columns.sql','edr/dbt_artifacts/information_schema_columns.sql',NULL,'2023-11-20 07:34:39','0b7388619b5f161873b326fbb43259b2'),('model.elementary.dbt_exposures','dbt_exposures','8a682af36a6af01c41098c007da5b2fbe040cc282350e2817269b1b20b0f0e36','incremental','[]','{}','[]','test_db','test_schema','["macro.elementary.get_config_var", "macro.elementary.get_dbt_exposures_empty_table_query", "macro.elementary.upload_dbt_exposures"]','[]','Metadata about exposures in the project, including configuration and properties from the dbt graph. Each row contains information about a single exposure. Data is loaded every time this model is executed. It is recommended to execute the model every time a change is merged to the project.\n','dbt_exposures','elementary','models/edr/dbt_artifacts/dbt_exposures.sql','edr/dbt_artifacts/dbt_exposures.sql','elementary://models/dbt_artifacts.yml','2023-11-20 07:34:39','a60150bc83254f05113fd4bac134fbd1'),('model.elementary.metrics_anomaly_score','metrics_anomaly_score','abfd27ad29f3a4da67885dfd0c82ed98c043958f705c4258175db6c306d0795e','view','[]','{}','[]','test_db','test_schema','["macro.dbt_utils.group_by", "macro.elementary.edr_current_timestamp", "macro.elementary.edr_date_trunc", "macro.elementary.edr_timeadd", "macro.elementary.get_config_var"]','["model.elementary.data_monitoring_metrics"]','This is a view on `data_monitoring_metrics` that runs the same query the anomaly detection tests run to calculate anomaly scores. The purpose of this view is to provide visibility to the results of anomaly detection tests.\n','metrics_anomaly_score','elementary','models/edr/data_monitoring/anomaly_detection/metrics_anomaly_score.sql','edr/data_monitoring/anomaly_detection/metrics_anomaly_score.sql','elementary://models/elementary_tests.yml','2023-11-20 07:34:39','9a482644cc82c229f7c30f85fc25bb36'),('model.elementary.anomaly_threshold_sensitivity','anomaly_threshold_sensitivity','b0e4310abc62902b98a6ad6fd465713d5aeb5e884b52594e8a1b2ff6429b1b2d','view','[]','{}','[]','test_db','test_schema','["macro.elementary.edr_quote_column"]','["model.elementary.metrics_anomaly_score"]','This is a view on `metrics_anomaly_score` that calculates if values of metrics from latest runs would have been considered anomalies in different anomaly scores. This can help you decide if there is a need to adjust the `anomaly_score_threshold`.\n','anomaly_threshold_sensitivity','elementary','models/edr/data_monitoring/anomaly_detection/anomaly_threshold_sensitivity.sql','edr/data_monitoring/anomaly_detection/anomaly_threshold_sensitivity.sql','elementary://models/elementary_tests.yml','2023-11-20 07:34:39','8aaf13603b29750f88fcba4efeea6533'),('model.elementary.schema_columns_snapshot','schema_columns_snapshot','f46d29a009f8d8e320de1f86d8218745fb473afdf1fbae38990cd103630aadec','incremental','[]','{"timestamp_column": "created_at", "prev_timestamp_column": "detected_at"}','[]','test_db','test_schema','["macro.elementary.empty_schema_columns_snapshot", "macro.elementary.get_config_var"]','[]','Stores the schema details for tables that are monitored with elementary schema changes test. In order to compare current schema to previous state, we must store the previous state. The data is from a view that queries the data warehouse information schema. This is an incremental table.','schema_columns_snapshot','elementary','models/edr/data_monitoring/schema_changes/schema_columns_snapshot.sql','edr/data_monitoring/schema_changes/schema_columns_snapshot.sql','elementary://models/elementary_tests.yml','2023-11-20 07:34:39','bc13b0914913e6e69dba8140f88db6ac'),('model.elementary.data_monitoring_metrics','data_monitoring_metrics','d9cfebe47d47e374e67142d8011a4153f23feed57b938098e8abdf9ff1258232','incremental','[]','{"timestamp_column": "created_at", "prev_timestamp_column": "updated_at"}','[]','test_db','test_schema','["macro.elementary.empty_data_monitoring_metrics", "macro.elementary.get_config_var"]','[]','Elementary anomaly detection tests monitor metrics such as volume, freshness and data quality metrics. This incremental table is used to store the metrics over time. On each anomaly detection test, the test queries this table for historical metrics, and compares to the latest values. The table is updated with new metrics on the on-run-end named handle_test_results that is executed at the end of dbt test invocations.\n','data_monitoring_metrics','elementary','models/edr/data_monitoring/data_monitoring/data_monitoring_metrics.sql','edr/data_monitoring/data_monitoring/data_monitoring_metrics.sql','elementary://models/elementary_tests.yml','2023-11-20 07:34:39','7fe77389feabd47c84a4767a380d13ab')
[0m13:04:40.955805 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:40.960247 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.dbt_snapshots"
[0m13:04:40.960710 [debug] [Thread-2 (]: On model.elementary.dbt_snapshots: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_snapshots"} */
describe table test_db.test_schema.dbt_snapshots__dbt_tmp
[0m13:04:41.181729 [debug] [Thread-3 (]: SQL status: SUCCESS 0 in 0.0 seconds
[0m13:04:41.183528 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_seeds"
[0m13:04:41.184873 [debug] [Thread-3 (]: On model.elementary.dbt_seeds: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_seeds"} */
COMMIT
[0m13:04:41.233647 [debug] [Thread-2 (]: SQL status: SUCCESS 19 in 0.0 seconds
[0m13:04:41.247250 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.dbt_snapshots"
[0m13:04:41.248080 [debug] [Thread-2 (]: On model.elementary.dbt_snapshots: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_snapshots"} */
describe table test_db.test_schema.dbt_snapshots
[0m13:04:41.420797 [debug] [Thread-4 (]: SQL status: SUCCESS 32 in 1.0 seconds
[0m13:04:41.428342 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_models"
[0m13:04:41.429127 [debug] [Thread-4 (]: On model.elementary.dbt_models: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_models"} */
create or replace  table test_db.test_schema.dbt_models
         as
        (select * from test_db.test_schema.dbt_models__tmp_20231120073439486107
        );
[0m13:04:41.500978 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:41.502251 [debug] [Thread-2 (]: SQL status: SUCCESS 19 in 0.0 seconds
[0m13:04:41.510085 [debug] [Thread-3 (]: Applying DROP to: test_db.test_schema.dbt_seeds__dbt_tmp
[0m13:04:41.517271 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.dbt_snapshots"
[0m13:04:41.518993 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_seeds"
[0m13:04:41.519488 [debug] [Thread-2 (]: On model.elementary.dbt_snapshots: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_snapshots"} */
describe table test_db.test_schema.dbt_snapshots__dbt_tmp
[0m13:04:41.519952 [debug] [Thread-3 (]: On model.elementary.dbt_seeds: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_seeds"} */
drop view if exists test_db.test_schema.dbt_seeds__dbt_tmp cascade
[0m13:04:41.836986 [debug] [Thread-2 (]: SQL status: SUCCESS 19 in 0.0 seconds
[0m13:04:41.853217 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.dbt_snapshots"
[0m13:04:41.853988 [debug] [Thread-2 (]: On model.elementary.dbt_snapshots: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_snapshots"} */
describe table "TEST_DB"."TEST_SCHEMA"."DBT_SNAPSHOTS"
[0m13:04:41.863105 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:41.873909 [debug] [Thread-3 (]: Elementary: [dbt_seeds] Flattening the artifacts.
[0m13:04:41.876144 [debug] [Thread-3 (]: Elementary: [dbt_seeds] Flattened 0 artifacts.
[0m13:04:41.882357 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_seeds"
[0m13:04:41.882759 [debug] [Thread-3 (]: On model.elementary.dbt_seeds: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_seeds"} */
create or replace temporary table test_db.test_schema.dbt_seeds__tmp_20231120073441879100
         as
        (
        SELECT
        
            *
        
        FROM test_db.test_schema.dbt_seeds
        WHERE 1 = 0
    
        );
[0m13:04:42.106900 [debug] [Thread-2 (]: SQL status: SUCCESS 19 in 0.0 seconds
[0m13:04:42.117003 [debug] [Thread-2 (]: 
    In "TEST_DB"."TEST_SCHEMA"."DBT_SNAPSHOTS":
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m13:04:42.126332 [debug] [Thread-2 (]: Writing runtime sql for node "model.elementary.dbt_snapshots"
[0m13:04:42.131246 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.dbt_snapshots"
[0m13:04:42.131882 [debug] [Thread-2 (]: On model.elementary.dbt_snapshots: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_snapshots"} */
-- back compat for old kwarg name
  
  begin;
[0m13:04:42.150348 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 2.0 seconds
[0m13:04:42.155801 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.dbt_source_freshness_results"
[0m13:04:42.156292 [debug] [Thread-1 (]: On model.elementary.dbt_source_freshness_results: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_source_freshness_results"} */
describe table test_db.test_schema.dbt_source_freshness_results__dbt_tmp
[0m13:04:42.450747 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:42.451791 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.dbt_snapshots"
[0m13:04:42.452593 [debug] [Thread-2 (]: On model.elementary.dbt_snapshots: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_snapshots"} */
merge into test_db.test_schema.dbt_snapshots as DBT_INTERNAL_DEST
        using test_db.test_schema.dbt_snapshots__dbt_tmp as DBT_INTERNAL_SOURCE
        on (
                DBT_INTERNAL_SOURCE.unique_id = DBT_INTERNAL_DEST.unique_id
            )

    
    when matched then update set
        "UNIQUE_ID" = DBT_INTERNAL_SOURCE."UNIQUE_ID","ALIAS" = DBT_INTERNAL_SOURCE."ALIAS","CHECKSUM" = DBT_INTERNAL_SOURCE."CHECKSUM","MATERIALIZATION" = DBT_INTERNAL_SOURCE."MATERIALIZATION","TAGS" = DBT_INTERNAL_SOURCE."TAGS","META" = DBT_INTERNAL_SOURCE."META","OWNER" = DBT_INTERNAL_SOURCE."OWNER","DATABASE_NAME" = DBT_INTERNAL_SOURCE."DATABASE_NAME","SCHEMA_NAME" = DBT_INTERNAL_SOURCE."SCHEMA_NAME","DEPENDS_ON_MACROS" = DBT_INTERNAL_SOURCE."DEPENDS_ON_MACROS","DEPENDS_ON_NODES" = DBT_INTERNAL_SOURCE."DEPENDS_ON_NODES","DESCRIPTION" = DBT_INTERNAL_SOURCE."DESCRIPTION","NAME" = DBT_INTERNAL_SOURCE."NAME","PACKAGE_NAME" = DBT_INTERNAL_SOURCE."PACKAGE_NAME","ORIGINAL_PATH" = DBT_INTERNAL_SOURCE."ORIGINAL_PATH","PATH" = DBT_INTERNAL_SOURCE."PATH","PATCH_PATH" = DBT_INTERNAL_SOURCE."PATCH_PATH","GENERATED_AT" = DBT_INTERNAL_SOURCE."GENERATED_AT","METADATA_HASH" = DBT_INTERNAL_SOURCE."METADATA_HASH"
    

    when not matched then insert
        ("UNIQUE_ID", "ALIAS", "CHECKSUM", "MATERIALIZATION", "TAGS", "META", "OWNER", "DATABASE_NAME", "SCHEMA_NAME", "DEPENDS_ON_MACROS", "DEPENDS_ON_NODES", "DESCRIPTION", "NAME", "PACKAGE_NAME", "ORIGINAL_PATH", "PATH", "PATCH_PATH", "GENERATED_AT", "METADATA_HASH")
    values
        ("UNIQUE_ID", "ALIAS", "CHECKSUM", "MATERIALIZATION", "TAGS", "META", "OWNER", "DATABASE_NAME", "SCHEMA_NAME", "DEPENDS_ON_MACROS", "DEPENDS_ON_NODES", "DESCRIPTION", "NAME", "PACKAGE_NAME", "ORIGINAL_PATH", "PATH", "PATCH_PATH", "GENERATED_AT", "METADATA_HASH")

;
[0m13:04:42.487948 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:42.490035 [debug] [Thread-1 (]: SQL status: SUCCESS 17 in 0.0 seconds
[0m13:04:42.497824 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_seeds"
[0m13:04:42.508192 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.dbt_source_freshness_results"
[0m13:04:42.508870 [debug] [Thread-3 (]: On model.elementary.dbt_seeds: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_seeds"} */
create or replace  table test_db.test_schema.dbt_seeds
         as
        (select * from test_db.test_schema.dbt_seeds__tmp_20231120073441879100
        );
[0m13:04:42.509299 [debug] [Thread-1 (]: On model.elementary.dbt_source_freshness_results: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_source_freshness_results"} */
describe table test_db.test_schema.dbt_source_freshness_results
[0m13:04:42.533739 [debug] [Thread-4 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:42.542193 [debug] [Thread-4 (]: Applying DROP to: test_db.test_schema.dbt_models__tmp_20231120073439486107
[0m13:04:42.543707 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_models"
[0m13:04:42.544152 [debug] [Thread-4 (]: On model.elementary.dbt_models: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_models"} */
drop table if exists test_db.test_schema.dbt_models__tmp_20231120073439486107 cascade
[0m13:04:42.795957 [debug] [Thread-1 (]: SQL status: SUCCESS 17 in 0.0 seconds
[0m13:04:42.810825 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.dbt_source_freshness_results"
[0m13:04:42.811623 [debug] [Thread-1 (]: On model.elementary.dbt_source_freshness_results: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_source_freshness_results"} */
describe table test_db.test_schema.dbt_source_freshness_results__dbt_tmp
[0m13:04:42.839824 [debug] [Thread-4 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:42.849496 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_models"
[0m13:04:42.850178 [debug] [Thread-4 (]: On model.elementary.dbt_models: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_models"} */
select
      1700445882.848102 as build_timestamp,
      count(*) as row_count
    from test_db.test_schema.dbt_models
[0m13:04:42.882621 [debug] [Thread-2 (]: SQL status: SUCCESS 0 in 0.0 seconds
[0m13:04:42.883841 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.dbt_snapshots"
[0m13:04:42.884622 [debug] [Thread-2 (]: On model.elementary.dbt_snapshots: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_snapshots"} */
COMMIT
[0m13:04:43.095466 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:43.116939 [debug] [Thread-3 (]: Applying DROP to: test_db.test_schema.dbt_seeds__tmp_20231120073441879100
[0m13:04:43.118832 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_seeds"
[0m13:04:43.119406 [debug] [Thread-3 (]: On model.elementary.dbt_seeds: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_seeds"} */
drop table if exists test_db.test_schema.dbt_seeds__tmp_20231120073441879100 cascade
[0m13:04:43.150199 [debug] [Thread-1 (]: SQL status: SUCCESS 17 in 0.0 seconds
[0m13:04:43.160818 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.dbt_source_freshness_results"
[0m13:04:43.161867 [debug] [Thread-1 (]: On model.elementary.dbt_source_freshness_results: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_source_freshness_results"} */
describe table "TEST_DB"."TEST_SCHEMA"."DBT_SOURCE_FRESHNESS_RESULTS"
[0m13:04:43.222244 [debug] [Thread-4 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:43.231246 [debug] [Thread-4 (]: Timing info for model.elementary.dbt_models (execute): 13:04:34.352741 => 13:04:43.230749
[0m13:04:43.233447 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:43.234072 [debug] [Thread-4 (]: On model.elementary.dbt_models: Close
[0m13:04:43.242974 [debug] [Thread-2 (]: Applying DROP to: test_db.test_schema.dbt_snapshots__dbt_tmp
[0m13:04:43.249376 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.dbt_snapshots"
[0m13:04:43.250653 [debug] [Thread-2 (]: On model.elementary.dbt_snapshots: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_snapshots"} */
drop view if exists test_db.test_schema.dbt_snapshots__dbt_tmp cascade
[0m13:04:43.416550 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:43.429802 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_seeds"
[0m13:04:43.430532 [debug] [Thread-3 (]: On model.elementary.dbt_seeds: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_seeds"} */
select
      1700445883.428115 as build_timestamp,
      count(*) as row_count
    from test_db.test_schema.dbt_seeds
[0m13:04:43.439144 [debug] [Thread-1 (]: SQL status: SUCCESS 17 in 0.0 seconds
[0m13:04:43.445108 [debug] [Thread-1 (]: 
    In "TEST_DB"."TEST_SCHEMA"."DBT_SOURCE_FRESHNESS_RESULTS":
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m13:04:43.450167 [debug] [Thread-1 (]: Writing runtime sql for node "model.elementary.dbt_source_freshness_results"
[0m13:04:43.453043 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.dbt_source_freshness_results"
[0m13:04:43.453531 [debug] [Thread-1 (]: On model.elementary.dbt_source_freshness_results: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_source_freshness_results"} */
-- back compat for old kwarg name
  
  begin;
[0m13:04:43.539493 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:43.548862 [debug] [Thread-2 (]: Elementary: [dbt_snapshots] Flattening the artifacts.
[0m13:04:43.551077 [debug] [Thread-2 (]: Elementary: [dbt_snapshots] Flattened 0 artifacts.
[0m13:04:43.559958 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.dbt_snapshots"
[0m13:04:43.560731 [debug] [Thread-2 (]: On model.elementary.dbt_snapshots: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_snapshots"} */
create or replace temporary table test_db.test_schema.dbt_snapshots__tmp_20231120073443555327
         as
        (
        SELECT
        
            *
        
        FROM test_db.test_schema.dbt_snapshots
        WHERE 1 = 0
    
        );
[0m13:04:43.735250 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:43.745415 [debug] [Thread-3 (]: Timing info for model.elementary.dbt_seeds (execute): 13:04:37.641414 => 13:04:43.744655
[0m13:04:43.747450 [debug] [Thread-3 (]: On model.elementary.dbt_seeds: Close
[0m13:04:43.753007 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11222ff50>]}
[0m13:04:43.755114 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:43.756134 [info ] [Thread-4 (]: 7 of 32 OK created sql incremental model test_schema.dbt_models ................ [[32mSUCCESS 0[0m in 9.64s]
[0m13:04:43.757783 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.dbt_source_freshness_results"
[0m13:04:43.759188 [debug] [Thread-4 (]: Finished running node model.elementary.dbt_models
[0m13:04:43.760086 [debug] [Thread-1 (]: On model.elementary.dbt_source_freshness_results: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_source_freshness_results"} */
merge into test_db.test_schema.dbt_source_freshness_results as DBT_INTERNAL_DEST
        using test_db.test_schema.dbt_source_freshness_results__dbt_tmp as DBT_INTERNAL_SOURCE
        on (
                DBT_INTERNAL_SOURCE.source_freshness_execution_id = DBT_INTERNAL_DEST.source_freshness_execution_id
            )

    
    when matched then update set
        "SOURCE_FRESHNESS_EXECUTION_ID" = DBT_INTERNAL_SOURCE."SOURCE_FRESHNESS_EXECUTION_ID","UNIQUE_ID" = DBT_INTERNAL_SOURCE."UNIQUE_ID","MAX_LOADED_AT" = DBT_INTERNAL_SOURCE."MAX_LOADED_AT","SNAPSHOTTED_AT" = DBT_INTERNAL_SOURCE."SNAPSHOTTED_AT","GENERATED_AT" = DBT_INTERNAL_SOURCE."GENERATED_AT","CREATED_AT" = DBT_INTERNAL_SOURCE."CREATED_AT","MAX_LOADED_AT_TIME_AGO_IN_S" = DBT_INTERNAL_SOURCE."MAX_LOADED_AT_TIME_AGO_IN_S","STATUS" = DBT_INTERNAL_SOURCE."STATUS","ERROR" = DBT_INTERNAL_SOURCE."ERROR","COMPILE_STARTED_AT" = DBT_INTERNAL_SOURCE."COMPILE_STARTED_AT","COMPILE_COMPLETED_AT" = DBT_INTERNAL_SOURCE."COMPILE_COMPLETED_AT","EXECUTE_STARTED_AT" = DBT_INTERNAL_SOURCE."EXECUTE_STARTED_AT","EXECUTE_COMPLETED_AT" = DBT_INTERNAL_SOURCE."EXECUTE_COMPLETED_AT","INVOCATION_ID" = DBT_INTERNAL_SOURCE."INVOCATION_ID","WARN_AFTER" = DBT_INTERNAL_SOURCE."WARN_AFTER","ERROR_AFTER" = DBT_INTERNAL_SOURCE."ERROR_AFTER","FILTER" = DBT_INTERNAL_SOURCE."FILTER"
    

    when not matched then insert
        ("SOURCE_FRESHNESS_EXECUTION_ID", "UNIQUE_ID", "MAX_LOADED_AT", "SNAPSHOTTED_AT", "GENERATED_AT", "CREATED_AT", "MAX_LOADED_AT_TIME_AGO_IN_S", "STATUS", "ERROR", "COMPILE_STARTED_AT", "COMPILE_COMPLETED_AT", "EXECUTE_STARTED_AT", "EXECUTE_COMPLETED_AT", "INVOCATION_ID", "WARN_AFTER", "ERROR_AFTER", "FILTER")
    values
        ("SOURCE_FRESHNESS_EXECUTION_ID", "UNIQUE_ID", "MAX_LOADED_AT", "SNAPSHOTTED_AT", "GENERATED_AT", "CREATED_AT", "MAX_LOADED_AT_TIME_AGO_IN_S", "STATUS", "ERROR", "COMPILE_STARTED_AT", "COMPILE_COMPLETED_AT", "EXECUTE_STARTED_AT", "EXECUTE_COMPLETED_AT", "INVOCATION_ID", "WARN_AFTER", "ERROR_AFTER", "FILTER")

;
[0m13:04:43.760975 [debug] [Thread-4 (]: Began running node model.elementary.dbt_sources
[0m13:04:43.762553 [info ] [Thread-4 (]: 12 of 32 START sql incremental model test_schema.dbt_sources ................... [RUN]
[0m13:04:43.763509 [debug] [Thread-4 (]: Re-using an available connection from the pool (formerly model.elementary.dbt_models, now model.elementary.dbt_sources)
[0m13:04:43.763967 [debug] [Thread-4 (]: Began compiling node model.elementary.dbt_sources
[0m13:04:43.793591 [debug] [Thread-4 (]: Writing injected SQL for node "model.elementary.dbt_sources"
[0m13:04:43.794410 [debug] [Thread-4 (]: Timing info for model.elementary.dbt_sources (compile): 13:04:43.764375 => 13:04:43.794225
[0m13:04:43.794690 [debug] [Thread-4 (]: Began executing node model.elementary.dbt_sources
[0m13:04:43.800082 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_sources"
[0m13:04:43.800418 [debug] [Thread-4 (]: On model.elementary.dbt_sources: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_sources"} */
create or replace  temporary view test_db.test_schema.dbt_sources__dbt_tmp
  
   as (
    

with empty_table as (
            select
            
                
        cast('dummy_string' as varchar) as unique_id

,
                
        cast('dummy_string' as varchar) as database_name

,
                
        cast('dummy_string' as varchar) as schema_name

,
                
        cast('dummy_string' as varchar) as source_name

,
                
        cast('dummy_string' as varchar) as name

,
                
        cast('dummy_string' as varchar) as identifier

,
                
        cast('dummy_string' as varchar) as loaded_at_field

,
                
        cast('dummy_string' as varchar) as freshness_warn_after

,
                
        cast('dummy_string' as varchar) as freshness_error_after

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as freshness_filter

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as freshness_description

,
                
        cast('dummy_string' as varchar) as relation_name

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as meta

,
                
        cast('dummy_string' as varchar) as owner

,
                
        cast('dummy_string' as varchar) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as original_path

,
                
        cast('dummy_string' as varchar) as path

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as source_description

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as description

,
                
        cast('dummy_string' as varchar) as generated_at

,
                
        cast('dummy_string' as varchar) as metadata_hash


            )
        select * from empty_table
        where 1 = 0
  );
[0m13:04:43.800719 [debug] [Thread-4 (]: Opening a new connection, currently in state closed
[0m13:04:44.162956 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:44.169710 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.dbt_snapshots"
[0m13:04:44.170403 [debug] [Thread-2 (]: On model.elementary.dbt_snapshots: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_snapshots"} */
create or replace  table test_db.test_schema.dbt_snapshots
         as
        (select * from test_db.test_schema.dbt_snapshots__tmp_20231120073443555327
        );
[0m13:04:44.206466 [debug] [Thread-1 (]: SQL status: SUCCESS 0 in 0.0 seconds
[0m13:04:44.207659 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.dbt_source_freshness_results"
[0m13:04:44.208482 [debug] [Thread-1 (]: On model.elementary.dbt_source_freshness_results: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_source_freshness_results"} */
COMMIT
[0m13:04:44.255849 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112ac7910>]}
[0m13:04:44.257835 [info ] [Thread-3 (]: 9 of 32 OK created sql incremental model test_schema.dbt_seeds ................. [[32mSUCCESS 0[0m in 6.65s]
[0m13:04:44.259107 [debug] [Thread-3 (]: Finished running node model.elementary.dbt_seeds
[0m13:04:44.259994 [debug] [Thread-3 (]: Began running node model.elementary.dbt_tests
[0m13:04:44.261003 [info ] [Thread-3 (]: 13 of 32 START sql incremental model test_schema.dbt_tests ..................... [RUN]
[0m13:04:44.262142 [debug] [Thread-3 (]: Re-using an available connection from the pool (formerly model.elementary.dbt_seeds, now model.elementary.dbt_tests)
[0m13:04:44.262678 [debug] [Thread-3 (]: Began compiling node model.elementary.dbt_tests
[0m13:04:44.300822 [debug] [Thread-3 (]: Writing injected SQL for node "model.elementary.dbt_tests"
[0m13:04:44.301460 [debug] [Thread-3 (]: Timing info for model.elementary.dbt_tests (compile): 13:04:44.263021 => 13:04:44.301299
[0m13:04:44.301726 [debug] [Thread-3 (]: Began executing node model.elementary.dbt_tests
[0m13:04:44.308020 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_tests"
[0m13:04:44.308453 [debug] [Thread-3 (]: On model.elementary.dbt_tests: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_tests"} */
create or replace  temporary view test_db.test_schema.dbt_tests__dbt_tmp
  
   as (
    

with empty_table as (
            select
            
                
        cast('dummy_string' as varchar) as unique_id

,
                
        cast('dummy_string' as varchar) as database_name

,
                
        cast('dummy_string' as varchar) as schema_name

,
                
        cast('dummy_string' as varchar) as name

,
                
        cast('dummy_string' as varchar) as short_name

,
                
        cast('dummy_string' as varchar) as alias

,
                
        cast('dummy_string' as varchar) as test_column_name

,
                
        cast('dummy_string' as varchar) as severity

,
                
        cast('dummy_string' as varchar) as warn_if

,
                
        cast('dummy_string' as varchar) as error_if

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as test_params

,
                
        cast('dummy_string' as varchar) as test_namespace

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as model_tags

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as model_owners

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as meta

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes

,
                
        cast('dummy_string' as varchar) as parent_model_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as description

,
                
        cast('dummy_string' as varchar) as package_name

,
                
        cast('dummy_string' as varchar) as type

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as original_path

,
                
        cast('dummy_string' as varchar) as path

,
                
        cast('dummy_string' as varchar) as generated_at

,
                
        cast('dummy_string' as varchar) as metadata_hash

,
                
        cast('dummy_string' as varchar) as quality_dimension


            )
        select * from empty_table
        where 1 = 0
  );
[0m13:04:44.308791 [debug] [Thread-3 (]: Opening a new connection, currently in state closed
[0m13:04:44.562023 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:44.579312 [debug] [Thread-1 (]: Applying DROP to: test_db.test_schema.dbt_source_freshness_results__dbt_tmp
[0m13:04:44.580591 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.dbt_source_freshness_results"
[0m13:04:44.581446 [debug] [Thread-1 (]: On model.elementary.dbt_source_freshness_results: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_source_freshness_results"} */
drop view if exists test_db.test_schema.dbt_source_freshness_results__dbt_tmp cascade
[0m13:04:44.768526 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:44.780622 [debug] [Thread-2 (]: Applying DROP to: test_db.test_schema.dbt_snapshots__tmp_20231120073443555327
[0m13:04:44.782798 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.dbt_snapshots"
[0m13:04:44.783396 [debug] [Thread-2 (]: On model.elementary.dbt_snapshots: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_snapshots"} */
drop table if exists test_db.test_schema.dbt_snapshots__tmp_20231120073443555327 cascade
[0m13:04:44.873842 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:44.887125 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.dbt_source_freshness_results"
[0m13:04:44.888082 [debug] [Thread-1 (]: On model.elementary.dbt_source_freshness_results: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_source_freshness_results"} */
select
      1700445884.885305 as build_timestamp,
      count(*) as row_count
    from test_db.test_schema.dbt_source_freshness_results
[0m13:04:45.078287 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:45.085493 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.dbt_snapshots"
[0m13:04:45.086007 [debug] [Thread-2 (]: On model.elementary.dbt_snapshots: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_snapshots"} */
select
      1700445885.084292 as build_timestamp,
      count(*) as row_count
    from test_db.test_schema.dbt_snapshots
[0m13:04:45.197767 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:45.205786 [debug] [Thread-1 (]: Timing info for model.elementary.dbt_source_freshness_results (execute): 13:04:40.616998 => 13:04:45.205017
[0m13:04:45.207735 [debug] [Thread-1 (]: On model.elementary.dbt_source_freshness_results: Close
[0m13:04:45.375976 [debug] [Thread-4 (]: SQL status: SUCCESS 1 in 2.0 seconds
[0m13:04:45.390203 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_sources"
[0m13:04:45.392092 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:45.392629 [debug] [Thread-4 (]: On model.elementary.dbt_sources: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_sources"} */
describe table test_db.test_schema.dbt_sources__dbt_tmp
[0m13:04:45.397472 [debug] [Thread-2 (]: Timing info for model.elementary.dbt_snapshots (execute): 13:04:39.503418 => 13:04:45.397175
[0m13:04:45.398484 [debug] [Thread-2 (]: On model.elementary.dbt_snapshots: Close
[0m13:04:45.682129 [debug] [Thread-4 (]: SQL status: SUCCESS 22 in 0.0 seconds
[0m13:04:45.696480 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_sources"
[0m13:04:45.697121 [debug] [Thread-4 (]: On model.elementary.dbt_sources: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_sources"} */
describe table test_db.test_schema.dbt_sources
[0m13:04:45.714114 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:45.722380 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_tests"
[0m13:04:45.722905 [debug] [Thread-3 (]: On model.elementary.dbt_tests: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_tests"} */
describe table test_db.test_schema.dbt_tests__dbt_tmp
[0m13:04:45.725184 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113df5410>]}
[0m13:04:45.726104 [info ] [Thread-1 (]: 11 of 32 OK created sql incremental model test_schema.dbt_source_freshness_results  [[32mSUCCESS 0[0m in 5.25s]
[0m13:04:45.727527 [debug] [Thread-1 (]: Finished running node model.elementary.dbt_source_freshness_results
[0m13:04:45.728490 [debug] [Thread-1 (]: Began running node model.elementary.elementary_test_results
[0m13:04:45.729369 [info ] [Thread-1 (]: 14 of 32 START sql incremental model test_schema.elementary_test_results ....... [RUN]
[0m13:04:45.730242 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.elementary.dbt_source_freshness_results, now model.elementary.elementary_test_results)
[0m13:04:45.730828 [debug] [Thread-1 (]: Began compiling node model.elementary.elementary_test_results
[0m13:04:45.761286 [debug] [Thread-1 (]: Writing injected SQL for node "model.elementary.elementary_test_results"
[0m13:04:45.761876 [debug] [Thread-1 (]: Timing info for model.elementary.elementary_test_results (compile): 13:04:45.731092 => 13:04:45.761726
[0m13:04:45.762119 [debug] [Thread-1 (]: Began executing node model.elementary.elementary_test_results
[0m13:04:45.767208 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.elementary_test_results"
[0m13:04:45.767541 [debug] [Thread-1 (]: On model.elementary.elementary_test_results: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.elementary_test_results"} */
create or replace  temporary view test_db.test_schema.elementary_test_results__dbt_tmp
  
   as (
    


    with empty_table as (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as varchar) as id

,
                
        cast('dummy_string' as varchar) as data_issue_id

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as test_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as test_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as model_unique_id

,
                
        cast('dummy_string' as varchar) as invocation_id

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar) as database_name

,
                
        cast('dummy_string' as varchar) as schema_name

,
                
        cast('dummy_string' as varchar) as table_name

,
                
        cast('dummy_string' as varchar) as column_name

,
                
        cast('dummy_string' as varchar) as test_type

,
                
        cast('dummy_string' as varchar) as test_sub_type

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as test_results_description

,
                
        cast('dummy_string' as varchar) as owners

,
                
        cast('dummy_string' as varchar) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as test_results_query

,
                
        cast('dummy_string' as varchar) as other

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as test_name

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as test_params

,
                
        cast('dummy_string' as varchar) as severity

,
                
        cast('dummy_string' as varchar) as status

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar) as test_short_name

,
                
        cast('dummy_string' as varchar) as test_alias

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as result_rows

,
                
        cast(31474836478 as bigint) as failed_row_count


            )
        select * from empty_table
        where 1 = 0

  );
[0m13:04:45.767874 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:04:45.888965 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1128aa810>]}
[0m13:04:45.889852 [info ] [Thread-2 (]: 10 of 32 OK created sql incremental model test_schema.dbt_snapshots ............ [[32mSUCCESS 0[0m in 6.40s]
[0m13:04:45.890528 [debug] [Thread-2 (]: Finished running node model.elementary.dbt_snapshots
[0m13:04:45.891012 [debug] [Thread-2 (]: Began running node model.elementary.metadata
[0m13:04:45.891672 [info ] [Thread-2 (]: 15 of 32 START sql table model test_schema.metadata ............................ [RUN]
[0m13:04:45.892731 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.elementary.dbt_snapshots, now model.elementary.metadata)
[0m13:04:45.893179 [debug] [Thread-2 (]: Began compiling node model.elementary.metadata
[0m13:04:45.901727 [debug] [Thread-2 (]: Writing injected SQL for node "model.elementary.metadata"
[0m13:04:45.902796 [debug] [Thread-2 (]: Timing info for model.elementary.metadata (compile): 13:04:45.893427 => 13:04:45.902587
[0m13:04:45.903137 [debug] [Thread-2 (]: Began executing node model.elementary.metadata
[0m13:04:45.908145 [debug] [Thread-2 (]: Writing runtime sql for node "model.elementary.metadata"
[0m13:04:45.908985 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.metadata"
[0m13:04:45.909319 [debug] [Thread-2 (]: On model.elementary.metadata: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.metadata"} */
create or replace transient table test_db.test_schema.metadata
         as
        (

SELECT
    '0.12.1' as dbt_pkg_version
        );
[0m13:04:45.909596 [debug] [Thread-2 (]: Opening a new connection, currently in state closed
[0m13:04:45.989393 [debug] [Thread-3 (]: SQL status: SUCCESS 27 in 0.0 seconds
[0m13:04:45.990741 [debug] [Thread-4 (]: SQL status: SUCCESS 22 in 0.0 seconds
[0m13:04:46.004090 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_tests"
[0m13:04:46.010982 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_sources"
[0m13:04:46.011777 [debug] [Thread-3 (]: On model.elementary.dbt_tests: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_tests"} */
describe table test_db.test_schema.dbt_tests
[0m13:04:46.012253 [debug] [Thread-4 (]: On model.elementary.dbt_sources: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_sources"} */
describe table test_db.test_schema.dbt_sources__dbt_tmp
[0m13:04:46.296919 [debug] [Thread-3 (]: SQL status: SUCCESS 27 in 0.0 seconds
[0m13:04:46.313715 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_tests"
[0m13:04:46.315072 [debug] [Thread-4 (]: SQL status: SUCCESS 22 in 0.0 seconds
[0m13:04:46.315694 [debug] [Thread-3 (]: On model.elementary.dbt_tests: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_tests"} */
describe table test_db.test_schema.dbt_tests__dbt_tmp
[0m13:04:46.322979 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_sources"
[0m13:04:46.324382 [debug] [Thread-4 (]: On model.elementary.dbt_sources: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_sources"} */
describe table "TEST_DB"."TEST_SCHEMA"."DBT_SOURCES"
[0m13:04:46.621842 [debug] [Thread-3 (]: SQL status: SUCCESS 27 in 0.0 seconds
[0m13:04:46.631429 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_tests"
[0m13:04:46.632364 [debug] [Thread-3 (]: On model.elementary.dbt_tests: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_tests"} */
describe table "TEST_DB"."TEST_SCHEMA"."DBT_TESTS"
[0m13:04:46.650713 [debug] [Thread-4 (]: SQL status: SUCCESS 22 in 0.0 seconds
[0m13:04:46.656034 [debug] [Thread-4 (]: 
    In "TEST_DB"."TEST_SCHEMA"."DBT_SOURCES":
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m13:04:46.659730 [debug] [Thread-4 (]: Writing runtime sql for node "model.elementary.dbt_sources"
[0m13:04:46.661906 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_sources"
[0m13:04:46.662219 [debug] [Thread-4 (]: On model.elementary.dbt_sources: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_sources"} */
-- back compat for old kwarg name
  
  begin;
[0m13:04:46.947091 [debug] [Thread-3 (]: SQL status: SUCCESS 27 in 0.0 seconds
[0m13:04:46.960218 [debug] [Thread-3 (]: 
    In "TEST_DB"."TEST_SCHEMA"."DBT_TESTS":
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m13:04:46.971423 [debug] [Thread-3 (]: Writing runtime sql for node "model.elementary.dbt_tests"
[0m13:04:46.974280 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_tests"
[0m13:04:46.974724 [debug] [Thread-3 (]: On model.elementary.dbt_tests: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_tests"} */
-- back compat for old kwarg name
  
  begin;
[0m13:04:47.002677 [debug] [Thread-4 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:47.003476 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_sources"
[0m13:04:47.004453 [debug] [Thread-4 (]: On model.elementary.dbt_sources: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_sources"} */
merge into test_db.test_schema.dbt_sources as DBT_INTERNAL_DEST
        using test_db.test_schema.dbt_sources__dbt_tmp as DBT_INTERNAL_SOURCE
        on (
                DBT_INTERNAL_SOURCE.unique_id = DBT_INTERNAL_DEST.unique_id
            )

    
    when matched then update set
        "UNIQUE_ID" = DBT_INTERNAL_SOURCE."UNIQUE_ID","DATABASE_NAME" = DBT_INTERNAL_SOURCE."DATABASE_NAME","SCHEMA_NAME" = DBT_INTERNAL_SOURCE."SCHEMA_NAME","SOURCE_NAME" = DBT_INTERNAL_SOURCE."SOURCE_NAME","NAME" = DBT_INTERNAL_SOURCE."NAME","IDENTIFIER" = DBT_INTERNAL_SOURCE."IDENTIFIER","LOADED_AT_FIELD" = DBT_INTERNAL_SOURCE."LOADED_AT_FIELD","FRESHNESS_WARN_AFTER" = DBT_INTERNAL_SOURCE."FRESHNESS_WARN_AFTER","FRESHNESS_ERROR_AFTER" = DBT_INTERNAL_SOURCE."FRESHNESS_ERROR_AFTER","FRESHNESS_FILTER" = DBT_INTERNAL_SOURCE."FRESHNESS_FILTER","FRESHNESS_DESCRIPTION" = DBT_INTERNAL_SOURCE."FRESHNESS_DESCRIPTION","RELATION_NAME" = DBT_INTERNAL_SOURCE."RELATION_NAME","TAGS" = DBT_INTERNAL_SOURCE."TAGS","META" = DBT_INTERNAL_SOURCE."META","OWNER" = DBT_INTERNAL_SOURCE."OWNER","PACKAGE_NAME" = DBT_INTERNAL_SOURCE."PACKAGE_NAME","ORIGINAL_PATH" = DBT_INTERNAL_SOURCE."ORIGINAL_PATH","PATH" = DBT_INTERNAL_SOURCE."PATH","SOURCE_DESCRIPTION" = DBT_INTERNAL_SOURCE."SOURCE_DESCRIPTION","DESCRIPTION" = DBT_INTERNAL_SOURCE."DESCRIPTION","GENERATED_AT" = DBT_INTERNAL_SOURCE."GENERATED_AT","METADATA_HASH" = DBT_INTERNAL_SOURCE."METADATA_HASH"
    

    when not matched then insert
        ("UNIQUE_ID", "DATABASE_NAME", "SCHEMA_NAME", "SOURCE_NAME", "NAME", "IDENTIFIER", "LOADED_AT_FIELD", "FRESHNESS_WARN_AFTER", "FRESHNESS_ERROR_AFTER", "FRESHNESS_FILTER", "FRESHNESS_DESCRIPTION", "RELATION_NAME", "TAGS", "META", "OWNER", "PACKAGE_NAME", "ORIGINAL_PATH", "PATH", "SOURCE_DESCRIPTION", "DESCRIPTION", "GENERATED_AT", "METADATA_HASH")
    values
        ("UNIQUE_ID", "DATABASE_NAME", "SCHEMA_NAME", "SOURCE_NAME", "NAME", "IDENTIFIER", "LOADED_AT_FIELD", "FRESHNESS_WARN_AFTER", "FRESHNESS_ERROR_AFTER", "FRESHNESS_FILTER", "FRESHNESS_DESCRIPTION", "RELATION_NAME", "TAGS", "META", "OWNER", "PACKAGE_NAME", "ORIGINAL_PATH", "PATH", "SOURCE_DESCRIPTION", "DESCRIPTION", "GENERATED_AT", "METADATA_HASH")

;
[0m13:04:47.191345 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:47.203470 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.elementary_test_results"
[0m13:04:47.204830 [debug] [Thread-1 (]: On model.elementary.elementary_test_results: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.elementary_test_results"} */
describe table test_db.test_schema.elementary_test_results__dbt_tmp
[0m13:04:47.253110 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:47.254904 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_tests"
[0m13:04:47.256377 [debug] [Thread-3 (]: On model.elementary.dbt_tests: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_tests"} */
merge into test_db.test_schema.dbt_tests as DBT_INTERNAL_DEST
        using test_db.test_schema.dbt_tests__dbt_tmp as DBT_INTERNAL_SOURCE
        on (
                DBT_INTERNAL_SOURCE.unique_id = DBT_INTERNAL_DEST.unique_id
            )

    
    when matched then update set
        "UNIQUE_ID" = DBT_INTERNAL_SOURCE."UNIQUE_ID","DATABASE_NAME" = DBT_INTERNAL_SOURCE."DATABASE_NAME","SCHEMA_NAME" = DBT_INTERNAL_SOURCE."SCHEMA_NAME","NAME" = DBT_INTERNAL_SOURCE."NAME","SHORT_NAME" = DBT_INTERNAL_SOURCE."SHORT_NAME","ALIAS" = DBT_INTERNAL_SOURCE."ALIAS","TEST_COLUMN_NAME" = DBT_INTERNAL_SOURCE."TEST_COLUMN_NAME","SEVERITY" = DBT_INTERNAL_SOURCE."SEVERITY","WARN_IF" = DBT_INTERNAL_SOURCE."WARN_IF","ERROR_IF" = DBT_INTERNAL_SOURCE."ERROR_IF","TEST_PARAMS" = DBT_INTERNAL_SOURCE."TEST_PARAMS","TEST_NAMESPACE" = DBT_INTERNAL_SOURCE."TEST_NAMESPACE","TAGS" = DBT_INTERNAL_SOURCE."TAGS","MODEL_TAGS" = DBT_INTERNAL_SOURCE."MODEL_TAGS","MODEL_OWNERS" = DBT_INTERNAL_SOURCE."MODEL_OWNERS","META" = DBT_INTERNAL_SOURCE."META","DEPENDS_ON_MACROS" = DBT_INTERNAL_SOURCE."DEPENDS_ON_MACROS","DEPENDS_ON_NODES" = DBT_INTERNAL_SOURCE."DEPENDS_ON_NODES","PARENT_MODEL_UNIQUE_ID" = DBT_INTERNAL_SOURCE."PARENT_MODEL_UNIQUE_ID","DESCRIPTION" = DBT_INTERNAL_SOURCE."DESCRIPTION","PACKAGE_NAME" = DBT_INTERNAL_SOURCE."PACKAGE_NAME","TYPE" = DBT_INTERNAL_SOURCE."TYPE","ORIGINAL_PATH" = DBT_INTERNAL_SOURCE."ORIGINAL_PATH","PATH" = DBT_INTERNAL_SOURCE."PATH","GENERATED_AT" = DBT_INTERNAL_SOURCE."GENERATED_AT","METADATA_HASH" = DBT_INTERNAL_SOURCE."METADATA_HASH","QUALITY_DIMENSION" = DBT_INTERNAL_SOURCE."QUALITY_DIMENSION"
    

    when not matched then insert
        ("UNIQUE_ID", "DATABASE_NAME", "SCHEMA_NAME", "NAME", "SHORT_NAME", "ALIAS", "TEST_COLUMN_NAME", "SEVERITY", "WARN_IF", "ERROR_IF", "TEST_PARAMS", "TEST_NAMESPACE", "TAGS", "MODEL_TAGS", "MODEL_OWNERS", "META", "DEPENDS_ON_MACROS", "DEPENDS_ON_NODES", "PARENT_MODEL_UNIQUE_ID", "DESCRIPTION", "PACKAGE_NAME", "TYPE", "ORIGINAL_PATH", "PATH", "GENERATED_AT", "METADATA_HASH", "QUALITY_DIMENSION")
    values
        ("UNIQUE_ID", "DATABASE_NAME", "SCHEMA_NAME", "NAME", "SHORT_NAME", "ALIAS", "TEST_COLUMN_NAME", "SEVERITY", "WARN_IF", "ERROR_IF", "TEST_PARAMS", "TEST_NAMESPACE", "TAGS", "MODEL_TAGS", "MODEL_OWNERS", "META", "DEPENDS_ON_MACROS", "DEPENDS_ON_NODES", "PARENT_MODEL_UNIQUE_ID", "DESCRIPTION", "PACKAGE_NAME", "TYPE", "ORIGINAL_PATH", "PATH", "GENERATED_AT", "METADATA_HASH", "QUALITY_DIMENSION")

;
[0m13:04:47.425402 [debug] [Thread-4 (]: SQL status: SUCCESS 0 in 0.0 seconds
[0m13:04:47.426969 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_sources"
[0m13:04:47.427949 [debug] [Thread-4 (]: On model.elementary.dbt_sources: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_sources"} */
COMMIT
[0m13:04:47.470676 [debug] [Thread-1 (]: SQL status: SUCCESS 28 in 0.0 seconds
[0m13:04:47.485485 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.elementary_test_results"
[0m13:04:47.486234 [debug] [Thread-1 (]: On model.elementary.elementary_test_results: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.elementary_test_results"} */
describe table test_db.test_schema.elementary_test_results
[0m13:04:47.753021 [debug] [Thread-1 (]: SQL status: SUCCESS 28 in 0.0 seconds
[0m13:04:47.768457 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.elementary_test_results"
[0m13:04:47.769917 [debug] [Thread-1 (]: On model.elementary.elementary_test_results: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.elementary_test_results"} */
describe table test_db.test_schema.elementary_test_results__dbt_tmp
[0m13:04:47.770919 [debug] [Thread-4 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:47.778172 [debug] [Thread-4 (]: Applying DROP to: test_db.test_schema.dbt_sources__dbt_tmp
[0m13:04:47.779659 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_sources"
[0m13:04:47.780232 [debug] [Thread-4 (]: On model.elementary.dbt_sources: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_sources"} */
drop view if exists test_db.test_schema.dbt_sources__dbt_tmp cascade
[0m13:04:47.783374 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 2.0 seconds
[0m13:04:47.792944 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.metadata"
[0m13:04:47.793497 [debug] [Thread-2 (]: On model.elementary.metadata: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.metadata"} */
select
      1700445887.792174 as build_timestamp,
      count(*) as row_count
    from test_db.test_schema.metadata
[0m13:04:48.005635 [debug] [Thread-3 (]: SQL status: SUCCESS 0 in 1.0 seconds
[0m13:04:48.007002 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_tests"
[0m13:04:48.007996 [debug] [Thread-3 (]: On model.elementary.dbt_tests: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_tests"} */
COMMIT
[0m13:04:48.037776 [debug] [Thread-1 (]: SQL status: SUCCESS 28 in 0.0 seconds
[0m13:04:48.052599 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.elementary_test_results"
[0m13:04:48.053430 [debug] [Thread-1 (]: On model.elementary.elementary_test_results: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.elementary_test_results"} */
describe table "TEST_DB"."TEST_SCHEMA"."ELEMENTARY_TEST_RESULTS"
[0m13:04:48.082290 [debug] [Thread-4 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:48.096349 [debug] [Thread-4 (]: Elementary: [dbt_sources] Flattening the artifacts.
[0m13:04:48.104689 [debug] [Thread-4 (]: Elementary: [dbt_sources] Flattened 0 artifacts.
[0m13:04:48.110972 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_sources"
[0m13:04:48.111419 [debug] [Thread-4 (]: On model.elementary.dbt_sources: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_sources"} */
create or replace temporary table test_db.test_schema.dbt_sources__tmp_20231120073448107103
         as
        (
        SELECT
        
            *
        
        FROM test_db.test_schema.dbt_sources
        WHERE 1 = 0
    
        );
[0m13:04:48.317436 [debug] [Thread-1 (]: SQL status: SUCCESS 28 in 0.0 seconds
[0m13:04:48.329803 [debug] [Thread-1 (]: 
    In "TEST_DB"."TEST_SCHEMA"."ELEMENTARY_TEST_RESULTS":
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m13:04:48.335276 [debug] [Thread-1 (]: Writing runtime sql for node "model.elementary.elementary_test_results"
[0m13:04:48.339659 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.elementary_test_results"
[0m13:04:48.340389 [debug] [Thread-1 (]: On model.elementary.elementary_test_results: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.elementary_test_results"} */
-- back compat for old kwarg name
  
  begin;
[0m13:04:48.347928 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:48.352037 [debug] [Thread-2 (]: Timing info for model.elementary.metadata (execute): 13:04:45.903338 => 13:04:48.351792
[0m13:04:48.352483 [debug] [Thread-2 (]: On model.elementary.metadata: Close
[0m13:04:48.417101 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:48.431003 [debug] [Thread-3 (]: Applying DROP to: test_db.test_schema.dbt_tests__dbt_tmp
[0m13:04:48.433042 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_tests"
[0m13:04:48.433600 [debug] [Thread-3 (]: On model.elementary.dbt_tests: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_tests"} */
drop view if exists test_db.test_schema.dbt_tests__dbt_tmp cascade
[0m13:04:48.605739 [debug] [Thread-4 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:48.614949 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_sources"
[0m13:04:48.616556 [debug] [Thread-4 (]: On model.elementary.dbt_sources: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_sources"} */
create or replace  table test_db.test_schema.dbt_sources
         as
        (select * from test_db.test_schema.dbt_sources__tmp_20231120073448107103
        );
[0m13:04:48.617781 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:48.619879 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.elementary_test_results"
[0m13:04:48.620968 [debug] [Thread-1 (]: On model.elementary.elementary_test_results: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.elementary_test_results"} */
merge into test_db.test_schema.elementary_test_results as DBT_INTERNAL_DEST
        using test_db.test_schema.elementary_test_results__dbt_tmp as DBT_INTERNAL_SOURCE
        on (
                DBT_INTERNAL_SOURCE.id = DBT_INTERNAL_DEST.id
            )

    
    when matched then update set
        "ID" = DBT_INTERNAL_SOURCE."ID","DATA_ISSUE_ID" = DBT_INTERNAL_SOURCE."DATA_ISSUE_ID","TEST_EXECUTION_ID" = DBT_INTERNAL_SOURCE."TEST_EXECUTION_ID","TEST_UNIQUE_ID" = DBT_INTERNAL_SOURCE."TEST_UNIQUE_ID","MODEL_UNIQUE_ID" = DBT_INTERNAL_SOURCE."MODEL_UNIQUE_ID","INVOCATION_ID" = DBT_INTERNAL_SOURCE."INVOCATION_ID","DETECTED_AT" = DBT_INTERNAL_SOURCE."DETECTED_AT","CREATED_AT" = DBT_INTERNAL_SOURCE."CREATED_AT","DATABASE_NAME" = DBT_INTERNAL_SOURCE."DATABASE_NAME","SCHEMA_NAME" = DBT_INTERNAL_SOURCE."SCHEMA_NAME","TABLE_NAME" = DBT_INTERNAL_SOURCE."TABLE_NAME","COLUMN_NAME" = DBT_INTERNAL_SOURCE."COLUMN_NAME","TEST_TYPE" = DBT_INTERNAL_SOURCE."TEST_TYPE","TEST_SUB_TYPE" = DBT_INTERNAL_SOURCE."TEST_SUB_TYPE","TEST_RESULTS_DESCRIPTION" = DBT_INTERNAL_SOURCE."TEST_RESULTS_DESCRIPTION","OWNERS" = DBT_INTERNAL_SOURCE."OWNERS","TAGS" = DBT_INTERNAL_SOURCE."TAGS","TEST_RESULTS_QUERY" = DBT_INTERNAL_SOURCE."TEST_RESULTS_QUERY","OTHER" = DBT_INTERNAL_SOURCE."OTHER","TEST_NAME" = DBT_INTERNAL_SOURCE."TEST_NAME","TEST_PARAMS" = DBT_INTERNAL_SOURCE."TEST_PARAMS","SEVERITY" = DBT_INTERNAL_SOURCE."SEVERITY","STATUS" = DBT_INTERNAL_SOURCE."STATUS","FAILURES" = DBT_INTERNAL_SOURCE."FAILURES","TEST_SHORT_NAME" = DBT_INTERNAL_SOURCE."TEST_SHORT_NAME","TEST_ALIAS" = DBT_INTERNAL_SOURCE."TEST_ALIAS","RESULT_ROWS" = DBT_INTERNAL_SOURCE."RESULT_ROWS","FAILED_ROW_COUNT" = DBT_INTERNAL_SOURCE."FAILED_ROW_COUNT"
    

    when not matched then insert
        ("ID", "DATA_ISSUE_ID", "TEST_EXECUTION_ID", "TEST_UNIQUE_ID", "MODEL_UNIQUE_ID", "INVOCATION_ID", "DETECTED_AT", "CREATED_AT", "DATABASE_NAME", "SCHEMA_NAME", "TABLE_NAME", "COLUMN_NAME", "TEST_TYPE", "TEST_SUB_TYPE", "TEST_RESULTS_DESCRIPTION", "OWNERS", "TAGS", "TEST_RESULTS_QUERY", "OTHER", "TEST_NAME", "TEST_PARAMS", "SEVERITY", "STATUS", "FAILURES", "TEST_SHORT_NAME", "TEST_ALIAS", "RESULT_ROWS", "FAILED_ROW_COUNT")
    values
        ("ID", "DATA_ISSUE_ID", "TEST_EXECUTION_ID", "TEST_UNIQUE_ID", "MODEL_UNIQUE_ID", "INVOCATION_ID", "DETECTED_AT", "CREATED_AT", "DATABASE_NAME", "SCHEMA_NAME", "TABLE_NAME", "COLUMN_NAME", "TEST_TYPE", "TEST_SUB_TYPE", "TEST_RESULTS_DESCRIPTION", "OWNERS", "TAGS", "TEST_RESULTS_QUERY", "OTHER", "TEST_NAME", "TEST_PARAMS", "SEVERITY", "STATUS", "FAILURES", "TEST_SHORT_NAME", "TEST_ALIAS", "RESULT_ROWS", "FAILED_ROW_COUNT")

;
[0m13:04:48.738868 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:48.757693 [debug] [Thread-3 (]: Elementary: [dbt_tests] Flattening the artifacts.
[0m13:04:48.842155 [debug] [Thread-3 (]: Elementary: [dbt_tests] Flattened 4 artifacts.
[0m13:04:48.844468 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_tests"
[0m13:04:48.844657 [debug] [Thread-3 (]: On model.elementary.dbt_tests: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_tests"} */
create or replace temporary table test_db.test_schema.dbt_tests__tmp_20231120073448843191
         as
        (
        SELECT
        
            *
        
        FROM test_db.test_schema.dbt_tests
        WHERE 1 = 0
    
        );
[0m13:04:48.845496 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112ca2190>]}
[0m13:04:48.845755 [info ] [Thread-2 (]: 15 of 32 OK created sql table model test_schema.metadata ....................... [[32mSUCCESS 1[0m in 2.95s]
[0m13:04:48.846000 [debug] [Thread-2 (]: Finished running node model.elementary.metadata
[0m13:04:48.846196 [debug] [Thread-2 (]: Began running node model.elementary.schema_columns_snapshot
[0m13:04:48.846482 [info ] [Thread-2 (]: 16 of 32 START sql incremental model test_schema.schema_columns_snapshot ....... [RUN]
[0m13:04:48.846864 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.elementary.metadata, now model.elementary.schema_columns_snapshot)
[0m13:04:48.847034 [debug] [Thread-2 (]: Began compiling node model.elementary.schema_columns_snapshot
[0m13:04:48.852907 [debug] [Thread-2 (]: Writing injected SQL for node "model.elementary.schema_columns_snapshot"
[0m13:04:48.854130 [debug] [Thread-2 (]: Timing info for model.elementary.schema_columns_snapshot (compile): 13:04:48.847129 => 13:04:48.854025
[0m13:04:48.854278 [debug] [Thread-2 (]: Began executing node model.elementary.schema_columns_snapshot
[0m13:04:48.857123 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.schema_columns_snapshot"
[0m13:04:48.857304 [debug] [Thread-2 (]: On model.elementary.schema_columns_snapshot: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.schema_columns_snapshot"} */
create or replace  temporary view test_db.test_schema.schema_columns_snapshot__dbt_tmp
  
   as (
    


    with empty_table as (
            select
            
                
        cast('dummy_string' as varchar) as column_state_id

,
                
        cast('dummy_string' as varchar) as full_column_name

,
                
        cast('dummy_string' as varchar) as full_table_name

,
                
        cast('dummy_string' as varchar) as column_name

,
                
        cast('dummy_string' as varchar) as data_type

,
                
        cast (True as boolean) as is_new

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


            )
        select * from empty_table
        where 1 = 0

  );
[0m13:04:48.857477 [debug] [Thread-2 (]: Opening a new connection, currently in state closed
[0m13:04:49.358491 [debug] [Thread-4 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:49.371896 [debug] [Thread-4 (]: Applying DROP to: test_db.test_schema.dbt_sources__tmp_20231120073448107103
[0m13:04:49.374291 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_sources"
[0m13:04:49.374939 [debug] [Thread-4 (]: On model.elementary.dbt_sources: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_sources"} */
drop table if exists test_db.test_schema.dbt_sources__tmp_20231120073448107103 cascade
[0m13:04:49.390397 [debug] [Thread-1 (]: SQL status: SUCCESS 0 in 1.0 seconds
[0m13:04:49.391262 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.elementary_test_results"
[0m13:04:49.391743 [debug] [Thread-1 (]: On model.elementary.elementary_test_results: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.elementary_test_results"} */
COMMIT
[0m13:04:49.539492 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:49.555451 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_tests"
[0m13:04:49.556152 [debug] [Thread-3 (]: On model.elementary.dbt_tests: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_tests"} */
describe table test_db.test_schema.dbt_tests__tmp_20231120073448843191
[0m13:04:49.688198 [debug] [Thread-4 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:49.698600 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.dbt_sources"
[0m13:04:49.699291 [debug] [Thread-4 (]: On model.elementary.dbt_sources: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_sources"} */
select
      1700445889.697135 as build_timestamp,
      count(*) as row_count
    from test_db.test_schema.dbt_sources
[0m13:04:49.806933 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:49.822188 [debug] [Thread-1 (]: Applying DROP to: test_db.test_schema.elementary_test_results__dbt_tmp
[0m13:04:49.824682 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.elementary_test_results"
[0m13:04:49.826094 [debug] [Thread-1 (]: On model.elementary.elementary_test_results: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.elementary_test_results"} */
drop view if exists test_db.test_schema.elementary_test_results__dbt_tmp cascade
[0m13:04:49.827417 [debug] [Thread-3 (]: SQL status: SUCCESS 27 in 0.0 seconds
[0m13:04:49.831739 [debug] [Thread-3 (]: Elementary: Inserting 4 rows to table test_db.test_schema.dbt_tests__tmp_20231120073448843191
[0m13:04:49.909062 [debug] [Thread-3 (]: Elementary: [1/1] Running insert query.
[0m13:04:49.910303 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_tests"
[0m13:04:49.910558 [debug] [Thread-3 (]: On model.elementary.dbt_tests: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_tests"} */
insert into test_db.test_schema.dbt_tests__tmp_20231120073448843191
         (UNIQUE_ID,DATABASE_NAME,SCHEMA_NAME,NAME,SHORT_NAME,ALIAS,TEST_COLUMN_NAME,SEVERITY,WARN_IF,ERROR_IF,TEST_PARAMS,TEST_NAMESPACE,TAGS,MODEL_TAGS,MODEL_OWNERS,META,DEPENDS_ON_MACROS,DEPENDS_ON_NODES,PARENT_MODEL_UNIQUE_ID,DESCRIPTION,PACKAGE_NAME,TYPE,ORIGINAL_PATH,PATH,GENERATED_AT,METADATA_HASH,QUALITY_DIMENSION) values
    ('test.dbt_suman_local.unique_my_first_dbt_model_id.16e066b321','test_db','test_schema','unique_my_first_dbt_model_id','unique','unique_my_first_dbt_model_id','id','ERROR','!= 0','!= 0','{"column_name": "id", "model": "{{ get_where_subquery(ref(\'my_first_dbt_model\')) }}"}',NULL,'[]','[]','[]','{"description": "This test validates that there are no duplicate values present in a field."}','["macro.dbt.test_unique"]','["model.dbt_suman_local.my_first_dbt_model"]','model.dbt_suman_local.my_first_dbt_model','This test validates that there are no duplicate values present in a field.','dbt_suman_local','generic','models/example/schema.yml','unique_my_first_dbt_model_id.sql','2023-11-20 07:34:48','fe0607a45ab465ba0bf71b230d96115a','uniqueness'),('test.dbt_suman_local.not_null_my_first_dbt_model_id.5fb22c2710','test_db','test_schema','not_null_my_first_dbt_model_id','not_null','not_null_my_first_dbt_model_id','id','ERROR','!= 0','!= 0','{"column_name": "id", "model": "{{ get_where_subquery(ref(\'my_first_dbt_model\')) }}"}',NULL,'[]','[]','[]','{"description": "This test validates that there are no `null` values present in a column."}','["macro.dbt.test_not_null"]','["model.dbt_suman_local.my_first_dbt_model"]','model.dbt_suman_local.my_first_dbt_model','This test validates that there are no `null` values present in a column.','dbt_suman_local','generic','models/example/schema.yml','not_null_my_first_dbt_model_id.sql','2023-11-20 07:34:48','705e068bcade313fab34838ad8be1b30','completeness'),('test.dbt_suman_local.unique_my_second_dbt_model_id.57a0f8c493','test_db','test_schema','unique_my_second_dbt_model_id','unique','unique_my_second_dbt_model_id','id','ERROR','!= 0','!= 0','{"column_name": "id", "model": "{{ get_where_subquery(ref(\'my_second_dbt_model\')) }}"}',NULL,'[]','[]','[]','{"description": "This test validates that there are no duplicate values present in a field."}','["macro.dbt.test_unique"]','["model.dbt_suman_local.my_second_dbt_model"]','model.dbt_suman_local.my_second_dbt_model','This test validates that there are no duplicate values present in a field.','dbt_suman_local','generic','models/example/schema.yml','unique_my_second_dbt_model_id.sql','2023-11-20 07:34:48','530def8b2afa60441a5e605e77b2a146','uniqueness'),('test.dbt_suman_local.not_null_my_second_dbt_model_id.151b76d778','test_db','test_schema','not_null_my_second_dbt_model_id','not_null','not_null_my_second_dbt_model_id','id','ERROR','!= 0','!= 0','{"column_name": "id", "model": "{{ get_where_subquery(ref(\'my_second_dbt_model\')) }}"}',NULL,'[]','[]','[]','{"description": "This test validates that there are no `null` values present in a column."}','["macro.dbt.test_not_null"]','["model.dbt_suman_local.my_second_dbt_model"]','model.dbt_suman_local.my_second_dbt_model','This test validates that there are no `null` values present in a column.','dbt_suman_local','generic','models/example/schema.yml','not_null_my_second_dbt_model_id.sql','2023-11-20 07:34:48','1f2bd1f8c706d22f04c7053a5ee7bb1b','completeness')
[0m13:04:50.031878 [debug] [Thread-4 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:50.034901 [debug] [Thread-4 (]: Timing info for model.elementary.dbt_sources (execute): 13:04:43.794840 => 13:04:50.034719
[0m13:04:50.035221 [debug] [Thread-4 (]: On model.elementary.dbt_sources: Close
[0m13:04:50.152431 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:50.161398 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.elementary_test_results"
[0m13:04:50.162301 [debug] [Thread-1 (]: On model.elementary.elementary_test_results: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.elementary_test_results"} */
select
      1700445890.159568 as build_timestamp,
      count(*) as row_count
    from test_db.test_schema.elementary_test_results
[0m13:04:50.347349 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:50.361385 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.schema_columns_snapshot"
[0m13:04:50.362237 [debug] [Thread-2 (]: On model.elementary.schema_columns_snapshot: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.schema_columns_snapshot"} */
describe table test_db.test_schema.schema_columns_snapshot__dbt_tmp
[0m13:04:50.508619 [debug] [Thread-3 (]: SQL status: SUCCESS 4 in 1.0 seconds
[0m13:04:50.516178 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_tests"
[0m13:04:50.517003 [debug] [Thread-3 (]: On model.elementary.dbt_tests: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_tests"} */
create or replace  table test_db.test_schema.dbt_tests
         as
        (select * from test_db.test_schema.dbt_tests__tmp_20231120073448843191
        );
[0m13:04:50.593416 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113db92d0>]}
[0m13:04:50.595090 [info ] [Thread-4 (]: 12 of 32 OK created sql incremental model test_schema.dbt_sources .............. [[32mSUCCESS 0[0m in 6.83s]
[0m13:04:50.596250 [debug] [Thread-4 (]: Finished running node model.elementary.dbt_sources
[0m13:04:50.597114 [debug] [Thread-4 (]: Began running node model.dbt_suman_local.my_second_dbt_model
[0m13:04:50.597820 [info ] [Thread-4 (]: 17 of 32 SKIP relation test_schema.my_second_dbt_model ......................... [[33mSKIP[0m]
[0m13:04:50.598788 [debug] [Thread-4 (]: Finished running node model.dbt_suman_local.my_second_dbt_model
[0m13:04:50.599580 [debug] [Thread-4 (]: Began running node model.elementary.metrics_anomaly_score
[0m13:04:50.600396 [info ] [Thread-4 (]: 18 of 32 START sql view model test_schema.metrics_anomaly_score ................ [RUN]
[0m13:04:50.601666 [debug] [Thread-4 (]: Re-using an available connection from the pool (formerly model.elementary.dbt_sources, now model.elementary.metrics_anomaly_score)
[0m13:04:50.602174 [debug] [Thread-4 (]: Began compiling node model.elementary.metrics_anomaly_score
[0m13:04:50.635768 [debug] [Thread-4 (]: Writing injected SQL for node "model.elementary.metrics_anomaly_score"
[0m13:04:50.636620 [debug] [Thread-2 (]: SQL status: SUCCESS 8 in 0.0 seconds
[0m13:04:50.637095 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:50.640482 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.schema_columns_snapshot"
[0m13:04:50.642628 [debug] [Thread-1 (]: Timing info for model.elementary.elementary_test_results (execute): 13:04:45.762259 => 13:04:50.642488
[0m13:04:50.642932 [debug] [Thread-2 (]: On model.elementary.schema_columns_snapshot: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.schema_columns_snapshot"} */
describe table test_db.test_schema.schema_columns_snapshot
[0m13:04:50.643200 [debug] [Thread-4 (]: Timing info for model.elementary.metrics_anomaly_score (compile): 13:04:50.602460 => 13:04:50.643077
[0m13:04:50.643460 [debug] [Thread-1 (]: On model.elementary.elementary_test_results: Close
[0m13:04:50.643990 [debug] [Thread-4 (]: Began executing node model.elementary.metrics_anomaly_score
[0m13:04:50.656476 [debug] [Thread-4 (]: Writing runtime sql for node "model.elementary.metrics_anomaly_score"
[0m13:04:50.658923 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.metrics_anomaly_score"
[0m13:04:50.659314 [debug] [Thread-4 (]: On model.elementary.metrics_anomaly_score: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.metrics_anomaly_score"} */
create or replace   view test_db.test_schema.metrics_anomaly_score
  
   as (
    

with data_monitoring_metrics as (

    select * from test_db.test_schema.data_monitoring_metrics

),

time_window_aggregation as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        metric_value,
        source_value,
        bucket_start,
        bucket_end,
        bucket_duration_hours,
        updated_at,
        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,
        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,
        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,
        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,
        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start
    from data_monitoring_metrics
    group by 1,2,3,4,5,6,7,8,9,10,11,12
),

metrics_anomaly_score as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        case
            when training_stddev is null then null
            when training_stddev = 0 then 0
            else (metric_value - training_avg) / (training_stddev)
        end as anomaly_score,
        metric_value as latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        max(updated_at) as updated_at
    from time_window_aggregation
        where
            metric_value is not null
            and training_avg is not null
            and training_set_size >= 7
            and bucket_end >= 
    dateadd(day, cast(-7 as integer), cast(date_trunc('day', 
  current_timestamp::timestamp
) as timestamp))

    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
    order by bucket_end desc


),

final as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        anomaly_score,
        latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        updated_at,
        case
            when abs(anomaly_score) > 3 then true
            else false end
        as is_anomaly
    from metrics_anomaly_score
)

select * from final
  );
[0m13:04:50.659646 [debug] [Thread-4 (]: Opening a new connection, currently in state closed
[0m13:04:50.923193 [debug] [Thread-2 (]: SQL status: SUCCESS 8 in 0.0 seconds
[0m13:04:50.927286 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.schema_columns_snapshot"
[0m13:04:50.927675 [debug] [Thread-2 (]: On model.elementary.schema_columns_snapshot: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.schema_columns_snapshot"} */
describe table test_db.test_schema.schema_columns_snapshot__dbt_tmp
[0m13:04:51.126331 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1160bc290>]}
[0m13:04:51.128170 [info ] [Thread-1 (]: 14 of 32 OK created sql incremental model test_schema.elementary_test_results .. [[32mSUCCESS 0[0m in 5.40s]
[0m13:04:51.129683 [debug] [Thread-1 (]: Finished running node model.elementary.elementary_test_results
[0m13:04:51.130664 [debug] [Thread-1 (]: Began running node model.elementary.monitors_runs
[0m13:04:51.131738 [info ] [Thread-1 (]: 19 of 32 START sql view model test_schema.monitors_runs ........................ [RUN]
[0m13:04:51.133150 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.elementary.elementary_test_results, now model.elementary.monitors_runs)
[0m13:04:51.133849 [debug] [Thread-1 (]: Began compiling node model.elementary.monitors_runs
[0m13:04:51.142359 [debug] [Thread-1 (]: Writing injected SQL for node "model.elementary.monitors_runs"
[0m13:04:51.144396 [debug] [Thread-1 (]: Timing info for model.elementary.monitors_runs (compile): 13:04:51.134380 => 13:04:51.144047
[0m13:04:51.144991 [debug] [Thread-1 (]: Began executing node model.elementary.monitors_runs
[0m13:04:51.211366 [debug] [Thread-1 (]: Writing runtime sql for node "model.elementary.monitors_runs"
[0m13:04:51.211976 [debug] [Thread-2 (]: SQL status: SUCCESS 8 in 0.0 seconds
[0m13:04:51.214215 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.schema_columns_snapshot"
[0m13:04:51.214448 [debug] [Thread-2 (]: On model.elementary.schema_columns_snapshot: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.schema_columns_snapshot"} */
describe table "TEST_DB"."TEST_SCHEMA"."SCHEMA_COLUMNS_SNAPSHOT"
[0m13:04:51.215047 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.monitors_runs"
[0m13:04:51.215263 [debug] [Thread-1 (]: On model.elementary.monitors_runs: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.monitors_runs"} */
create or replace   view test_db.test_schema.monitors_runs
  
   as (
    

with data_monitoring_metrics as (

    select * from test_db.test_schema.data_monitoring_metrics

),

max_bucket_end as (

    select full_table_name,
           column_name,
           metric_name,
           metric_properties,
           max(bucket_end) as last_bucket_end,
           min(bucket_end) as first_bucket_end
    from data_monitoring_metrics
    group by 1,2,3,4

)

select * from max_bucket_end
  );
[0m13:04:51.215588 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:04:51.485173 [debug] [Thread-2 (]: SQL status: SUCCESS 8 in 0.0 seconds
[0m13:04:51.487571 [debug] [Thread-2 (]: 
    In "TEST_DB"."TEST_SCHEMA"."SCHEMA_COLUMNS_SNAPSHOT":
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m13:04:51.490120 [debug] [Thread-2 (]: Writing runtime sql for node "model.elementary.schema_columns_snapshot"
[0m13:04:51.491321 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.schema_columns_snapshot"
[0m13:04:51.491604 [debug] [Thread-2 (]: On model.elementary.schema_columns_snapshot: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.schema_columns_snapshot"} */
-- back compat for old kwarg name
  
  begin;
[0m13:04:51.499155 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:51.502513 [debug] [Thread-3 (]: Applying DROP to: test_db.test_schema.dbt_tests__tmp_20231120073448843191
[0m13:04:51.503300 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_tests"
[0m13:04:51.503549 [debug] [Thread-3 (]: On model.elementary.dbt_tests: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_tests"} */
drop table if exists test_db.test_schema.dbt_tests__tmp_20231120073448843191 cascade
[0m13:04:51.790343 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:51.792063 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:51.793324 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.schema_columns_snapshot"
[0m13:04:51.801659 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.dbt_tests"
[0m13:04:51.802286 [debug] [Thread-2 (]: On model.elementary.schema_columns_snapshot: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.schema_columns_snapshot"} */
merge into test_db.test_schema.schema_columns_snapshot as DBT_INTERNAL_DEST
        using test_db.test_schema.schema_columns_snapshot__dbt_tmp as DBT_INTERNAL_SOURCE
        on (
                DBT_INTERNAL_SOURCE.column_state_id = DBT_INTERNAL_DEST.column_state_id
            )

    
    when matched then update set
        "COLUMN_STATE_ID" = DBT_INTERNAL_SOURCE."COLUMN_STATE_ID","FULL_COLUMN_NAME" = DBT_INTERNAL_SOURCE."FULL_COLUMN_NAME","FULL_TABLE_NAME" = DBT_INTERNAL_SOURCE."FULL_TABLE_NAME","COLUMN_NAME" = DBT_INTERNAL_SOURCE."COLUMN_NAME","DATA_TYPE" = DBT_INTERNAL_SOURCE."DATA_TYPE","IS_NEW" = DBT_INTERNAL_SOURCE."IS_NEW","DETECTED_AT" = DBT_INTERNAL_SOURCE."DETECTED_AT","CREATED_AT" = DBT_INTERNAL_SOURCE."CREATED_AT"
    

    when not matched then insert
        ("COLUMN_STATE_ID", "FULL_COLUMN_NAME", "FULL_TABLE_NAME", "COLUMN_NAME", "DATA_TYPE", "IS_NEW", "DETECTED_AT", "CREATED_AT")
    values
        ("COLUMN_STATE_ID", "FULL_COLUMN_NAME", "FULL_TABLE_NAME", "COLUMN_NAME", "DATA_TYPE", "IS_NEW", "DETECTED_AT", "CREATED_AT")

;
[0m13:04:51.802855 [debug] [Thread-3 (]: On model.elementary.dbt_tests: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_tests"} */
select
      1700445891.800454 as build_timestamp,
      count(*) as row_count
    from test_db.test_schema.dbt_tests
[0m13:04:52.070906 [debug] [Thread-4 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:52.081360 [debug] [Thread-4 (]: Timing info for model.elementary.metrics_anomaly_score (execute): 13:04:50.645598 => 13:04:52.080792
[0m13:04:52.082204 [debug] [Thread-4 (]: On model.elementary.metrics_anomaly_score: Close
[0m13:04:52.121185 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:52.130850 [debug] [Thread-3 (]: Timing info for model.elementary.dbt_tests (execute): 13:04:44.301876 => 13:04:52.130389
[0m13:04:52.131660 [debug] [Thread-3 (]: On model.elementary.dbt_tests: Close
[0m13:04:52.287309 [debug] [Thread-2 (]: SQL status: SUCCESS 0 in 0.0 seconds
[0m13:04:52.289701 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.schema_columns_snapshot"
[0m13:04:52.290578 [debug] [Thread-2 (]: On model.elementary.schema_columns_snapshot: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.schema_columns_snapshot"} */
COMMIT
[0m13:04:52.571723 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11229a8d0>]}
[0m13:04:52.573876 [info ] [Thread-4 (]: 18 of 32 OK created sql view model test_schema.metrics_anomaly_score ........... [[32mSUCCESS 1[0m in 1.97s]
[0m13:04:52.575690 [debug] [Thread-4 (]: Finished running node model.elementary.metrics_anomaly_score
[0m13:04:52.577015 [debug] [Thread-4 (]: Began running node model.elementary.job_run_results
[0m13:04:52.578573 [info ] [Thread-4 (]: 20 of 32 START sql view model test_schema.job_run_results ...................... [RUN]
[0m13:04:52.580084 [debug] [Thread-4 (]: Re-using an available connection from the pool (formerly model.elementary.metrics_anomaly_score, now model.elementary.job_run_results)
[0m13:04:52.580807 [debug] [Thread-4 (]: Began compiling node model.elementary.job_run_results
[0m13:04:52.605835 [debug] [Thread-4 (]: Writing injected SQL for node "model.elementary.job_run_results"
[0m13:04:52.607197 [debug] [Thread-4 (]: Timing info for model.elementary.job_run_results (compile): 13:04:52.581235 => 13:04:52.606964
[0m13:04:52.607594 [debug] [Thread-4 (]: Began executing node model.elementary.job_run_results
[0m13:04:52.613282 [debug] [Thread-4 (]: Writing runtime sql for node "model.elementary.job_run_results"
[0m13:04:52.614098 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1121ba190>]}
[0m13:04:52.614742 [info ] [Thread-3 (]: 13 of 32 OK created sql incremental model test_schema.dbt_tests ................ [[32mSUCCESS 0[0m in 8.35s]
[0m13:04:52.615249 [debug] [Thread-3 (]: Finished running node model.elementary.dbt_tests
[0m13:04:52.615620 [debug] [Thread-3 (]: Began running node model.elementary.model_run_results
[0m13:04:52.616763 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.job_run_results"
[0m13:04:52.617170 [info ] [Thread-3 (]: 21 of 32 START sql view model test_schema.model_run_results .................... [RUN]
[0m13:04:52.617568 [debug] [Thread-4 (]: On model.elementary.job_run_results: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.job_run_results"} */
create or replace   view test_db.test_schema.job_run_results
  
   as (
    





with jobs as (
  select
    job_name,
    job_id,
    job_run_id,
    
min(cast(run_started_at as timestamp))
 as job_run_started_at,
    
max(cast(run_completed_at as timestamp))
 as job_run_completed_at,
    
    datediff(
        second,
        
min(cast(run_started_at as timestamp))
,
        
max(cast(run_completed_at as timestamp))

        )
 as job_run_execution_time
  from test_db.test_schema.dbt_invocations
  where job_id is not null
  group by job_name, job_id, job_run_id
)

select
  job_name as name,
  job_id as id,
  job_run_id as run_id,
  job_run_started_at as run_started_at,
  job_run_completed_at as run_completed_at,
  job_run_execution_time as run_execution_time
from jobs
  );
[0m13:04:52.618245 [debug] [Thread-3 (]: Re-using an available connection from the pool (formerly model.elementary.dbt_tests, now model.elementary.model_run_results)
[0m13:04:52.618574 [debug] [Thread-4 (]: Opening a new connection, currently in state closed
[0m13:04:52.618855 [debug] [Thread-3 (]: Began compiling node model.elementary.model_run_results
[0m13:04:52.628547 [debug] [Thread-3 (]: Writing injected SQL for node "model.elementary.model_run_results"
[0m13:04:52.629562 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:52.632205 [debug] [Thread-2 (]: Applying DROP to: test_db.test_schema.schema_columns_snapshot__dbt_tmp
[0m13:04:52.633126 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.schema_columns_snapshot"
[0m13:04:52.633463 [debug] [Thread-2 (]: On model.elementary.schema_columns_snapshot: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.schema_columns_snapshot"} */
drop view if exists test_db.test_schema.schema_columns_snapshot__dbt_tmp cascade
[0m13:04:52.634562 [debug] [Thread-3 (]: Timing info for model.elementary.model_run_results (compile): 13:04:52.619498 => 13:04:52.634413
[0m13:04:52.634849 [debug] [Thread-3 (]: Began executing node model.elementary.model_run_results
[0m13:04:52.638398 [debug] [Thread-3 (]: Writing runtime sql for node "model.elementary.model_run_results"
[0m13:04:52.640434 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.model_run_results"
[0m13:04:52.640800 [debug] [Thread-3 (]: On model.elementary.model_run_results: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.model_run_results"} */
create or replace   view test_db.test_schema.model_run_results
  
   as (
    

with dbt_run_results as (
    select * from test_db.test_schema.dbt_run_results
),

dbt_models as (
    select * from test_db.test_schema.dbt_models
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    models.database_name,
    models.schema_name,
    coalesce(run_results.materialization, models.materialization) as materialization,
    models.tags,
    models.package_name,
    models.path,
    models.original_path,
    models.owner,
    models.alias,
    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,
    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_first_invocation_of_the_day,
    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_last_invocation_of_the_day
    
FROM dbt_run_results run_results
JOIN dbt_models models ON run_results.unique_id = models.unique_id
  );
[0m13:04:52.641091 [debug] [Thread-3 (]: Opening a new connection, currently in state closed
[0m13:04:52.655481 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:52.657583 [debug] [Thread-1 (]: Timing info for model.elementary.monitors_runs (execute): 13:04:51.145256 => 13:04:52.657465
[0m13:04:52.657796 [debug] [Thread-1 (]: On model.elementary.monitors_runs: Close
[0m13:04:52.908557 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:52.912566 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.schema_columns_snapshot"
[0m13:04:52.912908 [debug] [Thread-2 (]: On model.elementary.schema_columns_snapshot: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.schema_columns_snapshot"} */
select
      1700445892.911879 as build_timestamp,
      count(*) as row_count
    from test_db.test_schema.schema_columns_snapshot
[0m13:04:53.212756 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:04:53.224165 [debug] [Thread-2 (]: Timing info for model.elementary.schema_columns_snapshot (execute): 13:04:48.854363 => 13:04:53.223442
[0m13:04:53.225406 [debug] [Thread-2 (]: On model.elementary.schema_columns_snapshot: Close
[0m13:04:53.498290 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107ef0f10>]}
[0m13:04:53.500035 [info ] [Thread-1 (]: 19 of 32 OK created sql view model test_schema.monitors_runs ................... [[32mSUCCESS 1[0m in 2.37s]
[0m13:04:53.501266 [debug] [Thread-1 (]: Finished running node model.elementary.monitors_runs
[0m13:04:53.503142 [debug] [Thread-1 (]: Began running node model.elementary.snapshot_run_results
[0m13:04:53.503967 [info ] [Thread-1 (]: 22 of 32 START sql view model test_schema.snapshot_run_results ................. [RUN]
[0m13:04:53.505109 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.elementary.monitors_runs, now model.elementary.snapshot_run_results)
[0m13:04:53.505751 [debug] [Thread-1 (]: Began compiling node model.elementary.snapshot_run_results
[0m13:04:53.515703 [debug] [Thread-1 (]: Writing injected SQL for node "model.elementary.snapshot_run_results"
[0m13:04:53.516810 [debug] [Thread-1 (]: Timing info for model.elementary.snapshot_run_results (compile): 13:04:53.506070 => 13:04:53.516527
[0m13:04:53.517254 [debug] [Thread-1 (]: Began executing node model.elementary.snapshot_run_results
[0m13:04:53.526201 [debug] [Thread-1 (]: Writing runtime sql for node "model.elementary.snapshot_run_results"
[0m13:04:53.528226 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.snapshot_run_results"
[0m13:04:53.528715 [debug] [Thread-1 (]: On model.elementary.snapshot_run_results: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.snapshot_run_results"} */
create or replace   view test_db.test_schema.snapshot_run_results
  
   as (
    

with dbt_run_results as (
    select * from test_db.test_schema.dbt_run_results
),

dbt_snapshots as (
    select * from test_db.test_schema.dbt_snapshots
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    snapshots.database_name,
    snapshots.schema_name,
    coalesce(run_results.materialization, snapshots.materialization) as materialization,
    snapshots.tags,
    snapshots.package_name,
    snapshots.path,
    snapshots.original_path,
    snapshots.owner,
    snapshots.alias
FROM dbt_run_results run_results
JOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id
  );
[0m13:04:53.529149 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:04:53.731982 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107eea310>]}
[0m13:04:53.733851 [info ] [Thread-2 (]: 16 of 32 OK created sql incremental model test_schema.schema_columns_snapshot .. [[32mSUCCESS 0[0m in 4.88s]
[0m13:04:53.735261 [debug] [Thread-2 (]: Finished running node model.elementary.schema_columns_snapshot
[0m13:04:53.736694 [debug] [Thread-2 (]: Began running node model.elementary.alerts_dbt_source_freshness
[0m13:04:53.737771 [info ] [Thread-2 (]: 23 of 32 START sql view model test_schema.alerts_dbt_source_freshness .......... [RUN]
[0m13:04:53.738877 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.elementary.schema_columns_snapshot, now model.elementary.alerts_dbt_source_freshness)
[0m13:04:53.739411 [debug] [Thread-2 (]: Began compiling node model.elementary.alerts_dbt_source_freshness
[0m13:04:53.750259 [debug] [Thread-2 (]: Writing injected SQL for node "model.elementary.alerts_dbt_source_freshness"
[0m13:04:53.751271 [debug] [Thread-2 (]: Timing info for model.elementary.alerts_dbt_source_freshness (compile): 13:04:53.739733 => 13:04:53.750995
[0m13:04:53.751728 [debug] [Thread-2 (]: Began executing node model.elementary.alerts_dbt_source_freshness
[0m13:04:53.758420 [debug] [Thread-2 (]: Writing runtime sql for node "model.elementary.alerts_dbt_source_freshness"
[0m13:04:53.760837 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.alerts_dbt_source_freshness"
[0m13:04:53.761267 [debug] [Thread-2 (]: On model.elementary.alerts_dbt_source_freshness: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.alerts_dbt_source_freshness"} */
create or replace   view test_db.test_schema.alerts_dbt_source_freshness
  
   as (
    

with results as (
  select * from test_db.test_schema.dbt_source_freshness_results
),

sources as (
  select * from test_db.test_schema.dbt_sources
)

select
  results.source_freshness_execution_id as alert_id,
  results.max_loaded_at,
  results.snapshotted_at,
  results.generated_at as detected_at,
  results.max_loaded_at_time_ago_in_s,
  results.status,
  results.error,
  results.warn_after,
  results.error_after,
  results.filter,
  sources.unique_id,
  sources.database_name,
  sources.schema_name,
  sources.source_name,
  sources.identifier,
  sources.tags,
  sources.meta,
  sources.owner,
  sources.package_name,
  sources.path
from results
join sources on results.unique_id = sources.unique_id
where True and lower(status) != 'pass'
  );
[0m13:04:53.761664 [debug] [Thread-2 (]: Opening a new connection, currently in state closed
[0m13:04:54.088814 [debug] [Thread-4 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:54.093052 [debug] [Thread-4 (]: Timing info for model.elementary.job_run_results (execute): 13:04:52.607815 => 13:04:54.092803
[0m13:04:54.093506 [debug] [Thread-4 (]: On model.elementary.job_run_results: Close
[0m13:04:54.181415 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 2.0 seconds
[0m13:04:54.191292 [debug] [Thread-3 (]: Timing info for model.elementary.model_run_results (execute): 13:04:52.634998 => 13:04:54.190714
[0m13:04:54.192430 [debug] [Thread-3 (]: On model.elementary.model_run_results: Close
[0m13:04:54.561130 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112a24a50>]}
[0m13:04:54.561908 [info ] [Thread-4 (]: 20 of 32 OK created sql view model test_schema.job_run_results ................. [[32mSUCCESS 1[0m in 1.98s]
[0m13:04:54.562573 [debug] [Thread-4 (]: Finished running node model.elementary.job_run_results
[0m13:04:54.563067 [debug] [Thread-4 (]: Began running node model.elementary.information_schema_columns
[0m13:04:54.563662 [info ] [Thread-4 (]: 24 of 32 START sql view model test_schema.information_schema_columns ........... [RUN]
[0m13:04:54.564579 [debug] [Thread-4 (]: Re-using an available connection from the pool (formerly model.elementary.job_run_results, now model.elementary.information_schema_columns)
[0m13:04:54.565045 [debug] [Thread-4 (]: Began compiling node model.elementary.information_schema_columns
[0m13:04:54.588892 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.information_schema_columns"
[0m13:04:54.589220 [debug] [Thread-4 (]: On model.elementary.information_schema_columns: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.information_schema_columns"} */
select count(*)
        from test_db.INFORMATION_SCHEMA.schemata
        where upper(schema_name) = upper('test_schema')
            and upper(catalog_name) = upper('test_db')
[0m13:04:54.589489 [debug] [Thread-4 (]: Opening a new connection, currently in state closed
[0m13:04:54.660242 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112ae5550>]}
[0m13:04:54.661144 [info ] [Thread-3 (]: 21 of 32 OK created sql view model test_schema.model_run_results ............... [[32mSUCCESS 1[0m in 2.04s]
[0m13:04:54.661961 [debug] [Thread-3 (]: Finished running node model.elementary.model_run_results
[0m13:04:54.662572 [debug] [Thread-3 (]: Began running node model.elementary.alerts_anomaly_detection
[0m13:04:54.663387 [info ] [Thread-3 (]: 25 of 32 START sql view model test_schema.alerts_anomaly_detection ............. [RUN]
[0m13:04:54.664454 [debug] [Thread-3 (]: Re-using an available connection from the pool (formerly model.elementary.model_run_results, now model.elementary.alerts_anomaly_detection)
[0m13:04:54.664973 [debug] [Thread-3 (]: Began compiling node model.elementary.alerts_anomaly_detection
[0m13:04:54.675723 [debug] [Thread-3 (]: Writing injected SQL for node "model.elementary.alerts_anomaly_detection"
[0m13:04:54.676598 [debug] [Thread-3 (]: Timing info for model.elementary.alerts_anomaly_detection (compile): 13:04:54.665238 => 13:04:54.676371
[0m13:04:54.676956 [debug] [Thread-3 (]: Began executing node model.elementary.alerts_anomaly_detection
[0m13:04:54.682856 [debug] [Thread-3 (]: Writing runtime sql for node "model.elementary.alerts_anomaly_detection"
[0m13:04:54.684537 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.alerts_anomaly_detection"
[0m13:04:54.684942 [debug] [Thread-3 (]: On model.elementary.alerts_anomaly_detection: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.alerts_anomaly_detection"} */
create or replace   view test_db.test_schema.alerts_anomaly_detection
  
   as (
    

with elementary_test_results as (
    select * from test_db.test_schema.elementary_test_results
),

alerts_anomaly_detection as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'
)

select * from alerts_anomaly_detection
  );
[0m13:04:54.685292 [debug] [Thread-3 (]: Opening a new connection, currently in state closed
[0m13:04:54.964122 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:54.967809 [debug] [Thread-1 (]: Timing info for model.elementary.snapshot_run_results (execute): 13:04:53.517501 => 13:04:54.967591
[0m13:04:54.968224 [debug] [Thread-1 (]: On model.elementary.snapshot_run_results: Close
[0m13:04:55.281280 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 2.0 seconds
[0m13:04:55.286323 [debug] [Thread-2 (]: Timing info for model.elementary.alerts_dbt_source_freshness (execute): 13:04:53.751992 => 13:04:55.286078
[0m13:04:55.286840 [debug] [Thread-2 (]: On model.elementary.alerts_dbt_source_freshness: Close
[0m13:04:55.544083 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1121c4fd0>]}
[0m13:04:55.546122 [info ] [Thread-1 (]: 22 of 32 OK created sql view model test_schema.snapshot_run_results ............ [[32mSUCCESS 1[0m in 2.04s]
[0m13:04:55.547335 [debug] [Thread-1 (]: Finished running node model.elementary.snapshot_run_results
[0m13:04:55.548269 [debug] [Thread-1 (]: Began running node model.elementary.alerts_dbt_tests
[0m13:04:55.549365 [info ] [Thread-1 (]: 26 of 32 START sql view model test_schema.alerts_dbt_tests ..................... [RUN]
[0m13:04:55.550492 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.elementary.snapshot_run_results, now model.elementary.alerts_dbt_tests)
[0m13:04:55.551017 [debug] [Thread-1 (]: Began compiling node model.elementary.alerts_dbt_tests
[0m13:04:55.565261 [debug] [Thread-1 (]: Writing injected SQL for node "model.elementary.alerts_dbt_tests"
[0m13:04:55.566693 [debug] [Thread-1 (]: Timing info for model.elementary.alerts_dbt_tests (compile): 13:04:55.551332 => 13:04:55.566400
[0m13:04:55.567142 [debug] [Thread-1 (]: Began executing node model.elementary.alerts_dbt_tests
[0m13:04:55.573328 [debug] [Thread-1 (]: Writing runtime sql for node "model.elementary.alerts_dbt_tests"
[0m13:04:55.575099 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.alerts_dbt_tests"
[0m13:04:55.575555 [debug] [Thread-1 (]: On model.elementary.alerts_dbt_tests: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.alerts_dbt_tests"} */
create or replace   view test_db.test_schema.alerts_dbt_tests
  
   as (
    

with elementary_test_results as (
    select * from test_db.test_schema.elementary_test_results
),

alerts_dbt_tests as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'
)

select * from alerts_dbt_tests
  );
[0m13:04:55.575980 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:04:55.815665 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11393c150>]}
[0m13:04:55.817203 [info ] [Thread-2 (]: 23 of 32 OK created sql view model test_schema.alerts_dbt_source_freshness ..... [[32mSUCCESS 1[0m in 2.08s]
[0m13:04:55.819787 [debug] [Thread-2 (]: Finished running node model.elementary.alerts_dbt_source_freshness
[0m13:04:55.820683 [debug] [Thread-2 (]: Began running node model.elementary.alerts_schema_changes
[0m13:04:55.821485 [info ] [Thread-2 (]: 27 of 32 START sql view model test_schema.alerts_schema_changes ................ [RUN]
[0m13:04:55.822594 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.elementary.alerts_dbt_source_freshness, now model.elementary.alerts_schema_changes)
[0m13:04:55.823149 [debug] [Thread-2 (]: Began compiling node model.elementary.alerts_schema_changes
[0m13:04:55.835966 [debug] [Thread-2 (]: Writing injected SQL for node "model.elementary.alerts_schema_changes"
[0m13:04:55.836985 [debug] [Thread-2 (]: Timing info for model.elementary.alerts_schema_changes (compile): 13:04:55.823467 => 13:04:55.836720
[0m13:04:55.837419 [debug] [Thread-2 (]: Began executing node model.elementary.alerts_schema_changes
[0m13:04:55.845413 [debug] [Thread-2 (]: Writing runtime sql for node "model.elementary.alerts_schema_changes"
[0m13:04:55.847039 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.alerts_schema_changes"
[0m13:04:55.847487 [debug] [Thread-2 (]: On model.elementary.alerts_schema_changes: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.alerts_schema_changes"} */
create or replace   view test_db.test_schema.alerts_schema_changes
  
   as (
    


with elementary_test_results as (
    select * from test_db.test_schema.elementary_test_results
),

alerts_schema_changes as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'
)

select * from alerts_schema_changes
  );
[0m13:04:55.847891 [debug] [Thread-2 (]: Opening a new connection, currently in state closed
[0m13:04:56.133697 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:56.136754 [debug] [Thread-3 (]: Timing info for model.elementary.alerts_anomaly_detection (execute): 13:04:54.677157 => 13:04:56.136577
[0m13:04:56.137083 [debug] [Thread-3 (]: On model.elementary.alerts_anomaly_detection: Close
[0m13:04:56.324766 [debug] [Thread-4 (]: SQL status: SUCCESS 1 in 2.0 seconds
[0m13:04:56.336317 [debug] [Thread-4 (]: Writing injected SQL for node "model.elementary.information_schema_columns"
[0m13:04:56.337256 [debug] [Thread-4 (]: Timing info for model.elementary.information_schema_columns (compile): 13:04:54.565311 => 13:04:56.337029
[0m13:04:56.337666 [debug] [Thread-4 (]: Began executing node model.elementary.information_schema_columns
[0m13:04:56.343280 [debug] [Thread-4 (]: Writing runtime sql for node "model.elementary.information_schema_columns"
[0m13:04:56.345499 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.information_schema_columns"
[0m13:04:56.345942 [debug] [Thread-4 (]: On model.elementary.information_schema_columns: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.information_schema_columns"} */
create or replace   view test_db.test_schema.information_schema_columns
  
   as (
    

    
  
    
  

  with dbt_models_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from test_db.test_schema.dbt_models
  ),

  dbt_snapshots_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from test_db.test_schema.dbt_snapshots
  ),

  dbt_sources_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from test_db.test_schema.dbt_sources
  ),

  dbt_seeds_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from test_db.test_schema.dbt_seeds
  ),

  tables_information as (
      select * from dbt_models_data
      union all
      select * from dbt_sources_data
      union all
      select * from dbt_snapshots_data
      union all
      select * from dbt_seeds_data
  ),

  columns_information as (
      
    
    
    
        (
    
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from test_db.INFORMATION_SCHEMA.COLUMNS
    where upper(table_schema) = upper('test_schema')
    
)
        
    



  ),

  information_schema_columns as (
      select col_info.*
      from tables_information tbl_info
      join columns_information col_info
          on (lower(tbl_info.database_name) = lower(col_info.database_name) and
              lower(tbl_info.schema_name) = lower(col_info.schema_name) and
              lower(tbl_info.table_name) = lower(col_info.table_name)
          )
  )

  select *
  from information_schema_columns


  );
[0m13:04:56.612174 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1121c8910>]}
[0m13:04:56.925293 [debug] [Thread-4 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:56.935085 [debug] [Thread-4 (]: Timing info for model.elementary.information_schema_columns (execute): 13:04:56.337884 => 13:04:56.934637
[0m13:04:56.936700 [debug] [Thread-4 (]: On model.elementary.information_schema_columns: Close
[0m13:04:57.015363 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:04:57.018885 [debug] [Thread-1 (]: Timing info for model.elementary.alerts_dbt_tests (execute): 13:04:55.567399 => 13:04:57.018681
[0m13:04:57.019258 [debug] [Thread-1 (]: On model.elementary.alerts_dbt_tests: Close
[0m13:04:57.354563 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 2.0 seconds
[0m13:04:57.364086 [debug] [Thread-2 (]: Timing info for model.elementary.alerts_schema_changes (execute): 13:04:55.837673 => 13:04:57.363497
[0m13:04:57.364969 [debug] [Thread-2 (]: On model.elementary.alerts_schema_changes: Close
[0m13:04:57.437859 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11167f3d0>]}
[0m13:04:57.502451 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1116ff9d0>]}
[0m13:04:57.858364 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113c27b10>]}
[0m13:04:57.946187 [info ] [Thread-3 (]: 25 of 32 OK created sql view model test_schema.alerts_anomaly_detection ........ [[32mSUCCESS 1[0m in 1.95s]
[0m13:04:57.949371 [debug] [Thread-3 (]: Finished running node model.elementary.alerts_anomaly_detection
[0m13:04:57.947565 [info ] [Thread-4 (]: 24 of 32 OK created sql view model test_schema.information_schema_columns ...... [[32mSUCCESS 1[0m in 2.87s]
[0m13:04:57.950410 [info ] [Thread-1 (]: 26 of 32 OK created sql view model test_schema.alerts_dbt_tests ................ [[32mSUCCESS 1[0m in 1.95s]
[0m13:04:57.951276 [info ] [Thread-2 (]: 27 of 32 OK created sql view model test_schema.alerts_schema_changes ........... [[32mSUCCESS 1[0m in 2.04s]
[0m13:04:57.952530 [debug] [Thread-3 (]: Began running node model.elementary.test_result_rows
[0m13:04:57.953592 [debug] [Thread-4 (]: Finished running node model.elementary.information_schema_columns
[0m13:04:57.954322 [debug] [Thread-1 (]: Finished running node model.elementary.alerts_dbt_tests
[0m13:04:57.955223 [debug] [Thread-2 (]: Finished running node model.elementary.alerts_schema_changes
[0m13:04:57.955970 [info ] [Thread-3 (]: 28 of 32 START sql incremental model test_schema.test_result_rows .............. [RUN]
[0m13:04:57.956671 [debug] [Thread-4 (]: Began running node model.elementary.anomaly_threshold_sensitivity
[0m13:04:57.957469 [debug] [Thread-1 (]: Began running node model.elementary.dbt_artifacts_hashes
[0m13:04:57.958053 [debug] [Thread-2 (]: Began running node model.elementary.alerts_dbt_models
[0m13:04:57.959136 [debug] [Thread-3 (]: Re-using an available connection from the pool (formerly model.elementary.alerts_anomaly_detection, now model.elementary.test_result_rows)
[0m13:04:57.959707 [info ] [Thread-4 (]: 29 of 32 START sql view model test_schema.anomaly_threshold_sensitivity ........ [RUN]
[0m13:04:57.960265 [info ] [Thread-1 (]: 30 of 32 START sql view model test_schema.dbt_artifacts_hashes ................. [RUN]
[0m13:04:57.960801 [info ] [Thread-2 (]: 31 of 32 START sql view model test_schema.alerts_dbt_models .................... [RUN]
[0m13:04:57.961242 [debug] [Thread-3 (]: Began compiling node model.elementary.test_result_rows
[0m13:04:57.962030 [debug] [Thread-4 (]: Re-using an available connection from the pool (formerly model.elementary.information_schema_columns, now model.elementary.anomaly_threshold_sensitivity)
[0m13:04:57.962739 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.elementary.alerts_dbt_tests, now model.elementary.dbt_artifacts_hashes)
[0m13:04:57.963428 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.elementary.alerts_schema_changes, now model.elementary.alerts_dbt_models)
[0m13:04:57.972538 [debug] [Thread-4 (]: Began compiling node model.elementary.anomaly_threshold_sensitivity
[0m13:04:57.978150 [debug] [Thread-3 (]: Writing injected SQL for node "model.elementary.test_result_rows"
[0m13:04:57.978581 [debug] [Thread-1 (]: Began compiling node model.elementary.dbt_artifacts_hashes
[0m13:04:57.978942 [debug] [Thread-2 (]: Began compiling node model.elementary.alerts_dbt_models
[0m13:04:57.987918 [debug] [Thread-4 (]: Writing injected SQL for node "model.elementary.anomaly_threshold_sensitivity"
[0m13:04:57.994197 [debug] [Thread-1 (]: Writing injected SQL for node "model.elementary.dbt_artifacts_hashes"
[0m13:04:57.999373 [debug] [Thread-2 (]: Writing injected SQL for node "model.elementary.alerts_dbt_models"
[0m13:04:57.999801 [debug] [Thread-3 (]: Timing info for model.elementary.test_result_rows (compile): 13:04:57.963692 => 13:04:57.999633
[0m13:04:58.000207 [debug] [Thread-4 (]: Timing info for model.elementary.anomaly_threshold_sensitivity (compile): 13:04:57.979157 => 13:04:58.000038
[0m13:04:58.000519 [debug] [Thread-3 (]: Began executing node model.elementary.test_result_rows
[0m13:04:58.000777 [debug] [Thread-1 (]: Timing info for model.elementary.dbt_artifacts_hashes (compile): 13:04:57.988236 => 13:04:58.000647
[0m13:04:58.001045 [debug] [Thread-4 (]: Began executing node model.elementary.anomaly_threshold_sensitivity
[0m13:04:58.001308 [debug] [Thread-2 (]: Timing info for model.elementary.alerts_dbt_models (compile): 13:04:57.994414 => 13:04:58.001182
[0m13:04:58.005501 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.test_result_rows"
[0m13:04:58.005757 [debug] [Thread-1 (]: Began executing node model.elementary.dbt_artifacts_hashes
[0m13:04:58.009356 [debug] [Thread-4 (]: Writing runtime sql for node "model.elementary.anomaly_threshold_sensitivity"
[0m13:04:58.009592 [debug] [Thread-2 (]: Began executing node model.elementary.alerts_dbt_models
[0m13:04:58.009844 [debug] [Thread-3 (]: On model.elementary.test_result_rows: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.test_result_rows"} */
create or replace  temporary view test_db.test_schema.test_result_rows__dbt_tmp
  
   as (
    

-- depends_on: test_db.test_schema.elementary_test_results
with empty_table as (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as varchar) as elementary_test_results_id

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as result_row

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


            )
        select * from empty_table
        where 1 = 0
  );
[0m13:04:58.012946 [debug] [Thread-1 (]: Writing runtime sql for node "model.elementary.dbt_artifacts_hashes"
[0m13:04:58.015892 [debug] [Thread-2 (]: Writing runtime sql for node "model.elementary.alerts_dbt_models"
[0m13:04:58.016122 [debug] [Thread-3 (]: Opening a new connection, currently in state closed
[0m13:04:58.016963 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.anomaly_threshold_sensitivity"
[0m13:04:58.018136 [debug] [Thread-1 (]: Using snowflake connection "model.elementary.dbt_artifacts_hashes"
[0m13:04:58.018619 [debug] [Thread-4 (]: On model.elementary.anomaly_threshold_sensitivity: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.anomaly_threshold_sensitivity"} */
create or replace   view test_db.test_schema.anomaly_threshold_sensitivity
  
   as (
    

with metrics_anomaly_score as (

    select * from test_db.test_schema.metrics_anomaly_score

),

score_sensitivity as (

    select
        full_table_name,
        column_name,
        metric_name,
        latest_metric_value,
        training_avg as metric_avg,
        training_stddev as metric_stddev,
        anomaly_score,
        case when abs(anomaly_score) >= 1.5 then true else false end as "is_anomaly_1_5",
        case when abs(anomaly_score) >= 2 then true else false end as "is_anomaly_2",
        case when abs(anomaly_score) >= 2.5 then true else false end as "is_anomaly_2_5",
        case when abs(anomaly_score) >= 3 then true else false end as "is_anomaly_3",
        case when abs(anomaly_score) >= 3.5 then true else false end as "is_anomaly_3_5",
        case when abs(anomaly_score) >= 4 then true else false end as "is_anomaly_4",
        case when abs(anomaly_score) >= 4.5 then true else false end as "is_anomaly_4_5"
    from metrics_anomaly_score
    where abs(anomaly_score) >= 1.5

)

select * from score_sensitivity
  );
[0m13:04:58.019701 [debug] [Thread-2 (]: Using snowflake connection "model.elementary.alerts_dbt_models"
[0m13:04:58.019958 [debug] [Thread-1 (]: On model.elementary.dbt_artifacts_hashes: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.dbt_artifacts_hashes"} */
create or replace   view test_db.test_schema.dbt_artifacts_hashes
  
   as (
    




select
  'dbt_models' as artifacts_model,
   metadata_hash
from test_db.test_schema.dbt_models
 union all 

select
  'dbt_tests' as artifacts_model,
   metadata_hash
from test_db.test_schema.dbt_tests
 union all 

select
  'dbt_sources' as artifacts_model,
   metadata_hash
from test_db.test_schema.dbt_sources
 union all 

select
  'dbt_snapshots' as artifacts_model,
   metadata_hash
from test_db.test_schema.dbt_snapshots
 union all 

select
  'dbt_metrics' as artifacts_model,
   metadata_hash
from test_db.test_schema.dbt_metrics
 union all 

select
  'dbt_exposures' as artifacts_model,
   metadata_hash
from test_db.test_schema.dbt_exposures
 union all 

select
  'dbt_seeds' as artifacts_model,
   metadata_hash
from test_db.test_schema.dbt_seeds
 union all 

select
  'dbt_columns' as artifacts_model,
   metadata_hash
from test_db.test_schema.dbt_columns


order by metadata_hash
  );
[0m13:04:58.020170 [debug] [Thread-4 (]: Opening a new connection, currently in state closed
[0m13:04:58.020413 [debug] [Thread-2 (]: On model.elementary.alerts_dbt_models: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.alerts_dbt_models"} */
create or replace   view test_db.test_schema.alerts_dbt_models
  
   as (
    

with error_models as (
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias 
    from test_db.test_schema.model_run_results
  
    union all
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias  
  from test_db.test_schema.snapshot_run_results
)


select model_execution_id as alert_id,
       unique_id,
       generated_at as detected_at,
       database_name,
       materialization,
       path,
       original_path,
       schema_name,
       message,
       owner as owners,
       tags,
       alias,
       status,
       full_refresh
from error_models
where True and lower(status) != 'success'and lower(status) != 'skipped'
  );
[0m13:04:58.020647 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:04:58.021249 [debug] [Thread-2 (]: Opening a new connection, currently in state closed
[0m13:04:59.563106 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 2.0 seconds
[0m13:04:59.573204 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.test_result_rows"
[0m13:04:59.574728 [debug] [Thread-3 (]: On model.elementary.test_result_rows: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.test_result_rows"} */
describe table test_db.test_schema.test_result_rows__dbt_tmp
[0m13:04:59.575933 [debug] [Thread-4 (]: SQL status: SUCCESS 1 in 2.0 seconds
[0m13:04:59.581630 [debug] [Thread-4 (]: Timing info for model.elementary.anomaly_threshold_sensitivity (execute): 13:04:58.005907 => 13:04:59.581353
[0m13:04:59.582195 [debug] [Thread-4 (]: On model.elementary.anomaly_threshold_sensitivity: Close
[0m13:04:59.682152 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 2.0 seconds
[0m13:04:59.691285 [debug] [Thread-2 (]: Timing info for model.elementary.alerts_dbt_models (execute): 13:04:58.013144 => 13:04:59.690919
[0m13:04:59.692068 [debug] [Thread-2 (]: On model.elementary.alerts_dbt_models: Close
[0m13:04:59.756788 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 2.0 seconds
[0m13:04:59.767088 [debug] [Thread-1 (]: Timing info for model.elementary.dbt_artifacts_hashes (execute): 13:04:58.010009 => 13:04:59.766453
[0m13:04:59.768197 [debug] [Thread-1 (]: On model.elementary.dbt_artifacts_hashes: Close
[0m13:04:59.846877 [debug] [Thread-3 (]: SQL status: SUCCESS 4 in 0.0 seconds
[0m13:04:59.860063 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.test_result_rows"
[0m13:04:59.860850 [debug] [Thread-3 (]: On model.elementary.test_result_rows: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.test_result_rows"} */
describe table test_db.test_schema.test_result_rows
[0m13:05:00.073177 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112245690>]}
[0m13:05:00.075404 [info ] [Thread-4 (]: 29 of 32 OK created sql view model test_schema.anomaly_threshold_sensitivity ... [[32mSUCCESS 1[0m in 2.11s]
[0m13:05:00.076953 [debug] [Thread-4 (]: Finished running node model.elementary.anomaly_threshold_sensitivity
[0m13:05:00.077839 [debug] [Thread-4 (]: Began running node model.elementary.enriched_columns
[0m13:05:00.078844 [info ] [Thread-4 (]: 32 of 32 START sql view model test_schema.enriched_columns ..................... [RUN]
[0m13:05:00.080278 [debug] [Thread-4 (]: Re-using an available connection from the pool (formerly model.elementary.anomaly_threshold_sensitivity, now model.elementary.enriched_columns)
[0m13:05:00.080924 [debug] [Thread-4 (]: Began compiling node model.elementary.enriched_columns
[0m13:05:00.091157 [debug] [Thread-4 (]: Writing injected SQL for node "model.elementary.enriched_columns"
[0m13:05:00.093703 [debug] [Thread-4 (]: Timing info for model.elementary.enriched_columns (compile): 13:05:00.081262 => 13:05:00.093173
[0m13:05:00.094262 [debug] [Thread-4 (]: Began executing node model.elementary.enriched_columns
[0m13:05:00.101363 [debug] [Thread-4 (]: Writing runtime sql for node "model.elementary.enriched_columns"
[0m13:05:00.103077 [debug] [Thread-4 (]: Using snowflake connection "model.elementary.enriched_columns"
[0m13:05:00.103524 [debug] [Thread-4 (]: On model.elementary.enriched_columns: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.enriched_columns"} */
create or replace   view test_db.test_schema.enriched_columns
  
   as (
    


with information_schema_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(column_name) as name,
        data_type
    from test_db.test_schema.information_schema_columns
),

dbt_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(name) as name,
        description
    from test_db.test_schema.dbt_columns
)

select
    database_name,
    schema_name,
    table_name,
    name,
    data_type,
    description
from information_schema_columns
left join dbt_columns using (database_name, schema_name, table_name, name)
  );
[0m13:05:00.103943 [debug] [Thread-4 (]: Opening a new connection, currently in state closed
[0m13:05:00.141518 [debug] [Thread-3 (]: SQL status: SUCCESS 4 in 0.0 seconds
[0m13:05:00.150387 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.test_result_rows"
[0m13:05:00.150969 [debug] [Thread-3 (]: On model.elementary.test_result_rows: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.test_result_rows"} */
describe table test_db.test_schema.test_result_rows__dbt_tmp
[0m13:05:00.296102 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1128a6890>]}
[0m13:05:00.298408 [info ] [Thread-1 (]: 30 of 32 OK created sql view model test_schema.dbt_artifacts_hashes ............ [[32mSUCCESS 1[0m in 2.33s]
[0m13:05:00.299710 [debug] [Thread-1 (]: Finished running node model.elementary.dbt_artifacts_hashes
[0m13:05:00.420026 [debug] [Thread-3 (]: SQL status: SUCCESS 4 in 0.0 seconds
[0m13:05:00.425491 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.test_result_rows"
[0m13:05:00.426006 [debug] [Thread-3 (]: On model.elementary.test_result_rows: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.test_result_rows"} */
describe table "TEST_DB"."TEST_SCHEMA"."TEST_RESULT_ROWS"
[0m13:05:00.684268 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10757b7d0>]}
[0m13:05:00.687616 [debug] [Thread-3 (]: SQL status: SUCCESS 4 in 0.0 seconds
[0m13:05:00.689728 [info ] [Thread-2 (]: 31 of 32 OK created sql view model test_schema.alerts_dbt_models ............... [[32mSUCCESS 1[0m in 2.72s]
[0m13:05:00.694044 [debug] [Thread-3 (]: 
    In "TEST_DB"."TEST_SCHEMA"."TEST_RESULT_ROWS":
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m13:05:00.695240 [debug] [Thread-2 (]: Finished running node model.elementary.alerts_dbt_models
[0m13:05:00.700220 [debug] [Thread-3 (]: Writing runtime sql for node "model.elementary.test_result_rows"
[0m13:05:00.705680 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.test_result_rows"
[0m13:05:00.706706 [debug] [Thread-3 (]: On model.elementary.test_result_rows: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.test_result_rows"} */
-- back compat for old kwarg name
  
  begin;
[0m13:05:00.998818 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:05:01.000550 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.test_result_rows"
[0m13:05:01.001280 [debug] [Thread-3 (]: On model.elementary.test_result_rows: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.test_result_rows"} */
merge into test_db.test_schema.test_result_rows as DBT_INTERNAL_DEST
        using test_db.test_schema.test_result_rows__dbt_tmp as DBT_INTERNAL_SOURCE
        on (
                DBT_INTERNAL_SOURCE.elementary_test_results_id = DBT_INTERNAL_DEST.elementary_test_results_id
            )

    
    when matched then update set
        "ELEMENTARY_TEST_RESULTS_ID" = DBT_INTERNAL_SOURCE."ELEMENTARY_TEST_RESULTS_ID","RESULT_ROW" = DBT_INTERNAL_SOURCE."RESULT_ROW","DETECTED_AT" = DBT_INTERNAL_SOURCE."DETECTED_AT","CREATED_AT" = DBT_INTERNAL_SOURCE."CREATED_AT"
    

    when not matched then insert
        ("ELEMENTARY_TEST_RESULTS_ID", "RESULT_ROW", "DETECTED_AT", "CREATED_AT")
    values
        ("ELEMENTARY_TEST_RESULTS_ID", "RESULT_ROW", "DETECTED_AT", "CREATED_AT")

;
[0m13:05:01.775464 [debug] [Thread-3 (]: SQL status: SUCCESS 0 in 1.0 seconds
[0m13:05:01.777185 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.test_result_rows"
[0m13:05:01.778080 [debug] [Thread-3 (]: On model.elementary.test_result_rows: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.test_result_rows"} */
COMMIT
[0m13:05:01.862844 [debug] [Thread-4 (]: SQL status: SUCCESS 1 in 2.0 seconds
[0m13:05:01.872826 [debug] [Thread-4 (]: Timing info for model.elementary.enriched_columns (execute): 13:05:00.094549 => 13:05:01.872291
[0m13:05:01.873983 [debug] [Thread-4 (]: On model.elementary.enriched_columns: Close
[0m13:05:02.203829 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:05:02.217001 [debug] [Thread-3 (]: Applying DROP to: test_db.test_schema.test_result_rows__dbt_tmp
[0m13:05:02.219232 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.test_result_rows"
[0m13:05:02.219885 [debug] [Thread-3 (]: On model.elementary.test_result_rows: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.test_result_rows"} */
drop view if exists test_db.test_schema.test_result_rows__dbt_tmp cascade
[0m13:05:02.351141 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113a61ad0>]}
[0m13:05:02.353554 [info ] [Thread-4 (]: 32 of 32 OK created sql view model test_schema.enriched_columns ................ [[32mSUCCESS 1[0m in 2.27s]
[0m13:05:02.355348 [debug] [Thread-4 (]: Finished running node model.elementary.enriched_columns
[0m13:05:02.507352 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:05:02.536849 [debug] [Thread-3 (]: Using snowflake connection "model.elementary.test_result_rows"
[0m13:05:02.537570 [debug] [Thread-3 (]: On model.elementary.test_result_rows: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "node_id": "model.elementary.test_result_rows"} */
select
      1700445902.535731 as build_timestamp,
      count(*) as row_count
    from test_db.test_schema.test_result_rows
[0m13:05:02.919280 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 0.0 seconds
[0m13:05:02.931098 [debug] [Thread-3 (]: Timing info for model.elementary.test_result_rows (execute): 13:04:58.001444 => 13:05:02.930608
[0m13:05:02.931929 [debug] [Thread-3 (]: On model.elementary.test_result_rows: Close
[0m13:05:03.490015 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06f60e64-5fbc-4e89-9e46-285d3880edd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113925310>]}
[0m13:05:03.491846 [info ] [Thread-3 (]: 28 of 32 OK created sql incremental model test_schema.test_result_rows ......... [[32mSUCCESS 0[0m in 5.53s]
[0m13:05:03.493178 [debug] [Thread-3 (]: Finished running node model.elementary.test_result_rows
[0m13:05:03.496275 [info ] [MainThread]: 
[0m13:05:03.496950 [info ] [MainThread]: Running 1 on-run-end hook
[0m13:05:03.519398 [debug] [MainThread]: Elementary: Inserting 32 metrics into "TEST_DB"."TEST_SCHEMA"."DATA_MONITORING_METRICS".
[0m13:05:03.523922 [debug] [MainThread]: Using snowflake connection "master"
[0m13:05:03.524342 [debug] [MainThread]: On master: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "connection_name": "master"} */
describe table "TEST_DB"."TEST_SCHEMA"."DATA_MONITORING_METRICS"
[0m13:05:03.524694 [debug] [MainThread]: Opening a new connection, currently in state init
[0m13:05:04.888658 [debug] [MainThread]: SQL status: SUCCESS 14 in 1.0 seconds
[0m13:05:04.896526 [debug] [MainThread]: Elementary: Inserting 32 rows to table "TEST_DB"."TEST_SCHEMA"."DATA_MONITORING_METRICS"
[0m13:05:05.107620 [debug] [MainThread]: Elementary: [1/1] Running insert query.
[0m13:05:05.110254 [debug] [MainThread]: Using snowflake connection "master"
[0m13:05:05.110701 [debug] [MainThread]: On master: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "connection_name": "master"} */
insert into "TEST_DB"."TEST_SCHEMA"."DATA_MONITORING_METRICS"
         (ID,FULL_TABLE_NAME,COLUMN_NAME,METRIC_NAME,METRIC_VALUE,SOURCE_VALUE,BUCKET_START,BUCKET_END,BUCKET_DURATION_HOURS,UPDATED_AT,DIMENSION,DIMENSION_VALUE,METRIC_PROPERTIES,CREATED_AT) values
    ('06f60e64-5fbc-4e89-9e46-285d3880edd8.test_db.test_schema.data_monitoring_metrics','TEST_DB.TEST_SCHEMA.DATA_MONITORING_METRICS',NULL,'build_timestamp',1700445871.655565,NULL,NULL,NULL,NULL,'2023-11-20 07:34:32',NULL,NULL,NULL,
  current_timestamp::timestamp
),('06f60e64-5fbc-4e89-9e46-285d3880edd8.test_db.test_schema.data_monitoring_metrics','TEST_DB.TEST_SCHEMA.DATA_MONITORING_METRICS',NULL,'row_count',160,NULL,NULL,NULL,NULL,'2023-11-20 07:34:32',NULL,NULL,NULL,
  current_timestamp::timestamp
),('06f60e64-5fbc-4e89-9e46-285d3880edd8.test_db.test_schema.dbt_exposures','TEST_DB.TEST_SCHEMA.DBT_EXPOSURES',NULL,'build_timestamp',1700445872.943725,NULL,NULL,NULL,NULL,'2023-11-20 07:34:33',NULL,NULL,NULL,
  current_timestamp::timestamp
),('06f60e64-5fbc-4e89-9e46-285d3880edd8.test_db.test_schema.dbt_exposures','TEST_DB.TEST_SCHEMA.DBT_EXPOSURES',NULL,'row_count',0,NULL,NULL,NULL,NULL,'2023-11-20 07:34:33',NULL,NULL,NULL,
  current_timestamp::timestamp
),('06f60e64-5fbc-4e89-9e46-285d3880edd8.test_db.test_schema.dbt_invocations','TEST_DB.TEST_SCHEMA.DBT_INVOCATIONS',NULL,'build_timestamp',1700445872.955578,NULL,NULL,NULL,NULL,'2023-11-20 07:34:33',NULL,NULL,NULL,
  current_timestamp::timestamp
),('06f60e64-5fbc-4e89-9e46-285d3880edd8.test_db.test_schema.dbt_invocations','TEST_DB.TEST_SCHEMA.DBT_INVOCATIONS',NULL,'row_count',7,NULL,NULL,NULL,NULL,'2023-11-20 07:34:33',NULL,NULL,NULL,
  current_timestamp::timestamp
),('06f60e64-5fbc-4e89-9e46-285d3880edd8.test_db.test_schema.dbt_columns','TEST_DB.TEST_SCHEMA.DBT_COLUMNS',NULL,'build_timestamp',1700445876.723802,NULL,NULL,NULL,NULL,'2023-11-20 07:34:37',NULL,NULL,NULL,
  current_timestamp::timestamp
),('06f60e64-5fbc-4e89-9e46-285d3880edd8.test_db.test_schema.dbt_columns','TEST_DB.TEST_SCHEMA.DBT_COLUMNS',NULL,'row_count',166,NULL,NULL,NULL,NULL,'2023-11-20 07:34:37',NULL,NULL,NULL,
  current_timestamp::timestamp
),('06f60e64-5fbc-4e89-9e46-285d3880edd8.test_db.test_schema.dbt_metrics','TEST_DB.TEST_SCHEMA.DBT_METRICS',NULL,'build_timestamp',1700445878.574134,NULL,NULL,NULL,NULL,'2023-11-20 07:34:38',NULL,NULL,NULL,
  current_timestamp::timestamp
),('06f60e64-5fbc-4e89-9e46-285d3880edd8.test_db.test_schema.dbt_metrics','TEST_DB.TEST_SCHEMA.DBT_METRICS',NULL,'row_count',0,NULL,NULL,NULL,NULL,'2023-11-20 07:34:38',NULL,NULL,NULL,
  current_timestamp::timestamp
),('06f60e64-5fbc-4e89-9e46-285d3880edd8.test_db.test_schema.dbt_run_results','TEST_DB.TEST_SCHEMA.DBT_RUN_RESULTS',NULL,'build_timestamp',1700445879.379735,NULL,NULL,NULL,NULL,'2023-11-20 07:34:39',NULL,NULL,NULL,
  current_timestamp::timestamp
),('06f60e64-5fbc-4e89-9e46-285d3880edd8.test_db.test_schema.dbt_run_results','TEST_DB.TEST_SCHEMA.DBT_RUN_RESULTS',NULL,'row_count',166,NULL,NULL,NULL,NULL,'2023-11-20 07:34:39',NULL,NULL,NULL,
  current_timestamp::timestamp
),('06f60e64-5fbc-4e89-9e46-285d3880edd8.test_db.test_schema.dbt_models','TEST_DB.TEST_SCHEMA.DBT_MODELS',NULL,'build_timestamp',1700445882.848102,NULL,NULL,NULL,NULL,'2023-11-20 07:34:43',NULL,NULL,NULL,
  current_timestamp::timestamp
),('06f60e64-5fbc-4e89-9e46-285d3880edd8.test_db.test_schema.dbt_models','TEST_DB.TEST_SCHEMA.DBT_MODELS',NULL,'row_count',32,NULL,NULL,NULL,NULL,'2023-11-20 07:34:43',NULL,NULL,NULL,
  current_timestamp::timestamp
),('06f60e64-5fbc-4e89-9e46-285d3880edd8.test_db.test_schema.dbt_seeds','TEST_DB.TEST_SCHEMA.DBT_SEEDS',NULL,'build_timestamp',1700445883.428115,NULL,NULL,NULL,NULL,'2023-11-20 07:34:43',NULL,NULL,NULL,
  current_timestamp::timestamp
),('06f60e64-5fbc-4e89-9e46-285d3880edd8.test_db.test_schema.dbt_seeds','TEST_DB.TEST_SCHEMA.DBT_SEEDS',NULL,'row_count',0,NULL,NULL,NULL,NULL,'2023-11-20 07:34:43',NULL,NULL,NULL,
  current_timestamp::timestamp
),('06f60e64-5fbc-4e89-9e46-285d3880edd8.test_db.test_schema.dbt_source_freshness_results','TEST_DB.TEST_SCHEMA.DBT_SOURCE_FRESHNESS_RESULTS',NULL,'build_timestamp',1700445884.885305,NULL,NULL,NULL,NULL,'2023-11-20 07:34:45',NULL,NULL,NULL,
  current_timestamp::timestamp
),('06f60e64-5fbc-4e89-9e46-285d3880edd8.test_db.test_schema.dbt_source_freshness_results','TEST_DB.TEST_SCHEMA.DBT_SOURCE_FRESHNESS_RESULTS',NULL,'row_count',0,NULL,NULL,NULL,NULL,'2023-11-20 07:34:45',NULL,NULL,NULL,
  current_timestamp::timestamp
),('06f60e64-5fbc-4e89-9e46-285d3880edd8.test_db.test_schema.dbt_snapshots','TEST_DB.TEST_SCHEMA.DBT_SNAPSHOTS',NULL,'build_timestamp',1700445885.084292,NULL,NULL,NULL,NULL,'2023-11-20 07:34:45',NULL,NULL,NULL,
  current_timestamp::timestamp
),('06f60e64-5fbc-4e89-9e46-285d3880edd8.test_db.test_schema.dbt_snapshots','TEST_DB.TEST_SCHEMA.DBT_SNAPSHOTS',NULL,'row_count',0,NULL,NULL,NULL,NULL,'2023-11-20 07:34:45',NULL,NULL,NULL,
  current_timestamp::timestamp
),('06f60e64-5fbc-4e89-9e46-285d3880edd8.test_db.test_schema.metadata','TEST_DB.TEST_SCHEMA.METADATA',NULL,'build_timestamp',1700445887.792174,NULL,NULL,NULL,NULL,'2023-11-20 07:34:48',NULL,NULL,NULL,
  current_timestamp::timestamp
),('06f60e64-5fbc-4e89-9e46-285d3880edd8.test_db.test_schema.metadata','TEST_DB.TEST_SCHEMA.METADATA',NULL,'row_count',1,NULL,NULL,NULL,NULL,'2023-11-20 07:34:48',NULL,NULL,NULL,
  current_timestamp::timestamp
),('06f60e64-5fbc-4e89-9e46-285d3880edd8.test_db.test_schema.dbt_sources','TEST_DB.TEST_SCHEMA.DBT_SOURCES',NULL,'build_timestamp',1700445889.697135,NULL,NULL,NULL,NULL,'2023-11-20 07:34:50',NULL,NULL,NULL,
  current_timestamp::timestamp
),('06f60e64-5fbc-4e89-9e46-285d3880edd8.test_db.test_schema.dbt_sources','TEST_DB.TEST_SCHEMA.DBT_SOURCES',NULL,'row_count',0,NULL,NULL,NULL,NULL,'2023-11-20 07:34:50',NULL,NULL,NULL,
  current_timestamp::timestamp
),('06f60e64-5fbc-4e89-9e46-285d3880edd8.test_db.test_schema.elementary_test_results','TEST_DB.TEST_SCHEMA.ELEMENTARY_TEST_RESULTS',NULL,'build_timestamp',1700445890.159568,NULL,NULL,NULL,NULL,'2023-11-20 07:34:50',NULL,NULL,NULL,
  current_timestamp::timestamp
),('06f60e64-5fbc-4e89-9e46-285d3880edd8.test_db.test_schema.elementary_test_results','TEST_DB.TEST_SCHEMA.ELEMENTARY_TEST_RESULTS',NULL,'row_count',8,NULL,NULL,NULL,NULL,'2023-11-20 07:34:50',NULL,NULL,NULL,
  current_timestamp::timestamp
),('06f60e64-5fbc-4e89-9e46-285d3880edd8.test_db.test_schema.dbt_tests','TEST_DB.TEST_SCHEMA.DBT_TESTS',NULL,'build_timestamp',1700445891.800454,NULL,NULL,NULL,NULL,'2023-11-20 07:34:52',NULL,NULL,NULL,
  current_timestamp::timestamp
),('06f60e64-5fbc-4e89-9e46-285d3880edd8.test_db.test_schema.dbt_tests','TEST_DB.TEST_SCHEMA.DBT_TESTS',NULL,'row_count',4,NULL,NULL,NULL,NULL,'2023-11-20 07:34:52',NULL,NULL,NULL,
  current_timestamp::timestamp
),('06f60e64-5fbc-4e89-9e46-285d3880edd8.test_db.test_schema.schema_columns_snapshot','TEST_DB.TEST_SCHEMA.SCHEMA_COLUMNS_SNAPSHOT',NULL,'build_timestamp',1700445892.911879,NULL,NULL,NULL,NULL,'2023-11-20 07:34:53',NULL,NULL,NULL,
  current_timestamp::timestamp
),('06f60e64-5fbc-4e89-9e46-285d3880edd8.test_db.test_schema.schema_columns_snapshot','TEST_DB.TEST_SCHEMA.SCHEMA_COLUMNS_SNAPSHOT',NULL,'row_count',0,NULL,NULL,NULL,NULL,'2023-11-20 07:34:53',NULL,NULL,NULL,
  current_timestamp::timestamp
),('06f60e64-5fbc-4e89-9e46-285d3880edd8.test_db.test_schema.test_result_rows','TEST_DB.TEST_SCHEMA.TEST_RESULT_ROWS',NULL,'build_timestamp',1700445902.535731,NULL,NULL,NULL,NULL,'2023-11-20 07:35:02',NULL,NULL,NULL,
  current_timestamp::timestamp
),('06f60e64-5fbc-4e89-9e46-285d3880edd8.test_db.test_schema.test_result_rows','TEST_DB.TEST_SCHEMA.TEST_RESULT_ROWS',NULL,'row_count',2,NULL,NULL,NULL,NULL,'2023-11-20 07:35:02',NULL,NULL,NULL,
  current_timestamp::timestamp
)
[0m13:05:05.775785 [debug] [MainThread]: SQL status: SUCCESS 32 in 1.0 seconds
[0m13:05:05.805084 [debug] [MainThread]: Using snowflake connection "master"
[0m13:05:05.805639 [debug] [MainThread]: On master: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "connection_name": "master"} */
select artifacts_model, metadata_hash from "TEST_DB"."TEST_SCHEMA"."DBT_ARTIFACTS_HASHES"
    order by metadata_hash
[0m13:05:06.516419 [debug] [MainThread]: SQL status: SUCCESS 202 in 1.0 seconds
[0m13:05:06.526418 [debug] [MainThread]: Elementary: Uploading dbt artifacts.
[0m13:05:06.534479 [debug] [MainThread]: Elementary: [dbt_models] Artifacts already ran.
[0m13:05:06.537168 [debug] [MainThread]: Elementary: [dbt_tests] Artifacts already ran.
[0m13:05:06.539642 [debug] [MainThread]: Elementary: [dbt_sources] Artifacts already ran.
[0m13:05:06.541805 [debug] [MainThread]: Elementary: [dbt_snapshots] Artifacts already ran.
[0m13:05:06.543794 [debug] [MainThread]: Elementary: [dbt_metrics] Artifacts already ran.
[0m13:05:06.545757 [debug] [MainThread]: Elementary: [dbt_exposures] Artifacts already ran.
[0m13:05:06.548454 [debug] [MainThread]: Elementary: [dbt_seeds] Artifacts already ran.
[0m13:05:06.550237 [debug] [MainThread]: Elementary: [dbt_columns] Artifacts already ran.
[0m13:05:06.551644 [debug] [MainThread]: Elementary: Uploaded dbt artifacts.
[0m13:05:06.557575 [debug] [MainThread]: Elementary: Uploading run results.
[0m13:05:06.558993 [debug] [MainThread]: Elementary: [DBT_RUN_RESULTS] Flattening the artifacts.
[0m13:05:06.607704 [debug] [MainThread]: Elementary: [DBT_RUN_RESULTS] Flattened 32 artifacts.
[0m13:05:06.610062 [debug] [MainThread]: Using snowflake connection "master"
[0m13:05:06.610223 [debug] [MainThread]: On master: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "connection_name": "master"} */
describe table "TEST_DB"."TEST_SCHEMA"."DBT_RUN_RESULTS"
[0m13:05:06.862392 [debug] [MainThread]: SQL status: SUCCESS 22 in 0.0 seconds
[0m13:05:06.871171 [debug] [MainThread]: Elementary: Inserting 32 rows to table "TEST_DB"."TEST_SCHEMA"."DBT_RUN_RESULTS"
[0m13:05:07.218964 [debug] [MainThread]: Elementary: [1/1] Running insert query.
[0m13:05:07.225637 [debug] [MainThread]: Using snowflake connection "master"
[0m13:05:07.227643 [debug] [MainThread]: On master: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "connection_name": "master"} */
insert into "TEST_DB"."TEST_SCHEMA"."DBT_RUN_RESULTS"
         (MODEL_EXECUTION_ID,UNIQUE_ID,INVOCATION_ID,GENERATED_AT,CREATED_AT,NAME,MESSAGE,STATUS,RESOURCE_TYPE,EXECUTION_TIME,EXECUTE_STARTED_AT,EXECUTE_COMPLETED_AT,COMPILE_STARTED_AT,COMPILE_COMPLETED_AT,ROWS_AFFECTED,FULL_REFRESH,COMPILED_CODE,FAILURES,QUERY_ID,THREAD_ID,MATERIALIZATION,ADAPTER_RESPONSE) values
    ('06f60e64-5fbc-4e89-9e46-285d3880edd8.model.dbt_suman_local.my_first_dbt_model','model.dbt_suman_local.my_first_dbt_model','06f60e64-5fbc-4e89-9e46-285d3880edd8','2023-11-20 07:35:06',
  current_timestamp::timestamp
,'my_first_dbt_model','Database Error in model my_first_dbt_model (models/example/my_first_dbt_model.sql)\n  001003 (42000): SQL compilation error:\n  syntax error line 15 at position 10 unexpected \'1\'.\n  syntax error line 21 at position 0 unexpected \'select\'.\n  compiled Code at target/run/dbt_suman_local/models/example/my_first_dbt_model.sql','error','model',1.9467971324920654,'2023-11-20T07:34:26.598163Z','2023-11-20T07:34:27.998557Z','2023-11-20T07:34:26.541698Z','2023-11-20T07:34:26.592872Z',NULL,False,'/*\n    Welcome to your first dbt model!\n    Did you know that you can also configure models directly within SQL files?\n    This will override configurations stated in dbt_project.yml\n\n    Try changing "table" to "view" below\n*/\n\n\n\nwith source_data as (\n\n    selet 1 as id\n    union all\n    select null as id\n\n)\n\nselect *\nfrom source_data\n\n/*\n    Uncomment the line below to remove records with null `id` values\n*/\n\n-- where id is not null',NULL,NULL,'Thread-1 (worker)','table','{}'),('06f60e64-5fbc-4e89-9e46-285d3880edd8.model.elementary.data_monitoring_metrics','model.elementary.data_monitoring_metrics','06f60e64-5fbc-4e89-9e46-285d3880edd8','2023-11-20 07:35:06',
  current_timestamp::timestamp
,'data_monitoring_metrics','SUCCESS 0','success','model',6.35828709602356,'2023-11-20T07:34:26.604465Z','2023-11-20T07:34:32.384269Z','2023-11-20T07:34:26.544178Z','2023-11-20T07:34:26.597605Z',0,False,'\n\n\n    \n    \n        \n    \n    with empty_table as (\n            select\n            \n                \n        cast(\'dummy_string\' as varchar) as id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as full_table_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as column_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as metric_name\n\n,\n                \n        cast(123456789.99 as float) as metric_value\n\n,\n                \n        cast(\'dummy_string\' as varchar) as source_value\n\n,\n                cast(\'2091-02-17\' as timestamp) as bucket_start\n\n,\n                cast(\'2091-02-17\' as timestamp) as bucket_end\n\n,\n                \n        cast(123456789 as integer) as bucket_duration_hours\n\n,\n                cast(\'2091-02-17\' as timestamp) as updated_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as dimension\n\n,\n                \n        cast(\'dummy_string\' as varchar) as dimension_value\n\n,\n                \n        cast(\'dummy_string\' as varchar) as metric_properties\n\n,\n                cast(\'2091-02-17\' as timestamp) as created_at\n\n\n            )\n        select * from empty_table\n        where 1 = 0\n',NULL,'01b07366-0504-d68b-0001-d7470004f05a','Thread-2 (worker)','incremental','{"_message": "SUCCESS 0", "code": "SUCCESS", "rows_affected": 0, "query_id": "01b07366-0504-d68b-0001-d7470004f05a"}'),('06f60e64-5fbc-4e89-9e46-285d3880edd8.model.elementary.dbt_exposures','model.elementary.dbt_exposures','06f60e64-5fbc-4e89-9e46-285d3880edd8','2023-11-20 07:35:06',
  current_timestamp::timestamp
,'dbt_exposures','SUCCESS 0','success','model',7.496853828430176,'2023-11-20T07:34:26.650899Z','2023-11-20T07:34:33.430614Z','2023-11-20T07:34:26.581093Z','2023-11-20T07:34:26.645874Z',0,False,'\n\nwith empty_table as (\n            select\n            \n                \n        cast(\'dummy_string\' as varchar) as unique_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as maturity\n\n,\n                \n        cast(\'dummy_string\' as varchar) as type\n\n,\n                \n        cast(\'dummy_string\' as varchar) as owner_email\n\n,\n                \n        cast(\'dummy_string\' as varchar) as owner_name\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as url\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as depends_on_macros\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as depends_on_nodes\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as description\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as tags\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as meta\n\n,\n                \n        cast(\'dummy_string\' as varchar) as package_name\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as original_path\n\n,\n                \n        cast(\'dummy_string\' as varchar) as path\n\n,\n                \n        cast(\'dummy_string\' as varchar) as generated_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as metadata_hash\n\n,\n                \n        cast(\'dummy_string\' as varchar) as label\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as raw_queries\n\n\n            )\n        select * from empty_table\n        where 1 = 0',NULL,'01b07366-0504-d646-0001-d7470004d1e6','Thread-4 (worker)','incremental','{"_message": "SUCCESS 0", "code": "SUCCESS", "rows_affected": 0, "query_id": "01b07366-0504-d646-0001-d7470004d1e6"}'),('06f60e64-5fbc-4e89-9e46-285d3880edd8.model.elementary.dbt_invocations','model.elementary.dbt_invocations','06f60e64-5fbc-4e89-9e46-285d3880edd8','2023-11-20 07:35:06',
  current_timestamp::timestamp
,'dbt_invocations','SUCCESS 0','success','model',5.654307126998901,'2023-11-20T07:34:28.509349Z','2023-11-20T07:34:33.530628Z','2023-11-20T07:34:28.486427Z','2023-11-20T07:34:28.508939Z',0,False,'\n\nwith empty_table as (\n            select\n            \n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as invocation_id\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as job_id\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as job_name\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as job_run_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as run_started_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as run_completed_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as generated_at\n\n,\n                cast(\'2091-02-17\' as timestamp) as created_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as command\n\n,\n                \n        cast(\'dummy_string\' as varchar) as dbt_version\n\n,\n                \n        cast(\'dummy_string\' as varchar) as elementary_version\n\n,\n                \n        cast (True as boolean) as full_refresh\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as invocation_vars\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as vars\n\n,\n                \n        cast(\'dummy_string\' as varchar) as target_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as target_database\n\n,\n                \n        cast(\'dummy_string\' as varchar) as target_schema\n\n,\n                \n        cast(\'dummy_string\' as varchar) as target_profile_name\n\n,\n                \n        cast(123456789 as integer) as threads\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as selected\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as yaml_selector\n\n,\n                \n        cast(\'dummy_string\' as varchar) as project_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as project_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as env\n\n,\n                \n        cast(\'dummy_string\' as varchar) as env_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as cause_category\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as cause\n\n,\n                \n        cast(\'dummy_string\' as varchar) as pull_request_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as git_sha\n\n,\n                \n        cast(\'dummy_string\' as varchar) as orchestrator\n\n,\n                \n        cast(\'dummy_string\' as varchar) as dbt_user\n\n,\n                \n        cast(\'dummy_string\' as varchar) as job_url\n\n,\n                \n        cast(\'dummy_string\' as varchar) as job_run_url\n\n,\n                \n        cast(\'dummy_string\' as varchar) as account_id\n\n\n            )\n        select * from empty_table\n        where 1 = 0',NULL,'01b07366-0504-d615-0001-d74700050066','Thread-1 (worker)','incremental','{"_message": "SUCCESS 0", "code": "SUCCESS", "rows_affected": 0, "query_id": "01b07366-0504-d615-0001-d74700050066"}'),('06f60e64-5fbc-4e89-9e46-285d3880edd8.model.elementary.dbt_columns','model.elementary.dbt_columns','06f60e64-5fbc-4e89-9e46-285d3880edd8','2023-11-20 07:35:06',
  current_timestamp::timestamp
,'dbt_columns','SUCCESS 0','success','model',11.063838958740234,'2023-11-20T07:34:26.646908Z','2023-11-20T07:34:37.111796Z','2023-11-20T07:34:26.570128Z','2023-11-20T07:34:26.597256Z',0,False,'\n\nwith empty_table as (\n            select\n            \n                \n        cast(\'dummy_string\' as varchar) as unique_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as parent_unique_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as data_type\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as tags\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as meta\n\n,\n                \n        cast(\'dummy_string\' as varchar) as database_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as schema_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as table_name\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as description\n\n,\n                \n        cast(\'dummy_string\' as varchar) as resource_type\n\n,\n                \n        cast(\'dummy_string\' as varchar) as generated_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as metadata_hash\n\n\n            )\n        select * from empty_table\n        where 1 = 0',NULL,'01b07366-0504-d615-0001-d74700050062','Thread-3 (worker)','incremental','{"_message": "SUCCESS 0", "code": "SUCCESS", "rows_affected": 0, "query_id": "01b07366-0504-d615-0001-d74700050062"}'),('06f60e64-5fbc-4e89-9e46-285d3880edd8.model.elementary.dbt_metrics','model.elementary.dbt_metrics','06f60e64-5fbc-4e89-9e46-285d3880edd8','2023-11-20 07:35:06',
  current_timestamp::timestamp
,'dbt_metrics','SUCCESS 0','success','model',6.547517776489258,'2023-11-20T07:34:32.945946Z','2023-11-20T07:34:38.881640Z','2023-11-20T07:34:32.906421Z','2023-11-20T07:34:32.945285Z',0,False,'\n\nwith empty_table as (\n            select\n            \n                \n        cast(\'dummy_string\' as varchar) as unique_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as label\n\n,\n                \n        cast(\'dummy_string\' as varchar) as model\n\n,\n                \n        cast(\'dummy_string\' as varchar) as type\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as sql\n\n,\n                \n        cast(\'dummy_string\' as varchar) as timestamp\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as filters\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as time_grains\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as dimensions\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as depends_on_macros\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as depends_on_nodes\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as description\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as tags\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as meta\n\n,\n                \n        cast(\'dummy_string\' as varchar) as package_name\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as original_path\n\n,\n                \n        cast(\'dummy_string\' as varchar) as path\n\n,\n                \n        cast(\'dummy_string\' as varchar) as generated_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as metadata_hash\n\n\n            )\n        select * from empty_table\n        where 1 = 0',NULL,'01b07366-0504-d615-0001-d74700050072','Thread-2 (worker)','incremental','{"_message": "SUCCESS 0", "code": "SUCCESS", "rows_affected": 0, "query_id": "01b07366-0504-d615-0001-d74700050072"}'),('06f60e64-5fbc-4e89-9e46-285d3880edd8.model.elementary.dbt_run_results','model.elementary.dbt_run_results','06f60e64-5fbc-4e89-9e46-285d3880edd8','2023-11-20 07:35:06',
  current_timestamp::timestamp
,'dbt_run_results','SUCCESS 0','success','model',6.030984878540039,'2023-11-20T07:34:34.678591Z','2023-11-20T07:34:39.898735Z','2023-11-20T07:34:34.477901Z','2023-11-20T07:34:34.597409Z',0,False,'\n\nwith empty_table as (\n            select\n            \n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as model_execution_id\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as unique_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as invocation_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as generated_at\n\n,\n                cast(\'2091-02-17\' as timestamp) as created_at\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as name\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as message\n\n,\n                \n        cast(\'dummy_string\' as varchar) as status\n\n,\n                \n        cast(\'dummy_string\' as varchar) as resource_type\n\n,\n                \n        cast(123456789.99 as float) as execution_time\n\n,\n                \n        cast(\'dummy_string\' as varchar) as execute_started_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as execute_completed_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as compile_started_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as compile_completed_at\n\n,\n                \n        cast(31474836478 as bigint) as rows_affected\n\n,\n                \n        cast (True as boolean) as full_refresh\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as compiled_code\n\n,\n                \n        cast(31474836478 as bigint) as failures\n\n,\n                \n        cast(\'dummy_string\' as varchar) as query_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as thread_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as materialization\n\n,\n                \n        cast(\'dummy_string\' as varchar) as adapter_response\n\n\n            )\n        select * from empty_table\n        where 1 = 0',NULL,'01b07366-0504-d615-0001-d7470005007e','Thread-1 (worker)','incremental','{"_message": "SUCCESS 0", "code": "SUCCESS", "rows_affected": 0, "query_id": "01b07366-0504-d615-0001-d7470005007e"}'),('06f60e64-5fbc-4e89-9e46-285d3880edd8.model.elementary.dbt_models','model.elementary.dbt_models','06f60e64-5fbc-4e89-9e46-285d3880edd8','2023-11-20 07:35:06',
  current_timestamp::timestamp
,'dbt_models','SUCCESS 0','success','model',9.638867139816284,'2023-11-20T07:34:34.352741Z','2023-11-20T07:34:43.230749Z','2023-11-20T07:34:34.140374Z','2023-11-20T07:34:34.253264Z',0,False,'\n\nwith empty_table as (\n            select\n            \n                \n        cast(\'dummy_string\' as varchar) as unique_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as alias\n\n,\n                \n        cast(\'dummy_string\' as varchar) as checksum\n\n,\n                \n        cast(\'dummy_string\' as varchar) as materialization\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as tags\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as meta\n\n,\n                \n        cast(\'dummy_string\' as varchar) as owner\n\n,\n                \n        cast(\'dummy_string\' as varchar) as database_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as schema_name\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as depends_on_macros\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as depends_on_nodes\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as description\n\n,\n                \n        cast(\'dummy_string\' as varchar) as name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as package_name\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as original_path\n\n,\n                \n        cast(\'dummy_string\' as varchar) as path\n\n,\n                \n        cast(\'dummy_string\' as varchar) as patch_path\n\n,\n                \n        cast(\'dummy_string\' as varchar) as generated_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as metadata_hash\n\n\n            )\n        select * from empty_table\n        where 1 = 0',NULL,'01b07366-0504-d562-0001-d7470004c1fa','Thread-4 (worker)','incremental','{"_message": "SUCCESS 0", "code": "SUCCESS", "rows_affected": 0, "query_id": "01b07366-0504-d562-0001-d7470004c1fa"}'),('06f60e64-5fbc-4e89-9e46-285d3880edd8.model.elementary.dbt_seeds','model.elementary.dbt_seeds','06f60e64-5fbc-4e89-9e46-285d3880edd8','2023-11-20 07:35:06',
  current_timestamp::timestamp
,'dbt_seeds','SUCCESS 0','success','model',6.64585018157959,'2023-11-20T07:34:37.641414Z','2023-11-20T07:34:43.744655Z','2023-11-20T07:34:37.611036Z','2023-11-20T07:34:37.640664Z',0,False,'\n\nwith empty_table as (\n            select\n            \n                \n        cast(\'dummy_string\' as varchar) as unique_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as alias\n\n,\n                \n        cast(\'dummy_string\' as varchar) as checksum\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as tags\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as meta\n\n,\n                \n        cast(\'dummy_string\' as varchar) as owner\n\n,\n                \n        cast(\'dummy_string\' as varchar) as database_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as schema_name\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as description\n\n,\n                \n        cast(\'dummy_string\' as varchar) as name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as package_name\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as original_path\n\n,\n                \n        cast(\'dummy_string\' as varchar) as path\n\n,\n                \n        cast(\'dummy_string\' as varchar) as generated_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as metadata_hash\n\n\n            )\n        select * from empty_table\n        where 1 = 0',NULL,'01b07366-0504-d615-0001-d74700050086','Thread-3 (worker)','incremental','{"_message": "SUCCESS 0", "code": "SUCCESS", "rows_affected": 0, "query_id": "01b07366-0504-d615-0001-d74700050086"}'),('06f60e64-5fbc-4e89-9e46-285d3880edd8.model.elementary.dbt_source_freshness_results','model.elementary.dbt_source_freshness_results','06f60e64-5fbc-4e89-9e46-285d3880edd8','2023-11-20 07:35:06',
  current_timestamp::timestamp
,'dbt_source_freshness_results','SUCCESS 0','success','model',5.25051212310791,'2023-11-20T07:34:40.616998Z','2023-11-20T07:34:45.205017Z','2023-11-20T07:34:40.538339Z','2023-11-20T07:34:40.604634Z',0,False,'\n\n\n    with empty_table as (\n            select\n            \n                \n        cast(\'dummy_string\' as varchar) as source_freshness_execution_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as unique_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as max_loaded_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as snapshotted_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as generated_at\n\n,\n                cast(\'2091-02-17\' as timestamp) as created_at\n\n,\n                \n        cast(123456789.99 as float) as max_loaded_at_time_ago_in_s\n\n,\n                \n        cast(\'dummy_string\' as varchar) as status\n\n,\n                \n        cast(\'dummy_string\' as varchar) as error\n\n,\n                \n        cast(\'dummy_string\' as varchar) as compile_started_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as compile_completed_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as execute_started_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as execute_completed_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as invocation_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as warn_after\n\n,\n                \n        cast(\'dummy_string\' as varchar) as error_after\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as filter\n\n\n            )\n        select * from empty_table\n        where 1 = 0\n',NULL,'01b07366-0504-d6a5-0001-d7470004e0a6','Thread-1 (worker)','incremental','{"_message": "SUCCESS 0", "code": "SUCCESS", "rows_affected": 0, "query_id": "01b07366-0504-d6a5-0001-d7470004e0a6"}'),('06f60e64-5fbc-4e89-9e46-285d3880edd8.model.elementary.dbt_snapshots','model.elementary.dbt_snapshots','06f60e64-5fbc-4e89-9e46-285d3880edd8','2023-11-20 07:35:06',
  current_timestamp::timestamp
,'dbt_snapshots','SUCCESS 0','success','model',6.397273778915405,'2023-11-20T07:34:39.503418Z','2023-11-20T07:34:45.397175Z','2023-11-20T07:34:39.491877Z','2023-11-20T07:34:39.503059Z',0,False,'\n\nwith empty_table as (\n            select\n            \n                \n        cast(\'dummy_string\' as varchar) as unique_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as alias\n\n,\n                \n        cast(\'dummy_string\' as varchar) as checksum\n\n,\n                \n        cast(\'dummy_string\' as varchar) as materialization\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as tags\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as meta\n\n,\n                \n        cast(\'dummy_string\' as varchar) as owner\n\n,\n                \n        cast(\'dummy_string\' as varchar) as database_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as schema_name\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as depends_on_macros\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as depends_on_nodes\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as description\n\n,\n                \n        cast(\'dummy_string\' as varchar) as name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as package_name\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as original_path\n\n,\n                \n        cast(\'dummy_string\' as varchar) as path\n\n,\n                \n        cast(\'dummy_string\' as varchar) as patch_path\n\n,\n                \n        cast(\'dummy_string\' as varchar) as generated_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as metadata_hash\n\n\n            )\n        select * from empty_table\n        where 1 = 0',NULL,'01b07366-0504-d615-0001-d7470005008e','Thread-2 (worker)','incremental','{"_message": "SUCCESS 0", "code": "SUCCESS", "rows_affected": 0, "query_id": "01b07366-0504-d615-0001-d7470005008e"}'),('06f60e64-5fbc-4e89-9e46-285d3880edd8.model.elementary.metadata','model.elementary.metadata','06f60e64-5fbc-4e89-9e46-285d3880edd8','2023-11-20 07:35:06',
  current_timestamp::timestamp
,'metadata','SUCCESS 1','success','model',2.953336238861084,'2023-11-20T07:34:45.903338Z','2023-11-20T07:34:48.351792Z','2023-11-20T07:34:45.893427Z','2023-11-20T07:34:45.902587Z',1,False,'\n\nSELECT\n    \'0.12.1\' as dbt_pkg_version',NULL,'01b07366-0504-d563-0001-d74700046266','Thread-2 (worker)','table','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b07366-0504-d563-0001-d74700046266"}'),('06f60e64-5fbc-4e89-9e46-285d3880edd8.model.elementary.dbt_sources','model.elementary.dbt_sources','06f60e64-5fbc-4e89-9e46-285d3880edd8','2023-11-20 07:35:06',
  current_timestamp::timestamp
,'dbt_sources','SUCCESS 0','success','model',6.82963490486145,'2023-11-20T07:34:43.794840Z','2023-11-20T07:34:50.034719Z','2023-11-20T07:34:43.764375Z','2023-11-20T07:34:43.794225Z',0,False,'\n\nwith empty_table as (\n            select\n            \n                \n        cast(\'dummy_string\' as varchar) as unique_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as database_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as schema_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as source_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as identifier\n\n,\n                \n        cast(\'dummy_string\' as varchar) as loaded_at_field\n\n,\n                \n        cast(\'dummy_string\' as varchar) as freshness_warn_after\n\n,\n                \n        cast(\'dummy_string\' as varchar) as freshness_error_after\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as freshness_filter\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as freshness_description\n\n,\n                \n        cast(\'dummy_string\' as varchar) as relation_name\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as tags\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as meta\n\n,\n                \n        cast(\'dummy_string\' as varchar) as owner\n\n,\n                \n        cast(\'dummy_string\' as varchar) as package_name\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as original_path\n\n,\n                \n        cast(\'dummy_string\' as varchar) as path\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as source_description\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as description\n\n,\n                \n        cast(\'dummy_string\' as varchar) as generated_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as metadata_hash\n\n\n            )\n        select * from empty_table\n        where 1 = 0',NULL,'01b07366-0504-d6a5-0001-d7470004e0b2','Thread-4 (worker)','incremental','{"_message": "SUCCESS 0", "code": "SUCCESS", "rows_affected": 0, "query_id": "01b07366-0504-d6a5-0001-d7470004e0b2"}'),('06f60e64-5fbc-4e89-9e46-285d3880edd8.model.dbt_suman_local.my_second_dbt_model','model.dbt_suman_local.my_second_dbt_model','06f60e64-5fbc-4e89-9e46-285d3880edd8','2023-11-20 07:35:06',
  current_timestamp::timestamp
,'my_second_dbt_model',NULL,'skipped','model',0.0,NULL,NULL,NULL,NULL,NULL,False,NULL,NULL,NULL,'Thread-4 (worker)','view','{}'),('06f60e64-5fbc-4e89-9e46-285d3880edd8.model.elementary.elementary_test_results','model.elementary.elementary_test_results','06f60e64-5fbc-4e89-9e46-285d3880edd8','2023-11-20 07:35:06',
  current_timestamp::timestamp
,'elementary_test_results','SUCCESS 0','success','model',5.39598274230957,'2023-11-20T07:34:45.762259Z','2023-11-20T07:34:50.642488Z','2023-11-20T07:34:45.731092Z','2023-11-20T07:34:45.761726Z',0,False,'\n\n\n    with empty_table as (\n            select\n            \n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as data_issue_id\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as test_execution_id\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as test_unique_id\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as model_unique_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as invocation_id\n\n,\n                cast(\'2091-02-17\' as timestamp) as detected_at\n\n,\n                cast(\'2091-02-17\' as timestamp) as created_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as database_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as schema_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as table_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as column_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as test_type\n\n,\n                \n        cast(\'dummy_string\' as varchar) as test_sub_type\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as test_results_description\n\n,\n                \n        cast(\'dummy_string\' as varchar) as owners\n\n,\n                \n        cast(\'dummy_string\' as varchar) as tags\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as test_results_query\n\n,\n                \n        cast(\'dummy_string\' as varchar) as other\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as test_name\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as test_params\n\n,\n                \n        cast(\'dummy_string\' as varchar) as severity\n\n,\n                \n        cast(\'dummy_string\' as varchar) as status\n\n,\n                \n        cast(31474836478 as bigint) as failures\n\n,\n                \n        cast(\'dummy_string\' as varchar) as test_short_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as test_alias\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as result_rows\n\n,\n                \n        cast(31474836478 as bigint) as failed_row_count\n\n\n            )\n        select * from empty_table\n        where 1 = 0\n',NULL,'01b07366-0504-d563-0001-d74700046276','Thread-1 (worker)','incremental','{"_message": "SUCCESS 0", "code": "SUCCESS", "rows_affected": 0, "query_id": "01b07366-0504-d563-0001-d74700046276"}'),('06f60e64-5fbc-4e89-9e46-285d3880edd8.model.elementary.metrics_anomaly_score','model.elementary.metrics_anomaly_score','06f60e64-5fbc-4e89-9e46-285d3880edd8','2023-11-20 07:35:06',
  current_timestamp::timestamp
,'metrics_anomaly_score','SUCCESS 1','success','model',1.9701521396636963,'2023-11-20T07:34:50.645598Z','2023-11-20T07:34:52.080792Z','2023-11-20T07:34:50.602460Z','2023-11-20T07:34:50.643077Z',1,False,'\n\nwith data_monitoring_metrics as (\n\n    select * from test_db.test_schema.data_monitoring_metrics\n\n),\n\ntime_window_aggregation as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        metric_value,\n        source_value,\n        bucket_start,\n        bucket_end,\n        bucket_duration_hours,\n        updated_at,\n        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,\n        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,\n        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,\n        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,\n        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start\n    from data_monitoring_metrics\n    group by 1,2,3,4,5,6,7,8,9,10,11,12\n),\n\nmetrics_anomaly_score as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        case\n            when training_stddev is null then null\n            when training_stddev = 0 then 0\n            else (metric_value - training_avg) / (training_stddev)\n        end as anomaly_score,\n        metric_value as latest_metric_value,\n        bucket_start,\n        bucket_end,\n        training_avg,\n        training_stddev,\n        training_start,\n        training_end,\n        training_set_size,\n        max(updated_at) as updated_at\n    from time_window_aggregation\n        where\n            metric_value is not null\n            and training_avg is not null\n            and training_set_size >= 7\n            and bucket_end >= \n    dateadd(day, cast(-7 as integer), cast(date_trunc(\'day\', \n  current_timestamp::timestamp\n) as timestamp))\n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15\n    order by bucket_end desc\n\n\n),\n\nfinal as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        anomaly_score,\n        latest_metric_value,\n        bucket_start,\n        bucket_end,\n        training_avg,\n        training_stddev,\n        training_start,\n        training_end,\n        training_set_size,\n        updated_at,\n        case\n            when abs(anomaly_score) > 3 then true\n            else false end\n        as is_anomaly\n    from metrics_anomaly_score\n)\n\nselect * from final',NULL,'01b07366-0504-d6a5-0001-d7470004e0d6','Thread-4 (worker)','view','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b07366-0504-d6a5-0001-d7470004e0d6"}'),('06f60e64-5fbc-4e89-9e46-285d3880edd8.model.elementary.dbt_tests','model.elementary.dbt_tests','06f60e64-5fbc-4e89-9e46-285d3880edd8','2023-11-20 07:35:06',
  current_timestamp::timestamp
,'dbt_tests','SUCCESS 0','success','model',8.352488040924072,'2023-11-20T07:34:44.301876Z','2023-11-20T07:34:52.130389Z','2023-11-20T07:34:44.263021Z','2023-11-20T07:34:44.301299Z',0,False,'\n\nwith empty_table as (\n            select\n            \n                \n        cast(\'dummy_string\' as varchar) as unique_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as database_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as schema_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as short_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as alias\n\n,\n                \n        cast(\'dummy_string\' as varchar) as test_column_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as severity\n\n,\n                \n        cast(\'dummy_string\' as varchar) as warn_if\n\n,\n                \n        cast(\'dummy_string\' as varchar) as error_if\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as test_params\n\n,\n                \n        cast(\'dummy_string\' as varchar) as test_namespace\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as tags\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as model_tags\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as model_owners\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as meta\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as depends_on_macros\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as depends_on_nodes\n\n,\n                \n        cast(\'dummy_string\' as varchar) as parent_model_unique_id\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as description\n\n,\n                \n        cast(\'dummy_string\' as varchar) as package_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as type\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as original_path\n\n,\n                \n        cast(\'dummy_string\' as varchar) as path\n\n,\n                \n        cast(\'dummy_string\' as varchar) as generated_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as metadata_hash\n\n,\n                \n        cast(\'dummy_string\' as varchar) as quality_dimension\n\n\n            )\n        select * from empty_table\n        where 1 = 0',NULL,'01b07366-0504-d563-0001-d7470004626a','Thread-3 (worker)','incremental','{"_message": "SUCCESS 0", "code": "SUCCESS", "rows_affected": 0, "query_id": "01b07366-0504-d563-0001-d7470004626a"}'),('06f60e64-5fbc-4e89-9e46-285d3880edd8.model.elementary.monitors_runs','model.elementary.monitors_runs','06f60e64-5fbc-4e89-9e46-285d3880edd8','2023-11-20 07:35:06',
  current_timestamp::timestamp
,'monitors_runs','SUCCESS 1','success','model',2.3653900623321533,'2023-11-20T07:34:51.145256Z','2023-11-20T07:34:52.657465Z','2023-11-20T07:34:51.134380Z','2023-11-20T07:34:51.144047Z',1,False,'\n\nwith data_monitoring_metrics as (\n\n    select * from test_db.test_schema.data_monitoring_metrics\n\n),\n\nmax_bucket_end as (\n\n    select full_table_name,\n           column_name,\n           metric_name,\n           metric_properties,\n           max(bucket_end) as last_bucket_end,\n           min(bucket_end) as first_bucket_end\n    from data_monitoring_metrics\n    group by 1,2,3,4\n\n)\n\nselect * from max_bucket_end',NULL,'01b07366-0504-d562-0001-d7470004c232','Thread-1 (worker)','view','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b07366-0504-d562-0001-d7470004c232"}'),('06f60e64-5fbc-4e89-9e46-285d3880edd8.model.elementary.schema_columns_snapshot','model.elementary.schema_columns_snapshot','06f60e64-5fbc-4e89-9e46-285d3880edd8','2023-11-20 07:35:06',
  current_timestamp::timestamp
,'schema_columns_snapshot','SUCCESS 0','success','model',4.884761810302734,'2023-11-20T07:34:48.854363Z','2023-11-20T07:34:53.223442Z','2023-11-20T07:34:48.847129Z','2023-11-20T07:34:48.854025Z',0,False,'\n\n\n    with empty_table as (\n            select\n            \n                \n        cast(\'dummy_string\' as varchar) as column_state_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as full_column_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as full_table_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as column_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as data_type\n\n,\n                \n        cast (True as boolean) as is_new\n\n,\n                cast(\'2091-02-17\' as timestamp) as detected_at\n\n,\n                cast(\'2091-02-17\' as timestamp) as created_at\n\n\n            )\n        select * from empty_table\n        where 1 = 0\n',NULL,'01b07366-0504-d6a5-0001-d7470004e0da','Thread-2 (worker)','incremental','{"_message": "SUCCESS 0", "code": "SUCCESS", "rows_affected": 0, "query_id": "01b07366-0504-d6a5-0001-d7470004e0da"}'),('06f60e64-5fbc-4e89-9e46-285d3880edd8.model.elementary.job_run_results','model.elementary.job_run_results','06f60e64-5fbc-4e89-9e46-285d3880edd8','2023-11-20 07:35:06',
  current_timestamp::timestamp
,'job_run_results','SUCCESS 1','success','model',1.9816842079162598,'2023-11-20T07:34:52.607815Z','2023-11-20T07:34:54.092803Z','2023-11-20T07:34:52.581235Z','2023-11-20T07:34:52.606964Z',1,False,'\n\n\n\n\n\nwith jobs as (\n  select\n    job_name,\n    job_id,\n    job_run_id,\n    \nmin(cast(run_started_at as timestamp))\n as job_run_started_at,\n    \nmax(cast(run_completed_at as timestamp))\n as job_run_completed_at,\n    \n    datediff(\n        second,\n        \nmin(cast(run_started_at as timestamp))\n,\n        \nmax(cast(run_completed_at as timestamp))\n\n        )\n as job_run_execution_time\n  from test_db.test_schema.dbt_invocations\n  where job_id is not null\n  group by job_name, job_id, job_run_id\n)\n\nselect\n  job_name as name,\n  job_id as id,\n  job_run_id as run_id,\n  job_run_started_at as run_started_at,\n  job_run_completed_at as run_completed_at,\n  job_run_execution_time as run_execution_time\nfrom jobs',NULL,'01b07366-0504-d5e9-0001-d74700048262','Thread-4 (worker)','view','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b07366-0504-d5e9-0001-d74700048262"}'),('06f60e64-5fbc-4e89-9e46-285d3880edd8.model.elementary.model_run_results','model.elementary.model_run_results','06f60e64-5fbc-4e89-9e46-285d3880edd8','2023-11-20 07:35:06',
  current_timestamp::timestamp
,'model_run_results','SUCCESS 1','success','model',2.0421929359436035,'2023-11-20T07:34:52.634998Z','2023-11-20T07:34:54.190714Z','2023-11-20T07:34:52.619498Z','2023-11-20T07:34:52.634413Z',1,False,'\n\nwith dbt_run_results as (\n    select * from test_db.test_schema.dbt_run_results\n),\n\ndbt_models as (\n    select * from test_db.test_schema.dbt_models\n)\n\nSELECT\n    run_results.model_execution_id,\n    run_results.unique_id,\n    run_results.invocation_id,\n    run_results.query_id,\n    run_results.name,\n    run_results.generated_at,\n    run_results.status,\n    run_results.full_refresh,\n    run_results.message,\n    run_results.execution_time,\n    run_results.execute_started_at,\n    run_results.execute_completed_at,\n    run_results.compile_started_at,\n    run_results.compile_completed_at,\n    run_results.compiled_code,\n    run_results.adapter_response,\n    run_results.thread_id,\n    models.database_name,\n    models.schema_name,\n    coalesce(run_results.materialization, models.materialization) as materialization,\n    models.tags,\n    models.package_name,\n    models.path,\n    models.original_path,\n    models.owner,\n    models.alias,\n    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,\n    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY \n    date_trunc(\'day\', cast(run_results.generated_at as timestamp))\n ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id\n              THEN TRUE\n              ELSE FALSE \n         END                                                               AS is_the_first_invocation_of_the_day,\n    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY \n    date_trunc(\'day\', cast(run_results.generated_at as timestamp))\n ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id\n              THEN TRUE\n              ELSE FALSE \n         END                                                               AS is_the_last_invocation_of_the_day\n    \nFROM dbt_run_results run_results\nJOIN dbt_models models ON run_results.unique_id = models.unique_id',NULL,'01b07366-0504-d68b-0001-d7470004f09e','Thread-3 (worker)','view','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b07366-0504-d68b-0001-d7470004f09e"}'),('06f60e64-5fbc-4e89-9e46-285d3880edd8.model.elementary.snapshot_run_results','model.elementary.snapshot_run_results','06f60e64-5fbc-4e89-9e46-285d3880edd8','2023-11-20 07:35:06',
  current_timestamp::timestamp
,'snapshot_run_results','SUCCESS 1','success','model',2.038944959640503,'2023-11-20T07:34:53.517501Z','2023-11-20T07:34:54.967591Z','2023-11-20T07:34:53.506070Z','2023-11-20T07:34:53.516527Z',1,False,'\n\nwith dbt_run_results as (\n    select * from test_db.test_schema.dbt_run_results\n),\n\ndbt_snapshots as (\n    select * from test_db.test_schema.dbt_snapshots\n)\n\nSELECT\n    run_results.model_execution_id,\n    run_results.unique_id,\n    run_results.invocation_id,\n    run_results.query_id,\n    run_results.name,\n    run_results.generated_at,\n    run_results.status,\n    run_results.full_refresh,\n    run_results.message,\n    run_results.execution_time,\n    run_results.execute_started_at,\n    run_results.execute_completed_at,\n    run_results.compile_started_at,\n    run_results.compile_completed_at,\n    run_results.compiled_code,\n    run_results.adapter_response,\n    run_results.thread_id,\n    snapshots.database_name,\n    snapshots.schema_name,\n    coalesce(run_results.materialization, snapshots.materialization) as materialization,\n    snapshots.tags,\n    snapshots.package_name,\n    snapshots.path,\n    snapshots.original_path,\n    snapshots.owner,\n    snapshots.alias\nFROM dbt_run_results run_results\nJOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id',NULL,'01b07366-0504-d562-0001-d7470004c236','Thread-1 (worker)','view','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b07366-0504-d562-0001-d7470004c236"}'),('06f60e64-5fbc-4e89-9e46-285d3880edd8.model.elementary.alerts_dbt_source_freshness','model.elementary.alerts_dbt_source_freshness','06f60e64-5fbc-4e89-9e46-285d3880edd8','2023-11-20 07:35:06',
  current_timestamp::timestamp
,'alerts_dbt_source_freshness','SUCCESS 1','success','model',2.0769803524017334,'2023-11-20T07:34:53.751992Z','2023-11-20T07:34:55.286078Z','2023-11-20T07:34:53.739733Z','2023-11-20T07:34:53.750995Z',1,False,'\n\nwith results as (\n  select * from test_db.test_schema.dbt_source_freshness_results\n),\n\nsources as (\n  select * from test_db.test_schema.dbt_sources\n)\n\nselect\n  results.source_freshness_execution_id as alert_id,\n  results.max_loaded_at,\n  results.snapshotted_at,\n  results.generated_at as detected_at,\n  results.max_loaded_at_time_ago_in_s,\n  results.status,\n  results.error,\n  results.warn_after,\n  results.error_after,\n  results.filter,\n  sources.unique_id,\n  sources.database_name,\n  sources.schema_name,\n  sources.source_name,\n  sources.identifier,\n  sources.tags,\n  sources.meta,\n  sources.owner,\n  sources.package_name,\n  sources.path\nfrom results\njoin sources on results.unique_id = sources.unique_id\nwhere True and lower(status) != \'pass\'',NULL,'01b07366-0504-d68b-0001-d7470004f0a2','Thread-2 (worker)','view','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b07366-0504-d68b-0001-d7470004f0a2"}'),('06f60e64-5fbc-4e89-9e46-285d3880edd8.model.elementary.alerts_anomaly_detection','model.elementary.alerts_anomaly_detection','06f60e64-5fbc-4e89-9e46-285d3880edd8','2023-11-20 07:35:06',
  current_timestamp::timestamp
,'alerts_anomaly_detection','SUCCESS 1','success','model',1.9479930400848389,'2023-11-20T07:34:54.677157Z','2023-11-20T07:34:56.136577Z','2023-11-20T07:34:54.665238Z','2023-11-20T07:34:54.676371Z',1,False,'\n\nwith elementary_test_results as (\n    select * from test_db.test_schema.elementary_test_results\n),\n\nalerts_anomaly_detection as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != \'pass\'and lower(status) != \'skipped\'and test_type = \'anomaly_detection\'\n)\n\nselect * from alerts_anomaly_detection',NULL,'01b07366-0504-d562-0001-d7470004c23a','Thread-3 (worker)','view','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b07366-0504-d562-0001-d7470004c23a"}'),('06f60e64-5fbc-4e89-9e46-285d3880edd8.model.elementary.information_schema_columns','model.elementary.information_schema_columns','06f60e64-5fbc-4e89-9e46-285d3880edd8','2023-11-20 07:35:06',
  current_timestamp::timestamp
,'information_schema_columns','SUCCESS 1','success','model',2.8733417987823486,'2023-11-20T07:34:56.337884Z','2023-11-20T07:34:56.934637Z','2023-11-20T07:34:54.565311Z','2023-11-20T07:34:56.337029Z',1,False,'\n\n    \n  \n    \n  \n\n  with dbt_models_data as (\n      select\n          database_name,\n          schema_name,\n          alias as table_name\n      from test_db.test_schema.dbt_models\n  ),\n\n  dbt_snapshots_data as (\n      select\n          database_name,\n          schema_name,\n          alias as table_name\n      from test_db.test_schema.dbt_snapshots\n  ),\n\n  dbt_sources_data as (\n      select\n          database_name,\n          schema_name,\n          name as table_name\n      from test_db.test_schema.dbt_sources\n  ),\n\n  dbt_seeds_data as (\n      select\n          database_name,\n          schema_name,\n          name as table_name\n      from test_db.test_schema.dbt_seeds\n  ),\n\n  tables_information as (\n      select * from dbt_models_data\n      union all\n      select * from dbt_sources_data\n      union all\n      select * from dbt_snapshots_data\n      union all\n      select * from dbt_seeds_data\n  ),\n\n  columns_information as (\n      \n    \n    \n    \n        (\n    \n    select\n        upper(table_catalog || \'.\' || table_schema || \'.\' || table_name) as full_table_name,\n        upper(table_catalog) as database_name,\n        upper(table_schema) as schema_name,\n        upper(table_name) as table_name,\n        upper(column_name) as column_name,\n        data_type\n    from test_db.INFORMATION_SCHEMA.COLUMNS\n    where upper(table_schema) = upper(\'test_schema\')\n    \n)\n        \n    \n\n\n\n  ),\n\n  information_schema_columns as (\n      select col_info.*\n      from tables_information tbl_info\n      join columns_information col_info\n          on (lower(tbl_info.database_name) = lower(col_info.database_name) and\n              lower(tbl_info.schema_name) = lower(col_info.schema_name) and\n              lower(tbl_info.table_name) = lower(col_info.table_name)\n          )\n  )\n\n  select *\n  from information_schema_columns\n\n',NULL,'01b07366-0504-d6a5-0001-d7470004e0e2','Thread-4 (worker)','view','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b07366-0504-d6a5-0001-d7470004e0e2"}'),('06f60e64-5fbc-4e89-9e46-285d3880edd8.model.elementary.alerts_dbt_tests','model.elementary.alerts_dbt_tests','06f60e64-5fbc-4e89-9e46-285d3880edd8','2023-11-20 07:35:06',
  current_timestamp::timestamp
,'alerts_dbt_tests','SUCCESS 1','success','model',1.952085018157959,'2023-11-20T07:34:55.567399Z','2023-11-20T07:34:57.018681Z','2023-11-20T07:34:55.551332Z','2023-11-20T07:34:55.566400Z',1,False,'\n\nwith elementary_test_results as (\n    select * from test_db.test_schema.elementary_test_results\n),\n\nalerts_dbt_tests as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != \'pass\'   and lower(status) != \'skipped\'  and test_type = \'dbt_test\'\n)\n\nselect * from alerts_dbt_tests',NULL,'01b07366-0504-d615-0001-d747000500b6','Thread-1 (worker)','view','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b07366-0504-d615-0001-d747000500b6"}'),('06f60e64-5fbc-4e89-9e46-285d3880edd8.model.elementary.alerts_schema_changes','model.elementary.alerts_schema_changes','06f60e64-5fbc-4e89-9e46-285d3880edd8','2023-11-20 07:35:06',
  current_timestamp::timestamp
,'alerts_schema_changes','SUCCESS 1','success','model',2.035907030105591,'2023-11-20T07:34:55.837673Z','2023-11-20T07:34:57.363497Z','2023-11-20T07:34:55.823467Z','2023-11-20T07:34:55.836720Z',1,False,'\n\n\nwith elementary_test_results as (\n    select * from test_db.test_schema.elementary_test_results\n),\n\nalerts_schema_changes as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != \'pass\'and lower(status) != \'skipped\'and test_type = \'schema_change\'\n)\n\nselect * from alerts_schema_changes',NULL,'01b07366-0504-d68b-0001-d7470004f0aa','Thread-2 (worker)','view','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b07366-0504-d68b-0001-d7470004f0aa"}'),('06f60e64-5fbc-4e89-9e46-285d3880edd8.model.elementary.anomaly_threshold_sensitivity','model.elementary.anomaly_threshold_sensitivity','06f60e64-5fbc-4e89-9e46-285d3880edd8','2023-11-20 07:35:06',
  current_timestamp::timestamp
,'anomaly_threshold_sensitivity','SUCCESS 1','success','model',2.110980987548828,'2023-11-20T07:34:58.005907Z','2023-11-20T07:34:59.581353Z','2023-11-20T07:34:57.979157Z','2023-11-20T07:34:58.000038Z',1,False,'\n\nwith metrics_anomaly_score as (\n\n    select * from test_db.test_schema.metrics_anomaly_score\n\n),\n\nscore_sensitivity as (\n\n    select\n        full_table_name,\n        column_name,\n        metric_name,\n        latest_metric_value,\n        training_avg as metric_avg,\n        training_stddev as metric_stddev,\n        anomaly_score,\n        case when abs(anomaly_score) >= 1.5 then true else false end as "is_anomaly_1_5",\n        case when abs(anomaly_score) >= 2 then true else false end as "is_anomaly_2",\n        case when abs(anomaly_score) >= 2.5 then true else false end as "is_anomaly_2_5",\n        case when abs(anomaly_score) >= 3 then true else false end as "is_anomaly_3",\n        case when abs(anomaly_score) >= 3.5 then true else false end as "is_anomaly_3_5",\n        case when abs(anomaly_score) >= 4 then true else false end as "is_anomaly_4",\n        case when abs(anomaly_score) >= 4.5 then true else false end as "is_anomaly_4_5"\n    from metrics_anomaly_score\n    where abs(anomaly_score) >= 1.5\n\n)\n\nselect * from score_sensitivity',NULL,'01b07366-0504-d6ab-0001-d747000510d2','Thread-4 (worker)','view','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b07366-0504-d6ab-0001-d747000510d2"}'),('06f60e64-5fbc-4e89-9e46-285d3880edd8.model.elementary.dbt_artifacts_hashes','model.elementary.dbt_artifacts_hashes','06f60e64-5fbc-4e89-9e46-285d3880edd8','2023-11-20 07:35:06',
  current_timestamp::timestamp
,'dbt_artifacts_hashes','SUCCESS 1','success','model',2.3332319259643555,'2023-11-20T07:34:58.010009Z','2023-11-20T07:34:59.766453Z','2023-11-20T07:34:57.988236Z','2023-11-20T07:34:58.000647Z',1,False,'\n\n\n\n\nselect\n  \'dbt_models\' as artifacts_model,\n   metadata_hash\nfrom test_db.test_schema.dbt_models\n union all \n\nselect\n  \'dbt_tests\' as artifacts_model,\n   metadata_hash\nfrom test_db.test_schema.dbt_tests\n union all \n\nselect\n  \'dbt_sources\' as artifacts_model,\n   metadata_hash\nfrom test_db.test_schema.dbt_sources\n union all \n\nselect\n  \'dbt_snapshots\' as artifacts_model,\n   metadata_hash\nfrom test_db.test_schema.dbt_snapshots\n union all \n\nselect\n  \'dbt_metrics\' as artifacts_model,\n   metadata_hash\nfrom test_db.test_schema.dbt_metrics\n union all \n\nselect\n  \'dbt_exposures\' as artifacts_model,\n   metadata_hash\nfrom test_db.test_schema.dbt_exposures\n union all \n\nselect\n  \'dbt_seeds\' as artifacts_model,\n   metadata_hash\nfrom test_db.test_schema.dbt_seeds\n union all \n\nselect\n  \'dbt_columns\' as artifacts_model,\n   metadata_hash\nfrom test_db.test_schema.dbt_columns\n\n\norder by metadata_hash',NULL,'01b07366-0504-d68b-0001-d7470004f0ae','Thread-1 (worker)','view','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b07366-0504-d68b-0001-d7470004f0ae"}'),('06f60e64-5fbc-4e89-9e46-285d3880edd8.model.elementary.alerts_dbt_models','model.elementary.alerts_dbt_models','06f60e64-5fbc-4e89-9e46-285d3880edd8','2023-11-20 07:35:06',
  current_timestamp::timestamp
,'alerts_dbt_models','SUCCESS 1','success','model',2.720646858215332,'2023-11-20T07:34:58.013144Z','2023-11-20T07:34:59.690919Z','2023-11-20T07:34:57.994414Z','2023-11-20T07:34:58.001182Z',1,False,'\n\nwith error_models as (\n  \n    select  model_execution_id,\n            unique_id,\n            invocation_id,\n            name,\n            generated_at,\n            status,\n            full_refresh,\n            message,\n            execution_time,\n            execute_started_at,\n            execute_completed_at,\n            compile_started_at,\n            compile_completed_at,\n            compiled_code,\n            database_name,\n            schema_name,\n            materialization,\n            tags,\n            package_name,\n            path,\n            original_path,\n            owner,\n            alias \n    from test_db.test_schema.model_run_results\n  \n    union all\n  \n    select  model_execution_id,\n            unique_id,\n            invocation_id,\n            name,\n            generated_at,\n            status,\n            full_refresh,\n            message,\n            execution_time,\n            execute_started_at,\n            execute_completed_at,\n            compile_started_at,\n            compile_completed_at,\n            compiled_code,\n            database_name,\n            schema_name,\n            materialization,\n            tags,\n            package_name,\n            path,\n            original_path,\n            owner,\n            alias  \n  from test_db.test_schema.snapshot_run_results\n)\n\n\nselect model_execution_id as alert_id,\n       unique_id,\n       generated_at as detected_at,\n       database_name,\n       materialization,\n       path,\n       original_path,\n       schema_name,\n       message,\n       owner as owners,\n       tags,\n       alias,\n       status,\n       full_refresh\nfrom error_models\nwhere True and lower(status) != \'success\'and lower(status) != \'skipped\'',NULL,'01b07366-0504-d646-0001-d7470004d236','Thread-2 (worker)','view','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b07366-0504-d646-0001-d7470004d236"}'),('06f60e64-5fbc-4e89-9e46-285d3880edd8.model.elementary.enriched_columns','model.elementary.enriched_columns','06f60e64-5fbc-4e89-9e46-285d3880edd8','2023-11-20 07:35:06',
  current_timestamp::timestamp
,'enriched_columns','SUCCESS 1','success','model',2.2709169387817383,'2023-11-20T07:35:00.094549Z','2023-11-20T07:35:01.872291Z','2023-11-20T07:35:00.081262Z','2023-11-20T07:35:00.093173Z',1,False,'\n\n\nwith information_schema_columns as (\n    select\n        lower(database_name) as database_name,\n        lower(schema_name) as schema_name,\n        lower(table_name) as table_name,\n        lower(column_name) as name,\n        data_type\n    from test_db.test_schema.information_schema_columns\n),\n\ndbt_columns as (\n    select\n        lower(database_name) as database_name,\n        lower(schema_name) as schema_name,\n        lower(table_name) as table_name,\n        lower(name) as name,\n        description\n    from test_db.test_schema.dbt_columns\n)\n\nselect\n    database_name,\n    schema_name,\n    table_name,\n    name,\n    data_type,\n    description\nfrom information_schema_columns\nleft join dbt_columns using (database_name, schema_name, table_name, name)',NULL,'01b07367-0504-d6ab-0001-d747000510d6','Thread-4 (worker)','view','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b07367-0504-d6ab-0001-d747000510d6"}'),('06f60e64-5fbc-4e89-9e46-285d3880edd8.model.elementary.test_result_rows','model.elementary.test_result_rows','06f60e64-5fbc-4e89-9e46-285d3880edd8','2023-11-20 07:35:06',
  current_timestamp::timestamp
,'test_result_rows','SUCCESS 0','success','model',5.530957221984863,'2023-11-20T07:34:58.001444Z','2023-11-20T07:35:02.930608Z','2023-11-20T07:34:57.963692Z','2023-11-20T07:34:57.999633Z',0,False,'\n\n-- depends_on: test_db.test_schema.elementary_test_results\nwith empty_table as (\n            select\n            \n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as elementary_test_results_id\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as result_row\n\n,\n                cast(\'2091-02-17\' as timestamp) as detected_at\n\n,\n                cast(\'2091-02-17\' as timestamp) as created_at\n\n\n            )\n        select * from empty_table\n        where 1 = 0',NULL,'01b07367-0504-d6a5-0001-d7470004e0ee','Thread-3 (worker)','incremental','{"_message": "SUCCESS 0", "code": "SUCCESS", "rows_affected": 0, "query_id": "01b07367-0504-d6a5-0001-d7470004e0ee"}')
[0m13:05:08.050704 [debug] [MainThread]: SQL status: SUCCESS 32 in 1.0 seconds
[0m13:05:08.055849 [debug] [MainThread]: Elementary: Uploaded run results successfully.
[0m13:05:08.080403 [debug] [MainThread]: Elementary: Uploading dbt invocation.
[0m13:05:08.129504 [debug] [MainThread]: Using snowflake connection "master"
[0m13:05:08.129755 [debug] [MainThread]: On master: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "connection_name": "master"} */
describe table "TEST_DB"."TEST_SCHEMA"."DBT_INVOCATIONS"
[0m13:05:08.848011 [debug] [MainThread]: SQL status: SUCCESS 34 in 1.0 seconds
[0m13:05:08.856184 [debug] [MainThread]: Elementary: Inserting 1 rows to table "TEST_DB"."TEST_SCHEMA"."DBT_INVOCATIONS"
[0m13:05:08.904422 [debug] [MainThread]: Elementary: [1/1] Running insert query.
[0m13:05:08.906496 [debug] [MainThread]: Using snowflake connection "master"
[0m13:05:08.906875 [debug] [MainThread]: On master: /* {"app": "dbt", "dbt_version": "1.7.0", "profile_name": "dbt_suman_local", "target_name": "dev", "connection_name": "master"} */
insert into "TEST_DB"."TEST_SCHEMA"."DBT_INVOCATIONS"
         (INVOCATION_ID,JOB_ID,JOB_NAME,JOB_RUN_ID,RUN_STARTED_AT,RUN_COMPLETED_AT,GENERATED_AT,CREATED_AT,COMMAND,DBT_VERSION,ELEMENTARY_VERSION,FULL_REFRESH,INVOCATION_VARS,VARS,TARGET_NAME,TARGET_DATABASE,TARGET_SCHEMA,TARGET_PROFILE_NAME,THREADS,SELECTED,YAML_SELECTOR,PROJECT_ID,PROJECT_NAME,ENV,ENV_ID,CAUSE_CATEGORY,CAUSE,PULL_REQUEST_ID,GIT_SHA,ORCHESTRATOR,DBT_USER,JOB_URL,JOB_RUN_URL,ACCOUNT_ID) values
    ('06f60e64-5fbc-4e89-9e46-285d3880edd8',NULL,NULL,NULL,'2023-11-20 07:34:22','2023-11-20 07:35:08','2023-11-20 07:35:08',
  current_timestamp::timestamp
,'run','1.7.0','0.12.1',False,'{}','{}','dev','test_db','test_schema','dbt_suman_local',4,'[]',NULL,NULL,'dbt_suman_local',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL)
[0m13:05:09.543609 [debug] [MainThread]: SQL status: SUCCESS 1 in 1.0 seconds
[0m13:05:09.549347 [debug] [MainThread]: Elementary: Uploaded dbt invocation successfully.
[0m13:05:09.552222 [debug] [MainThread]: Writing injected SQL for node "operation.elementary.elementary-on-run-end-0"
[0m13:05:09.554760 [info ] [MainThread]: 1 of 1 START hook: elementary.on-run-end.0 ..................................... [RUN]
[0m13:05:09.555539 [info ] [MainThread]: 1 of 1 OK hook: elementary.on-run-end.0 ........................................ [[32mOK[0m in 0.00s]
[0m13:05:09.556005 [info ] [MainThread]: 
[0m13:05:09.556544 [debug] [MainThread]: On master: Close
[0m13:05:10.040052 [debug] [MainThread]: Connection 'master' was properly closed.
[0m13:05:10.041386 [debug] [MainThread]: Connection 'model.elementary.dbt_artifacts_hashes' was properly closed.
[0m13:05:10.042025 [debug] [MainThread]: Connection 'model.elementary.alerts_dbt_models' was properly closed.
[0m13:05:10.042552 [debug] [MainThread]: Connection 'model.elementary.test_result_rows' was properly closed.
[0m13:05:10.043370 [debug] [MainThread]: Connection 'model.elementary.enriched_columns' was properly closed.
[0m13:05:10.044411 [info ] [MainThread]: 
[0m13:05:10.045120 [info ] [MainThread]: Finished running 2 table models, 15 incremental models, 15 view models, 2 hooks in 0 hours 0 minutes and 47.56 seconds (47.56s).
[0m13:05:10.051940 [debug] [MainThread]: Command end result
[0m13:05:10.083831 [info ] [MainThread]: 
[0m13:05:10.084351 [info ] [MainThread]: [31mCompleted with 1 error and 0 warnings:[0m
[0m13:05:10.084592 [info ] [MainThread]: 
[0m13:05:10.084811 [error] [MainThread]:   Database Error in model my_first_dbt_model (models/example/my_first_dbt_model.sql)
  001003 (42000): SQL compilation error:
  syntax error line 15 at position 10 unexpected '1'.
  syntax error line 21 at position 0 unexpected 'select'.
  compiled Code at target/run/dbt_suman_local/models/example/my_first_dbt_model.sql
[0m13:05:10.085066 [info ] [MainThread]: 
[0m13:05:10.085294 [info ] [MainThread]: Done. PASS=30 WARN=0 ERROR=1 SKIP=1 TOTAL=32
[0m13:05:10.088001 [debug] [MainThread]: Resource report: {"command_name": "run", "command_wall_clock_time": 48.07069, "process_user_time": 10.126032, "process_kernel_time": 0.615502, "process_mem_max_rss": "175226880", "command_success": false, "process_in_blocks": "0", "process_out_blocks": "0"}
[0m13:05:10.088358 [debug] [MainThread]: Command `dbt run` failed at 13:05:10.088275 after 48.07 seconds
[0m13:05:10.088667 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107ee96d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113dd0210>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107f4da10>]}
[0m13:05:10.088952 [debug] [MainThread]: Flushing usage events
